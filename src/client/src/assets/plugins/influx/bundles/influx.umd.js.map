{"version":3,"file":"influx.umd.js","sources":["../../../../app/plugins/datasources/influx/src/settings/settings.html","../../../../app/plugins/datasources/influx/src/settings/settings.ts","../../../../app/plugins/datasources/influx/src/query/query.m.ts","../../../../app/plugins/datasources/influx/src/query/builder.ts","../../../../app/plugins/datasources/influx/src/influx.mod.ts","../../../../app/plugins/datasources/influx/src/public-api.ts","../../../../app/plugins/datasources/influx/src/influx.ts"],"sourcesContent":["<div [formGroup]=\"form\">\r\n\r\n\t<h3 class=\"page-heading\">HTTP</h3>\t\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"URL\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\ttooltip=\"Specify a complete HTTP URL (for example http://your_server:8080)\"\r\n\t\t\tformControlName=\"url\"\t>\r\n\t\t\t<ng-template edValidationTemplate *ngIf=\"url.hasError( 'required' ) && url.touched\">\r\n\t\t\t\tplease enter url\r\n\t\t\t</ng-template>\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"Whitelisted Cookies\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\tformControlName=\"whitelistedCookies\"\t>\r\n\t\t</ed-textbox>\r\n\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">Auth</h3>\r\n\t<div class=\"gf-form-group\">\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Basic Auth\"\r\n\t\t\t\tformControlName=\"basicAuthentication\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With Credentials\"\r\n\t\t\t\ttooltip=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\r\n\t\t\t\tformControlName=\"withCredentials\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"TLS Client Auth\"\r\n\t\t\t\tformControlName=\"tlsClientAuth\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With CA Cert\"\r\n\t\t\t\ttooltip=\"Needed for verifing self-signed TLS Certs\"\r\n\t\t\t\tformControlName=\"withCaCert\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Skip TLS Verify\"\r\n\t\t\t\tformControlName=\"skipTlsVerification\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">InfluxDB Details</h3>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Database'\"\r\n\t\t\t[labelWidth]=\"10\"\r\n\t\t\tformControlName=\"database\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'User'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\tformControlName=\"user\">\r\n\t\t\t</ed-textbox>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'Password'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tformControlName=\"password\">\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-info-box>\r\n\t\t\t<h5>Database Access</h5>\r\n\t\t\t<p>\r\n\t\t\t\tSetting the database for this datasource does not deny access to other databases.  The InfluxDB query syntax allows\r\n\t\t\t\tswitching the database in the query.  For example:\r\n\t\t\t\t<code>SHOW MEASUREMENTS ON _internal</code> or <code>SELECT * FROM \"_internal\"..\"database\" LIMIT 10</code>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\tTo support data isolation and security, make sure appropriate permissions are configured in InfluxDB.\r\n\t\t\t</p>\r\n\t\t</ed-info-box>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Min time interval'\"\r\n\t\t\t[labelWidth]=\"11\"\r\n\t\t\t[width]=\"5\"\r\n\t\t\t[placeholder]=\"'10s'\"\r\n\t\t\t[tooltip]=\"'A lower limit for the auto group by time interval. Recommended to be set to write frequency,\r\n\t\t\t\tfor example 1m if your data is written every minute.'\"\r\n\t\t\ttype=\"password\"\r\n\t\t\tformControlName=\"minTimeInterval\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IDataSourceSettingsEditor } from 'common';\r\n\r\n@Component({\r\n  selector: 'ds-settings-editor',\r\n  templateUrl: './settings.html'\r\n})\r\nexport class InfluxSettingsEditorComponent implements IDataSourceSettingsEditor {\r\n\tform: FormGroup;\r\n\r\n\tget url(){\r\n\t\treturn this.form.get('url');\r\n\t}\r\n\t\r\n\tconstructor(){\r\n\t\tthis.form = new FormGroup({\r\n\t\t\t'url': new FormControl( null, Validators.required ),\r\n\t\t\t'whitelistedCookies': new FormControl( null ),\r\n\r\n\t\t\t'basicAuthentication': new FormControl( false ),\r\n\t\t\t'withCredentials': new FormControl( false ),\r\n\t\t\t'tlsClientAuth': new FormControl( false ),\r\n\t\t\t'withCaCert': new FormControl( false ),\r\n\t\t\t'skipTlsVerification': new FormControl( false ),\r\n\t\t\t\r\n\t\t\t'database': new FormControl( null, Validators.required ),\r\n\t\t\t'user': new FormControl( null ),\r\n\t\t\t'password': new FormControl( null ),\r\n\t\t\t'minTimeInterval': new FormControl( null )\r\n\t\t});\r\n\t}\r\n}","export class InfluxQuery {\n  measurement: string = '';\n  policy: string = '';\n  refId: string = '';\n  // tags = new Array<Tag>();\n\tfields = new Array<Field>();\n\t\n\t// limit: number = undefined;\n\t// slimit: number = undefined;\n\n\t// order = OrderByTime.Asc;\n\t// alias: string =  '';\n\n\t// groupBy = new Array<GroupByObject>();\n\n  // virgin: boolean = false;\n}\n\nexport interface Field {\n  key: string;\n  functions: FuncObject[];\n}\n\nexport interface FuncObject {\n  name: string;\n  param: any;\n}\n\nexport enum AggrFunc {\n  Count = 'count',\n  Distinct = 'distinct',\n  Integral = 'integral',\n  Mean = 'mean',\n  Median = 'median',\n  Mode = 'mode',\n  Sum = 'sum',\n\n  Bottom = 'bottom',\n  First = 'first',\n  Last = 'last',\n  Max = 'max',\n  Min = 'min',\n  Percentile = 'percentile',\n  Top = 'top',\n\n  Derivative = 'derivative',\n  Spread = 'spread',\n  NonNegativeDerivative = 'non_negative_derivative',\n  Difference = 'difference',\n  NonNegativeDifference = 'non_negative_difference',\n  MovingAverage = 'moving_average',\n  CumulativeSum = 'cumulative_sum',\n  Stddev = 'stddev',\n  Elapsed = 'elapsed',\n\n  HoltWinters = 'holt_winters',\n  HoltWintersWithFit = 'holt_winters_with_fit',\n\n  Math = 'math',\n  Alias = 'alias',\n}\n\nexport enum AggrFuncGroup {\n  Aggregations,\n  Selectors,\n  Transformations,\n  Predictors,\n  Math,\n  Alias\n}\n\n\nexport class AggrFuncHelper {\n  static getGroup(f: AggrFunc|string) {\n    switch (f) {\n      case AggrFunc.Count:\n      case AggrFunc.Distinct:\n      case AggrFunc.Integral:\n      case AggrFunc.Mean:\n      case AggrFunc.Median:\n      case AggrFunc.Mode:\n      case AggrFunc.Sum:\n        return AggrFuncGroup.Aggregations;\n\n      case AggrFunc.Bottom:\n      case AggrFunc.First:\n      case AggrFunc.Last:\n      case AggrFunc.Max:\n      case AggrFunc.Min:\n      case AggrFunc.Percentile:\n      case AggrFunc.Top:\n        return AggrFuncGroup.Selectors;\n\n      case AggrFunc.Derivative:\n      case AggrFunc.Spread:\n      case AggrFunc.NonNegativeDerivative:\n      case AggrFunc.Difference:\n      case AggrFunc.NonNegativeDifference:\n      case AggrFunc.MovingAverage:\n      case AggrFunc.CumulativeSum:\n      case AggrFunc.Stddev:\n      case AggrFunc.Elapsed:\n        return AggrFuncGroup.Transformations;\n\n      case AggrFunc.HoltWinters:\n      case AggrFunc.HoltWintersWithFit:\n        return AggrFuncGroup.Predictors;\n\n      case AggrFunc.Math:\n        return AggrFuncGroup.Math;\n\n      case AggrFunc.Alias:\n        return AggrFuncGroup.Alias;\n\n    }\n  }\n}\n\nexport enum GroupByOption{\n\tTime,\n\tFill,\n\tTag\n}\n\nexport enum GroupByTimeOptions{\n  Dynamic = '$__interval',\n  S1 = '1s',\n  S10 = '10s',\n  M1 = '1m',\n  M5 = '5m',\n  M10 = '10m',\n  M15 = '15m',\n  H1 = '1h',\n}\n\nexport enum GroupByFillOptions{\n\tNone = 'none',\n\tNull = 'null',\n\tZero = '0',\n\tPrev = 'previous',\n\tLinear = 'linear'\n}\n\nexport enum OrderByTime{\n\tAsc,\n\tDesc\n}\n\nexport class MetricVars{\n\tstatic readonly TIME_FILTER = \"$timeFilter\";\n\tstatic readonly TIME_INTERVAL = \"$__interval\";\n}\n\n","import { Component } from '@angular/core';\nimport { TimeRange, TimeRangeParser, TimeRangeStore, Timezone, MetricsBuilder } from 'common';\nimport { AggrFuncGroup, AggrFuncHelper,\n\tField, OrderByTime, GroupByOption, MetricVars } from './query.m';\nimport * as _ from 'lodash';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n\tselector: 'metrics-builder',\n\ttemplate: ''\n})\nexport class InfluxMetricsBuilder implements MetricsBuilder {\n\n\tconstructor( private time: TimeRangeStore ){\n\t\t\n\t}\n\n\tbuild( query: any, range?: TimeRange ) : Observable<string> {\n\t\t//console.log( query );\n\n\t\tconst array = [];\n\n\t\tquery\n\t\t\t.targets\n\t\t\t.forEach(t => {\n\t\t\t\t// const modifiedRange = this\n\t\t\t\t// \t.timeManager\n\t\t\t\t// \t.getModifiedRange( this.widget.time )\n\n\t\t\t\tconst gen = new Builder( this.time, t, range );\n\n\t\t\t\tif (!gen.invalid && !t.virgin) {\n\t\t\t\t\tarray.push(gen.text);\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet request = array.join(';');\n\n\t\treturn of( request );\n\t}\n}\n\nclass Builder{\n\tget invalid(){\n    const invalidQuery = \n      (!this.target) ||\n      (!this.target.fields || 0 === this.target.fields.length );\n\n    return invalidQuery;\n\t}\n\t\n\tget text() {\n    return `SELECT ${this.getFieldsText()} FROM ${this.getMeasurementText()}`\n  }\n\n\tconstructor( \n\t\tprivate time: TimeRangeStore,\n\t\tprivate target: any,\n\t\tprivate range?: TimeRange ){\n\n\t}\n\n\tgetFieldsText() {\n\t\tlet result = '';\n\t\t\n    if (!this.target.fields) {\n      return result;\n    }\n\n    this.target.fields.forEach(x => {\n      if (result.length > 0) {\n        result += ', ';\n      }\n\n      result += this.getFieldText( x );\n    })\n\n    return result;\n\t}\n\t\n\t\n  getFieldText(field: Field) {\n\t\t let result = '';\n    let key = (!field.key) ? 'field' : field.key;\n\n    const aggr = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Aggregations ||\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Selectors);\n\n    if (aggr) {\n      result += aggr.name + ((aggr.param && aggr.param.value) ?\n        `(\"${key}\", ${aggr.param.value})` : `(\"${key}\")`);\n    } else {\n      result = `\"${key}\"`;\n    }\n\n    const trans = field.functions.filter(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Transformations);\n\n    trans.forEach(x => {\n      const p = (x.param && x.param.value) ? `, ${x.param.value}` : ``;\n      result = `${x.name}(${result}${p})`;\n    })\n\n    const math = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Math);\n\n    if (math) {\n      result = `${result} ${math.param.value}`;\n    }\n\n    const alias = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Alias);\n\n    if (alias) {\n      result = `${result} AS \"${alias.param.value}\"`;\n    }\n\n\t\treturn result;\n\t}\n\t\n  getMeasurementText() {\n    const meas = (!this.target.measurement) ? 'measurement' : this.target.measurement;\n\n    let rp = (this.target.policy && this.target.policy.length > 0 && this.target.policy !== 'default') ?\n      `\"${this.target.policy}\".` : '';\n\n    let root = `${rp}\"${meas}\"`;\n    let cond = '';\n\n    let tagIndex = 0;\n\n    if (this.target.tags) {\n      this\n        .target\n        .tags\n        .filter(x => x.key && x.value)\n        .forEach(x => {\n          if (tagIndex > 0) {\n            cond += ` ${x.condition} `;\n          }\n\n          cond += ` \"${x.key}\" ${x.operator} '${x.value}'`;\n          ++tagIndex;\n        });\n    }\n\n    const timeFilter = ( this.range ) ?\n      this.getTimeFilter() : MetricVars.TIME_FILTER;\n\n    if (cond.length > 0) {\n      root = `${root} WHERE (${cond}) and ${timeFilter}`\n    }\n    else{\n      // TODO\n      root = `${root} WHERE ${timeFilter}`\n\t\t}\n\n\t\tconst groupBy = this.target.groupBy;\n\t\tconst groupByTime = groupBy.find( x => x.type == GroupByOption.Time );\n\t\tconst groupByFill = groupBy.find( x => x.type == GroupByOption.Fill );\n\t\tconst groupByTag = groupBy.filter( x => x.type == GroupByOption.Tag );\n\n\t\tif( groupByTime ){\n      const gb = ( this.range ) ? this.getOptimalAutoGroupBy() : groupByTime.params[ 0 ];\n\t\t\troot = `${root} GROUP BY time(${gb})`\n\t\t}\n\n\t\tif( groupByTag.length > 0 ){\n\t\t\troot = ( !groupByTime ) ? `${root} GROUP BY` : `${root},`; \n\n\t\t\tgroupByTag.forEach( (e,index) => {\n\t\t\t\troot = `${root}${index >0 ? ', ' : ' '} \"${e.params[ 0 ]}\"`\n\t\t\t} )\n\t\t}\n\t\t\n\t\tif( groupByFill ){\n\t\t\troot = `${root} FILL(${groupByFill.params[ 0 ]})`\n\t\t}\n\n\t\tif( this.target.order != OrderByTime.Asc ){\n\t\t\troot = `${root} ORDER BY time DESC`; \n\t\t}\n\t\t\n\t\tif( this.target.limit > 0 ){\n\t\t\troot = `${root} LIMIT ${this.target.limit}`;\n\t\t}\n\n\t\tif( this.target.slimit > 0 ){\n\t\t\troot = `${root} SLIMIT ${this.target.slimit}`;\n\t\t}\n\n    return root;\n\t}\n\t\n  getOptimalAutoGroupBy() : string {\n    const f = TimeRangeParser.toDateTime( this.range.from, false );\n    const t = TimeRangeParser.toDateTime( this.range.to, true );\n\n\t\tif (5 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"200ms\";\n\n\t\tif (15 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"1s\";\n\n\t\tif (30 > t.diff( f, \"minutes\" ))\n\t\t\treturn \"2s\";\n\n\t\tif (1 > t.diff( f, \"hours\" ))\n\t\t\treturn \"5s\";\t\t\n\n\t\tif (3 > t.diff( f, \"hours\" ))\n\t\t\treturn \"10s\";\t\t\n\n\t\tif (6 > t.diff( f, \"hours\" ))\n\t\t\treturn \"20s\";\t\t\n\n\t\tif (12 > t.diff( f, \"hours\" ))\n\t\t\treturn \"1m\";\t\t\n\n\t\tif (24 > t.diff( f, \"hours\" ))\n\t\t\treturn \"2m\";\t\t\n\n\t\tif (7 > t.diff( f, \"days\" ))\n\t\t\treturn \"10m\";\t\t\n\n\t\tif (31 > t.diff( f, \"days\" ))\n\t\t\treturn \"1h\";\t\t\n\n\t\tif (365 > t.diff( f, \"days\" ))\n\t\t\treturn \"12h\";\t\t\n\n\t\t return \"24h\";\n\t}\n\n  getTimeFilter() {\n    const range = this.range;\n    const tz = this.time.converter.timezone; //this.range.timezone;\n\n    let from = this.getInfluxTime( range.from, false, tz);\n    let to = this.getInfluxTime( range.to, true, tz);\n\n    const fromIsAbsolute = from[from.length - 1] === 'ms';\n\n    if (to === 'now()' && !fromIsAbsolute) {\n      return 'time >= ' + from;\n    }\n\n    return 'time >= ' + from + ' and time <= ' + to;\n\t}\n\t\n  getInfluxTime(date: any, roundUp: any, timezone: Timezone) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now()';\n      }\n\n      const parts = /^now-(\\d+)([dhms])$/.exec(date);\n\n      if (parts) {\n        const amount = parseInt(parts[1], 10);\n        const unit = parts[2];\n        return 'now() - ' + amount + unit;\n      }\n\n      date = TimeRangeParser.toDateTime(date, roundUp, timezone);\n    }\n\n    return date.valueOf() + 'ms';\n  }\n}","import { NgModule } from '@angular/core';\nimport { InfluxSettingsEditorComponent } from './settings/settings';\n\n\nimport { EdCommonModule } from 'common';\nimport { EdUilibModule } from 'uilib';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { InfluxMetricsBuilder } from './query/builder';\n\n@NgModule({\n  declarations: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    EdCommonModule,\n    EdUilibModule\n  ],\n  exports: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n  ]\n})\nexport class InfluxModule { }\n","/*\n * Public API Surface of influx\n */\n\nexport * from './influx.mod';\n\nexport * from './settings/settings';\nexport * from './query/builder';\nexport * from './query/query.m';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵtext","i0.ɵɵtemplate","FormGroup","FormControl","Validators","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵadvance","Component","AggrFunc","AggrFuncGroup","GroupByOption","GroupByTimeOptions","GroupByFillOptions","OrderByTime","of","TimeRangeParser","_.isString","CommonModule","FormsModule","ReactiveFormsModule","EdCommonModule","EdUilibModule","NgModule"],"mappings":"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"}