{"version":3,"sources":["../../../../app/plugins/datasources/influx/src/settings/settings.html","../../../../app/plugins/datasources/influx/src/settings/settings.ts","../../../../app/plugins/datasources/influx/src/influx.mod.ts"],"names":["i0.ɵɵtext","i0.ɵɵtemplate","InfluxSettingsEditorComponent","this","form","FormGroup","url","FormControl","Validators","required","whitelistedCookies","basicAuthentication","withCredentials","tlsClientAuth","withCaCert","skipTlsVerification","database","user","password","minTimeInterval","Object","defineProperty","prototype","get","selectors","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵadvance","InfluxModule","imports","CommonModule","FormsModule","ReactiveFormsModule","EdCommonModule","EdUilibModule","declarations","exports"],"mappings":"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","sourcesContent":["<div [formGroup]=\"form\">\r\n\r\n\t<h3 class=\"page-heading\">HTTP</h3>\t\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"URL\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\ttooltip=\"Specify a complete HTTP URL (for example http://your_server:8080)\"\r\n\t\t\tformControlName=\"url\"\t>\r\n\t\t\t<ng-template edValidationTemplate *ngIf=\"url.hasError( 'required' ) && url.touched\">\r\n\t\t\t\tplease enter url\r\n\t\t\t</ng-template>\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"Whitelisted Cookies\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\tformControlName=\"whitelistedCookies\"\t>\r\n\t\t</ed-textbox>\r\n\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">Auth</h3>\r\n\t<div class=\"gf-form-group\">\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Basic Auth\"\r\n\t\t\t\tformControlName=\"basicAuthentication\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With Credentials\"\r\n\t\t\t\ttooltip=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\r\n\t\t\t\tformControlName=\"withCredentials\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"TLS Client Auth\"\r\n\t\t\t\tformControlName=\"tlsClientAuth\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With CA Cert\"\r\n\t\t\t\ttooltip=\"Needed for verifing self-signed TLS Certs\"\r\n\t\t\t\tformControlName=\"withCaCert\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Skip TLS Verify\"\r\n\t\t\t\tformControlName=\"skipTlsVerification\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\t\t\r\n\t\t\r\n\t</div>\r\n\r\n\r\n\r\n\t<h3 class=\"page-heading\">InfluxDB Details</h3>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Database'\"\r\n\t\t\t[labelWidth]=\"10\"\r\n\t\t\tformControlName=\"database\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'User'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\tformControlName=\"user\">\r\n\t\t\t</ed-textbox>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'Password'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tformControlName=\"password\">\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<div class=\"grafana-info-box\">\r\n\t\t\t<h5>Database Access</h5>\r\n\t\t\t<p>\r\n\t\t\t\tSetting the database for this datasource does not deny access to other databases.  The InfluxDB query syntax allows\r\n\t\t\t\tswitching the database in the query.  For example:\r\n\t\t\t\t<code>SHOW MEASUREMENTS ON _internal</code> or <code>SELECT * FROM \"_internal\"..\"database\" LIMIT 10</code>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\tTo support data isolation and security, make sure appropriate permissions are configured in InfluxDB.\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Min time interval'\"\r\n\t\t\t[labelWidth]=\"11\"\r\n\t\t\t[width]=\"5\"\r\n\t\t\t[placeholder]=\"'10s'\"\r\n\t\t\t[tooltip]=\"'A lower limit for the auto group by time interval. Recommended to be set to write frequency,\r\n\t\t\t\tfor example 1m if your data is written every minute.'\"\r\n\t\t\ttype=\"password\"\r\n\t\t\tformControlName=\"minTimeInterval\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IDataSourceSettingsEditor } from 'common';\r\n\r\n@Component({\r\n  selector: 'ds-settings-editor',\r\n  templateUrl: './settings.html'\r\n})\r\nexport class InfluxSettingsEditorComponent implements IDataSourceSettingsEditor {\r\n\tform: FormGroup;\r\n\r\n\tget url(){\r\n\t\treturn this.form.get('url');\r\n\t}\r\n\t\r\n\tconstructor(){\r\n\t\tthis.form = new FormGroup({\r\n\t\t\t'url': new FormControl( null, Validators.required ),\r\n\t\t\t'whitelistedCookies': new FormControl( null ),\r\n\r\n\t\t\t'basicAuthentication': new FormControl( null ),\r\n\t\t\t'withCredentials': new FormControl( null ),\r\n\t\t\t'tlsClientAuth': new FormControl( null ),\r\n\t\t\t'withCaCert': new FormControl( null ),\r\n\t\t\t'skipTlsVerification': new FormControl( null ),\r\n\t\t\t\r\n\t\t\t'database': new FormControl( null, Validators.required ),\r\n\t\t\t'user': new FormControl( null ),\r\n\t\t\t'password': new FormControl( null ),\r\n\t\t\t'minTimeInterval': new FormControl( null )\r\n\t\t});\r\n\t}\r\n}","import { NgModule } from '@angular/core';\nimport { InfluxSettingsEditorComponent } from './settings/settings';\nimport { EdCommonModule } from 'common';\nimport { EdUilibModule } from 'uilib';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    InfluxSettingsEditorComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    EdCommonModule,\n    EdUilibModule\n  ],\n  exports: [\n    InfluxSettingsEditorComponent\n  ]\n})\nexport class InfluxModule { }\n"]}