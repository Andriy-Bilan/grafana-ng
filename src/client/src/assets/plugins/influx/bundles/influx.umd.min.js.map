{"version":3,"sources":["../../../../app/plugins/datasources/influx/src/settings/settings.html","../../../../app/plugins/datasources/influx/src/settings/settings.ts","../../../../app/plugins/datasources/influx/src/metrics/metrics.m.ts","../../../../app/plugins/datasources/influx/src/metrics/builder.ts","../../../../../node_modules/tslib/tslib.es6.js","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query-base.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/measurement/measurement.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/measurement/measurement.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/picker/func-items.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/picker/func-picker.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/editor/func-editor.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/editor/func-editor.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/field.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/field.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/fields.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/group-by/tag-label.c.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/group-by/group-by.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/group-by/group-by.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/designer.html","../../../../app/plugins/datasources/influx/src/metrics/designer/designer.ts","../../../../app/plugins/datasources/influx/src/influx.mod.ts"],"names":["i0.ɵɵtext","i0.ɵɵtemplate","InfluxSettingsEditorComponent","this","form","FormGroup","url","FormControl","Validators","required","whitelistedCookies","basicAuthentication","withCredentials","tlsClientAuth","withCaCert","skipTlsVerification","database","user","password","minTimeInterval","Object","defineProperty","prototype","get","selectors","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵadvance","AggrFunc","AggrFuncGroup","measurement","policy","refId","tags","Array","fields","limit","undefined","slimit","order","OrderByTime","Asc","alias","groupBy","GroupByOption","GroupByTimeOptions","GroupByFillOptions","AggrFuncHelper","getGroup","f","Count","Distinct","Integral","Mean","Median","Mode","Sum","Aggregations","Bottom","First","Last","Max","Min","Percentile","Top","Selectors","Derivative","Spread","NonNegativeDerivative","Difference","NonNegativeDifference","MovingAverage","CumulativeSum","Stddev","Elapsed","Transformations","HoltWinters","HoltWintersWithFit","Predictors","Math","Alias","type","params","MetricVars","TIME_FILTER","TIME_INTERVAL","TagOperator","TagCondition","key","value","operator","Eq","condition","And","InfluxMetricsBuilder","time","build","metrics","range","_this","array","targets","forEach","t","gen","Builder","invalid","virgin","push","text","request","join","of","i0","ɵɵdirectiveInject","i1","TimeRangeStore","encapsulation","target","length","getFieldsText","getMeasurementText","result","x","getFieldText","field","aggr","functions","find","name","param","filter","p","math","meas","root","cond","tagIndex","timeFilter","getTimeFilter","groupByTime","Time","groupByFill","Fill","groupByTag","Tag","gb","getOptimalAutoGroupBy","e","index","TimeRangeParser","toDateTime","from","to","diff","tz","converter","timezone","getInfluxTime","fromIsAbsolute","date","roundUp","_.isString","parts","exec","parseInt","valueOf","extendStatics","d","b","setPrototypeOf","__proto__","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","i","call","ar","next","done","error","__spread","arguments","concat","BaseQueryComponent","panel","dsService","REMOVE","ADD","change","EventEmitter","rebuild","widget","dataSource","query","proxy","command","dataSourceId","needRebuild","emit","fireRebuild","subscribe","queryAsString","onRebuild","i0.ɵɵlistener","ɵɵrestoreView","_r7_1","ɵɵnextContext","ctx_r3","tagOperators$","t_r1","ctx_r4","tagValues$","i0.ɵɵelementContainerStart","_r15_1","$event","$implicit","ctx_r18","onTagKeyPick","i0.ɵɵelementContainerEnd","ctx_r0","conditions$","tagKeys$","PANEL_TOKEN","DataSourceService","inputs","outputs","MeasurementEditorComponent","_super","DEFAULT_POLICY","pipe","map","values","y","reduce","acc","tag","isRegexValue","isRegex","allOperators","slice","q","ngOnInit","_a","expr","isValid","RegExp","startsWith","endsWith","resetTags","k","indexOf","len","pop","onTagValuePick","v","oldValueIsRegEx","newValueIsRegEx","RegExEq","nt","features","ɵɵInheritDefinitionFeature","retentionPolicies$","measurements$","timeSuggestions","menuItems","label","items","suggestions","FieldFunctionPickerComponent","_.cloneDeep","pick","ContextMenuComponent","wrapItems","item","show","i0.ɵɵtextInterpolate","_r8_1","onEditorFocusOut","onEditorKeyDown","onEditorKeyUpEnter","ctx_r1","textValue","FieldFunctionEditorComponent","remove","isEditorVisible","isSuggestionsMenuOpen","suggestionItems","deleteMenuItem","_","func","paramValue","hasSuggestions","onShowEditor","setTimeout","editorElement","nativeElement","focus","hide","_r4_1","viewQuery","i0.ɵɵtextInterpolate1","FieldEditorComponent","fieldFuncItems","add","flatFieldFuncItems","a","s","onFieldPick","onFuncPick","arg","fo","FuncObject","funcs","splice","onFuncRemove","_r3_1","onAdd","f_r1","fields$","FieldsEditorComponent","createEmpyField","onRemove","def","Field","GroupByTagLabelComponent","removed","timeOptions$","_r13_1","_r16_1","attrs","GroupByEditorComponent","OrderByTimeRef","selectedCommands","availableCommands","GroupByCommand","GroupByCommandType","Limit","SLimit","OrderBy","l","findIndex","fill","options","Desc","tagCommands","c","onOptionPick","GroupByObject","onRemoveTag","QueryEditorComponent","contextMenuItems","opened","editMode","moveUp","moveDown","duplicate","onDuplicate","onMoveUp","onMoveDown","InfluxMetricsDesignerComponent","console","log","tick","InfluxModule","imports","CommonModule","FormsModule","ReactiveFormsModule","EdCommonModule","EdUilibModule","declarations","exports"],"mappings":"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","sourcesContent":["<div [formGroup]=\"form\">\r\n\r\n\t<h3 class=\"page-heading\">HTTP</h3>\t\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"URL\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\thint=\"Specify a complete HTTP URL (for example http://your_server:8080)\"\r\n\t\t\tformControlName=\"url\"\t>\r\n\t\t\t<ng-template edValidationTemplate *ngIf=\"url.hasError( 'required' ) && url.touched\">\r\n\t\t\t\tplease enter url\r\n\t\t\t</ng-template>\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"Whitelisted Cookies\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\tformControlName=\"whitelistedCookies\"\t>\r\n\t\t</ed-textbox>\r\n\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">Auth</h3>\r\n\t<div class=\"gf-form-group\">\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Basic Auth\"\r\n\t\t\t\tformControlName=\"basicAuthentication\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With Credentials\"\r\n\t\t\t\thint=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\r\n\t\t\t\tformControlName=\"withCredentials\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"TLS Client Auth\"\r\n\t\t\t\tformControlName=\"tlsClientAuth\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With CA Cert\"\r\n\t\t\t\thint=\"Needed for verifing self-signed TLS Certs\"\r\n\t\t\t\tformControlName=\"withCaCert\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Skip TLS Verify\"\r\n\t\t\t\tformControlName=\"skipTlsVerification\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">InfluxDB Details</h3>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Database'\"\r\n\t\t\t[labelWidth]=\"10\"\r\n\t\t\tformControlName=\"database\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'User'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\tformControlName=\"user\">\r\n\t\t\t</ed-textbox>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'Password'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tformControlName=\"password\">\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-info-box>\r\n\t\t\t<h5>Database Access</h5>\r\n\t\t\t<p>\r\n\t\t\t\tSetting the database for this datasource does not deny access to other databases.  The InfluxDB query syntax allows\r\n\t\t\t\tswitching the database in the query.  For example:\r\n\t\t\t\t<code>SHOW MEASUREMENTS ON _internal</code> or <code>SELECT * FROM \"_internal\"..\"database\" LIMIT 10</code>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\tTo support data isolation and security, make sure appropriate permissions are configured in InfluxDB.\r\n\t\t\t</p>\r\n\t\t</ed-info-box>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Min time interval'\"\r\n\t\t\t[labelWidth]=\"11\"\r\n\t\t\t[width]=\"5\"\r\n\t\t\t[placeholder]=\"'10s'\"\r\n\t\t\thint=\"'A lower limit for the auto group by time interval. Recommended to be set to write frequency,\r\n\t\t\t\tfor example 1m if your data is written every minute.'\"\r\n\t\t\ttype=\"password\"\r\n\t\t\tformControlName=\"minTimeInterval\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IDataSourceSettingsEditor } from 'common';\r\n\r\n@Component({\r\n  selector: 'ds-settings-editor',\r\n  templateUrl: './settings.html'\r\n})\r\nexport class InfluxSettingsEditorComponent implements IDataSourceSettingsEditor {\r\n\tform: FormGroup;\r\n\r\n\tget url(){\r\n\t\treturn this.form.get('url');\r\n\t}\r\n\t\r\n\tconstructor(){\r\n\t\tthis.form = new FormGroup({\r\n\t\t\t'url': new FormControl( null, Validators.required ),\r\n\t\t\t'whitelistedCookies': new FormControl( null ),\r\n\r\n\t\t\t'basicAuthentication': new FormControl( false ),\r\n\t\t\t'withCredentials': new FormControl( false ),\r\n\t\t\t'tlsClientAuth': new FormControl( false ),\r\n\t\t\t'withCaCert': new FormControl( false ),\r\n\t\t\t'skipTlsVerification': new FormControl( false ),\r\n\t\t\t\r\n\t\t\t'database': new FormControl( null, Validators.required ),\r\n\t\t\t'user': new FormControl( null ),\r\n\t\t\t'password': new FormControl( null ),\r\n\t\t\t'minTimeInterval': new FormControl( null )\r\n\t\t});\r\n\t}\r\n}","import {MetricQuery} from \"common\";\n\nexport class InfluxQuery implements MetricQuery {\n  measurement: string = '';\n  policy: string = '';\n  refId: string = '';\n  tags = new Array<Tag>();\n\tfields = new Array<Field>();\n\t\n\tlimit: number = undefined;\n\tslimit: number = undefined;\n\n\torder = OrderByTime.Asc;\n\talias: string =  '';\n\n\tgroupBy = new Array<GroupByObject>();\n\n  // virgin: boolean = false;\n}\n\nexport class Field {\n  key: string;\n  functions: FuncObject[];\n}\n\nexport class FuncObject {\n  name: string;\n  param?: any;\n}\n\nexport enum AggrFunc {\n  Count = 'count',\n  Distinct = 'distinct',\n  Integral = 'integral',\n  Mean = 'mean',\n  Median = 'median',\n  Mode = 'mode',\n  Sum = 'sum',\n\n  Bottom = 'bottom',\n  First = 'first',\n  Last = 'last',\n  Max = 'max',\n  Min = 'min',\n  Percentile = 'percentile',\n  Top = 'top',\n\n  Derivative = 'derivative',\n  Spread = 'spread',\n  NonNegativeDerivative = 'non_negative_derivative',\n  Difference = 'difference',\n  NonNegativeDifference = 'non_negative_difference',\n  MovingAverage = 'moving_average',\n  CumulativeSum = 'cumulative_sum',\n  Stddev = 'stddev',\n  Elapsed = 'elapsed',\n\n  HoltWinters = 'holt_winters',\n  HoltWintersWithFit = 'holt_winters_with_fit',\n\n  Math = 'math',\n  Alias = 'alias',\n}\n\nexport enum AggrFuncGroup {\n  Aggregations,\n  Selectors,\n  Transformations,\n  Predictors,\n  Math,\n  Alias\n}\n\n\nexport class AggrFuncHelper {\n  static getGroup(f: AggrFunc|string) {\n    switch (f) {\n      case AggrFunc.Count:\n      case AggrFunc.Distinct:\n      case AggrFunc.Integral:\n      case AggrFunc.Mean:\n      case AggrFunc.Median:\n      case AggrFunc.Mode:\n      case AggrFunc.Sum:\n        return AggrFuncGroup.Aggregations;\n\n      case AggrFunc.Bottom:\n      case AggrFunc.First:\n      case AggrFunc.Last:\n      case AggrFunc.Max:\n      case AggrFunc.Min:\n      case AggrFunc.Percentile:\n      case AggrFunc.Top:\n        return AggrFuncGroup.Selectors;\n\n      case AggrFunc.Derivative:\n      case AggrFunc.Spread:\n      case AggrFunc.NonNegativeDerivative:\n      case AggrFunc.Difference:\n      case AggrFunc.NonNegativeDifference:\n      case AggrFunc.MovingAverage:\n      case AggrFunc.CumulativeSum:\n      case AggrFunc.Stddev:\n      case AggrFunc.Elapsed:\n        return AggrFuncGroup.Transformations;\n\n      case AggrFunc.HoltWinters:\n      case AggrFunc.HoltWintersWithFit:\n        return AggrFuncGroup.Predictors;\n\n      case AggrFunc.Math:\n        return AggrFuncGroup.Math;\n\n      case AggrFunc.Alias:\n        return AggrFuncGroup.Alias;\n\n    }\n  }\n}\n\nexport class GroupByObject{\n\n\tconstructor( public type, public params = [] ){}\n}\n\nexport enum GroupByOption{\n\tTime,\n\tFill,\n\tTag\n}\n\nexport enum GroupByTimeOptions{\n  Dynamic = '$__interval',\n  S1 = '1s',\n  S10 = '10s',\n  M1 = '1m',\n  M5 = '5m',\n  M10 = '10m',\n  M15 = '15m',\n  H1 = '1h',\n}\n\nexport enum GroupByFillOptions{\n\tNone = 'none',\n\tNull = 'null',\n\tZero = '0',\n\tPrev = 'previous',\n\tLinear = 'linear'\n}\n\nexport enum OrderByTime{\n\tAsc = \"asc\",\n\tDesc = \"desc\"\n}\n\nexport class MetricVars{\n\tstatic readonly TIME_FILTER = \"$timeFilter\";\n\tstatic readonly TIME_INTERVAL = \"$__interval\";\n}\n\nexport class Tag{\n  key: string = '';\n  value: string = '';\n  operator: TagOperator = TagOperator.Eq;\n  condition: TagCondition = TagCondition.And\n}\n\nexport enum TagOperator{\n  Eq = '=',\n  Neq = '<>',\n  Less = '<',\n  Greater = '>',\n  RegExEq = '=~',\n  RegExNeq = '!~'\n}\n\nexport enum TagCondition{\n  And = 'AND',\n  Or = 'OR'\n}\n\n\n","import { Component } from '@angular/core';\nimport { TimeRange, TimeRangeParser, TimeRangeStore,\n  Timezone, MetricsBuilder, Metrics, MetricQuery } from 'common';\nimport { AggrFuncGroup, AggrFuncHelper,\n\tField, OrderByTime, GroupByOption, MetricVars } from './metrics.m';\nimport * as _ from 'lodash';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n\tselector: 'metrics-builder',\n\ttemplate: ''\n})\nexport class InfluxMetricsBuilder implements MetricsBuilder {\n\n\tconstructor( private time: TimeRangeStore = undefined/* for timezone */ ){\n\t\t\n  }\n\n\tbuild( metrics: Metrics, range?: TimeRange ) : Observable<string> {\n\t\tconst array = [];\n\n\t\tmetrics\n\t\t\t.targets\n\t\t\t.forEach(t => {\n\t\t\t\tconst gen = new Builder( this.time, t, range );\n\n\t\t\t\tif (!gen.invalid && !(<any>t).virgin) {\n\t\t\t\t\tarray.push(gen.text);\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet request = array.join(';');\n\n\t\treturn of( request );\n\t}\n}\n\nclass Builder{\n\tget invalid(){\n    const invalidQuery = \n      (!this.target) ||\n      (!this.target.fields || 0 === this.target.fields.length );\n\n    return invalidQuery;\n\t}\n\t\n\tget text() {\n    return `SELECT ${this.getFieldsText()} FROM ${this.getMeasurementText()}`\n  }\n\n\tconstructor( \n\t\tprivate time: TimeRangeStore,\n\t\tprivate target: any,\n\t\tprivate range?: TimeRange ){\n\n\t}\n\n\tgetFieldsText() {\n\t\tlet result = '';\n\t\t\n    if (!this.target.fields) {\n      return result;\n    }\n\n    this.target.fields.forEach(x => {\n      if (result.length > 0) {\n        result += ', ';\n      }\n\n      result += this.getFieldText( x );\n    })\n\n    return result;\n\t}\n\t\n\t\n  getFieldText(field: Field) {\n\t\t let result = '';\n    let key = (!field.key) ? 'field' : field.key;\n\n    const aggr = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Aggregations ||\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Selectors);\n\n    if (aggr) {\n      result += aggr.name + ((aggr.param && aggr.param.value) ?\n        `(\"${key}\", ${aggr.param.value})` : `(\"${key}\")`);\n    } else {\n      result = `\"${key}\"`;\n    }\n\n    const trans = field.functions.filter(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Transformations);\n\n    trans.forEach(x => {\n      const p = (x.param && x.param.value) ? `, ${x.param.value}` : ``;\n      result = `${x.name}(${result}${p})`;\n    })\n\n    const math = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Math);\n\n    if (math) {\n      result = `${result} ${math.param.value}`;\n    }\n\n    const alias = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Alias);\n\n    if (alias) {\n      result = `${result} AS \"${alias.param.value}\"`;\n    }\n\n\t\treturn result;\n\t}\n\t\n  getMeasurementText() {\n    const meas = (!this.target.measurement) ? 'measurement' : this.target.measurement;\n\n    let rp = (this.target.policy && this.target.policy.length > 0 && this.target.policy !== 'default') ?\n      `\"${this.target.policy}\".` : '';\n\n    let root = `${rp}\"${meas}\"`;\n    let cond = '';\n\n    let tagIndex = 0;\n\n    if (this.target.tags) {\n      this\n        .target\n        .tags\n        .filter(x => x.key && x.value)\n        .forEach(x => {\n          if (tagIndex > 0) {\n            cond += ` ${x.condition} `;\n          }\n\n          cond += ` \"${x.key}\" ${x.operator} '${x.value}'`;\n          ++tagIndex;\n        });\n    }\n\n    const timeFilter = ( this.range ) ?\n      this.getTimeFilter() : MetricVars.TIME_FILTER;\n\n    if (cond.length > 0) {\n      root = `${root} WHERE (${cond}) and ${timeFilter}`\n    }\n    else{\n      // TODO\n      root = `${root} WHERE ${timeFilter}`\n\t\t}\n\n\t\tconst groupBy = this.target.groupBy;\n\t\tconst groupByTime = groupBy.find( x => x.type == GroupByOption.Time );\n\t\tconst groupByFill = groupBy.find( x => x.type == GroupByOption.Fill );\n    const groupByTag = groupBy.filter( x => x.type == GroupByOption.Tag );\n    \n    //console.log( groupBy );\n\n\t\tif( groupByTime ){\n      const gb = ( this.range && groupByTime.params[ 0 ] == MetricVars.TIME_INTERVAL ) ?\n        this.getOptimalAutoGroupBy() : groupByTime.params[ 0 ];\n        \n\t\t\troot = `${root} GROUP BY time(${gb})`\n\t\t}\n\n\t\tif( groupByTag.length > 0 ){\n\t\t\troot = ( !groupByTime ) ? `${root} GROUP BY` : `${root},`; \n\n\t\t\tgroupByTag.forEach( (e,index) => {\n\t\t\t\troot = `${root}${index >0 ? ', ' : ' '} \"${e.params[ 0 ]}\"`\n\t\t\t} )\n\t\t}\n\t\t\n\t\tif( groupByFill ){\n\t\t\troot = `${root} FILL(${groupByFill.params[ 0 ]})`\n\t\t}\n\n\t\tif( this.target.order != OrderByTime.Asc ){\n\t\t\troot = `${root} ORDER BY time DESC`; \n\t\t}\n\t\t\n\t\tif( this.target.limit > 0 ){\n\t\t\troot = `${root} LIMIT ${this.target.limit}`;\n\t\t}\n\n\t\tif( this.target.slimit > 0 ){\n\t\t\troot = `${root} SLIMIT ${this.target.slimit}`;\n\t\t}\n\n    return root;\n\t}\n\t\n  getOptimalAutoGroupBy() : string {\n    const f = TimeRangeParser.toDateTime( this.range.from, false );\n    const t = TimeRangeParser.toDateTime( this.range.to, true );\n\n\t\tif (5 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"200ms\";\n\n\t\tif (15 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"1s\";\n\n\t\tif (30 > t.diff( f, \"minutes\" ))\n\t\t\treturn \"2s\";\n\n\t\tif (1 > t.diff( f, \"hours\" ))\n\t\t\treturn \"5s\";\t\t\n\n\t\tif (3 > t.diff( f, \"hours\" ))\n\t\t\treturn \"10s\";\t\t\n\n\t\tif (6 > t.diff( f, \"hours\" ))\n\t\t\treturn \"20s\";\t\t\n\n\t\tif (12 > t.diff( f, \"hours\" ))\n\t\t\treturn \"1m\";\t\t\n\n\t\tif (24 > t.diff( f, \"hours\" ))\n\t\t\treturn \"2m\";\t\t\n\n\t\tif (7 > t.diff( f, \"days\" ))\n\t\t\treturn \"10m\";\t\t\n\n\t\tif (31 > t.diff( f, \"days\" ))\n\t\t\treturn \"1h\";\t\t\n\n\t\tif (365 > t.diff( f, \"days\" ))\n\t\t\treturn \"12h\";\t\t\n\n\t\t return \"24h\";\n\t}\n\n  getTimeFilter() {\n    const range = this.range;\n    const tz = this.time.converter.timezone; //this.range.timezone;\n\n    let from = this.getInfluxTime( range.from, false, tz);\n    let to = this.getInfluxTime( range.to, true, tz);\n\n    const fromIsAbsolute = from[from.length - 1] === 'ms';\n\n    if (to === 'now()' && !fromIsAbsolute) {\n      return 'time >= ' + from;\n    }\n\n    return 'time >= ' + from + ' and time <= ' + to;\n\t}\n\t\n  getInfluxTime(date: any, roundUp: any, timezone: Timezone) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now()';\n      }\n\n      const parts = /^now-(\\d+)([dhms])$/.exec(date);\n\n      if (parts) {\n        const amount = parseInt(parts[1], 10);\n        const unit = parts[2];\n        return 'now() - ' + amount + unit;\n      }\n\n      date = TimeRangeParser.toDateTime(date, roundUp, timezone);\n    }\n\n    return date.valueOf() + 'ms';\n  }\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive, EventEmitter, Inject, Input, Output } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN, Series, Metrics } from 'common';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { InfluxMetricsBuilder } from '../../builder';\r\n\r\nimport { InfluxQuery, Tag, Field, GroupByObject } from '../../metrics.m';\r\n\r\n@Directive()\r\nexport class BaseQueryComponent {\r\n  readonly REMOVE = '--remove--';\r\n\treadonly ADD = '--add--';\r\n  \r\n  @Input() query : InfluxQuery;\r\n  @Output() change = new EventEmitter();\r\n  @Output() rebuild = new EventEmitter();\r\n  queryAsString: string;\r\n\r\n  get metrics(): Metrics{\r\n    return this\r\n      .panel\r\n      .widget\r\n      .metrics;\r\n  }\r\n\r\n  get dataSourceId(): number{\r\n    return this.metrics.dataSource;\r\n  }\r\n\r\n  get tags() : Tag[]{\r\n    return this.query.tags;\r\n  }\r\n\r\n  get fields(): Field[]{\r\n    return this.query.fields;\r\n  }\r\n\r\n  get groupBy(): GroupByObject[]{\r\n    return this.query.groupBy;\r\n  }\r\n\r\n  constructor(\r\n    @Inject( PANEL_TOKEN ) public panel: Panel,\r\n    public dsService: DataSourceService){\r\n  }\r\n\r\n  proxy( command: string ) : Observable<Series[] > {\r\n    return this\r\n      .dsService\r\n      .proxy( this.dataSourceId, command)\r\n  }\r\n\r\n  needRebuild(){\r\n    this.rebuild.emit();\r\n  }\r\n\r\n  build( fireRebuild: boolean = true ){\r\n    new InfluxMetricsBuilder()\r\n      .build( {targets: [this.query], dataSource: 0 }  )\r\n      .subscribe( x =>{\r\n        this.queryAsString = x\r\n\r\n        if( fireRebuild ){\r\n          this.onRebuild();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRebuild(){\r\n\r\n  }\r\n}","<div class=\"gf-form-inline\">\r\n\r\n\t<div class=\"gf-form\"  >\r\n\t\t<label class=\"gf-form-label  query-keyword width-7\" >\r\n\t\t\tFROM\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<ed-autocomplete-picker \r\n\t\t[(ngModel)]=\"query.policy\"\r\n\t\t[request]=\"retentionPolicies$\"\r\n\t\t(pick)=\"needRebuild()\" >\r\n\t</ed-autocomplete-picker>\r\n\t\r\n\t<ed-autocomplete-picker \r\n\t\tplaceholder=\"select measurement\"\r\n\t\t[(ngModel)]='query.measurement'\r\n\t\t[request]=\"measurements$\"\r\n\t\t(pick)=\"resetTags(); needRebuild()\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<div class=\"gf-form\"  >\r\n\t\t<label class=\"gf-form-label query-keyword\" >\r\n\t\t\tWHERE\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<ng-container *ngFor=\"let t of query.tags;let i = index\" >\r\n\r\n\t\t<ed-autocomplete-picker \r\n\t\t\t[hidden]=\"!(i > 0 && t.key)\"\r\n\t\t\t[(ngModel)]=\"t.condition\"\r\n\t\t\t[request]=\"conditions$\" \r\n\t\t\tvalueClass=\"query-keyword\"\r\n\t\t\t(pick)=\"needRebuild()\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t\t<ed-autocomplete-picker\r\n      placeholder=\"fa fa-plus\" \r\n      [(ngModel)]=\"t.key\"\r\n\t\t\t[request]=\"tagKeys$\"\r\n\t\t\t(pick)=\"onTagKeyPick( t, $event ); needRebuild()\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t\t<ed-autocomplete-picker *ngIf=\"t.key\"\r\n\t\t\t[(ngModel)]=\"t.operator\"\r\n\t\t\t[request]=\"tagOperators$( t )\"\r\n\t\t\tvalueClass=\"query-segment-operator\"\r\n\t\t\t(pick)=\"needRebuild()\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n    <ed-autocomplete-picker *ngIf=\"t.key\"\r\n      placeholder=\"select tag value\" \r\n      [value]='t.value'\r\n\t\t\t[request]=\"tagValues$( t )\"\r\n\t\t\t(pick)=\"onTagValuePick( t, $event ); needRebuild()\" >\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t</ng-container>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Tag, TagCondition, TagOperator } from '../../../metrics.m';\r\nimport { BaseQueryComponent } from '../query-base';\r\n\r\n@Component({\r\n  selector: 'measurement-editor',\r\n  templateUrl: './measurement.html'\r\n})\r\nexport class MeasurementEditorComponent extends BaseQueryComponent  {\r\n\r\n  readonly DEFAULT_POLICY = 'default';\r\n\r\n  get retentionPolicies$() {\r\n    return this\r\n      .proxy( `SHOW RETENTION POLICIES`)\r\n      .pipe(\r\n        map(x => ['default', ...x[0].values.map(y => y[0])]));\r\n  }\r\n\r\n  get measurements$() {\r\n    return this\r\n      .proxy( `SHOW MEASUREMENTS`)\r\n      .pipe(\r\n        map(x => [...x[0].values].reduce((acc, value) => acc.concat(value), [])))\r\n  }\r\n\r\n  tagOperators$( tag:Tag ) {\r\n    const isRegexValue = this.isRegex( tag.value );\r\n    const allOperators = Object.values(TagOperator);\r\n\r\n    let result = isRegexValue ? allOperators.slice( 4, 6 ) : allOperators.slice( 0, 4 )\r\n\r\n    return of( result );\r\n  }\r\n\r\n  get tagKeys$() {\r\n    const q = (this.query.measurement) ?\r\n      `SHOW TAG KEYS from ${this.query.measurement}` :\r\n      `SHOW TAG KEYS`;\r\n\r\n    return this\r\n      .proxy( q )\r\n      .pipe(\r\n        map(x => [...x[0].values.reduce((acc, value) => acc.concat(value), []), this.REMOVE]))\r\n  }\r\n\r\n  tagValues$( tag: Tag ) {\r\n    const q = `SHOW TAG VALUES  WITH KEY=${tag.key}`;\r\n\r\n    return this\r\n      .proxy( q )\r\n      .pipe(\r\n        map(x => x[0].values.map(y => y[1])));\r\n  }\r\n\r\n  get conditions$() {\r\n    return of(Object.values(TagCondition));\r\n  }\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n\r\n      \r\n  }\r\n\r\n  \r\n\r\n  ngOnInit() {\r\n    //this.resetTags();\r\n\r\n    if( !this.tags?.length ){\r\n      this.tags.push(new Tag());\r\n    }\r\n\r\n    if (!this.query.policy) {\r\n      this.query.policy = this.DEFAULT_POLICY;\r\n    }\r\n  }\r\n \r\n  isRegex(expr) {\r\n    let isValid = true;\r\n    try {\r\n      new RegExp(expr);\r\n\r\n      isValid = ( expr.startsWith( '/' ) && expr.endsWith( '/' )  )\r\n    } catch (e) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  resetTags() {\r\n    this.query.tags = [];\r\n    this.tags.push(new Tag());\r\n  }\r\n\r\n  onTagKeyPick( t: Tag, k: string) {\r\n    const index = this.tags.indexOf( t );  \r\n\r\n    if (k?.startsWith(this.REMOVE)) {\r\n      this.query.tags = this.tags.filter( x => x != t );\r\n\r\n      if (0 === this.tags.length) {\r\n        this.resetTags();\r\n      }\r\n    } else {\r\n      //t.key = k;\r\n      //t.value = '';\r\n  \r\n      const len = this.tags.length;\r\n  \r\n      if ( index === len - 2 && this.tags[len - 1].key.length === 0) {\r\n        // if value is selected remove new tag (for plus sign)\r\n        this.tags.pop();\r\n      }\r\n    }\r\n  }\r\n\r\n  onTagValuePick(t: Tag, v: string) {\r\n    let oldValueIsRegEx = this.isRegex( t.value );\r\n    t.value = v;\r\n    let newValueIsRegEx = this.isRegex( t.value );\r\n\r\n    const regExChanged = ( oldValueIsRegEx != newValueIsRegEx );\r\n\r\n    if( regExChanged ){\r\n      t.operator = ( newValueIsRegEx ) ? TagOperator.RegExEq : TagOperator.Eq;\r\n    } \r\n\r\n    if (this.tags.indexOf( t ) === this.tags.length - 1) {\r\n      const nt = new Tag();\r\n      this.tags.push(nt);\r\n    }\r\n  }\r\n}","import { AggrFunc, AggrFuncGroup } from '../../../../../metrics.m';\r\n\r\nconst timeSuggestions = ['1s', '10s', '1m', '5m', '10m', '15m', '1h']\r\n\r\nexport const menuItems: any[] = [\r\n  { label: AggrFuncGroup[ 0 ], items: [ \r\n     { label: AggrFunc.Count },\r\n     { label: AggrFunc.Distinct },\r\n     { label: AggrFunc.Integral },\r\n     { label: AggrFunc.Mean },\r\n     { label: AggrFunc.Median },\r\n     { label: AggrFunc.Mode },\r\n     { label: AggrFunc.Sum },\r\n     ] },\r\n  { label: AggrFuncGroup[ 1 ], items: [ \r\n    { label: AggrFunc.Bottom, param: { value: '3' } },\r\n    { label: AggrFunc.First },\r\n    { label: AggrFunc.Last },\r\n    { label: AggrFunc.Max },\r\n    { label: AggrFunc.Min },\r\n    { label: AggrFunc.Percentile, param: { value: '95' }  },\r\n    { label: AggrFunc.Top, param: { value: '3' } },\r\n    ] },\r\n  { label: AggrFuncGroup[ 2 ], items: [ \r\n    { label: AggrFunc.Derivative,\r\n      param: { value: timeSuggestions[ 1 ], suggestions: [...timeSuggestions] } },\r\n    { label: AggrFunc.Spread  },\r\n    { label: AggrFunc.NonNegativeDerivative,\r\n       param: { value: timeSuggestions[ 1 ], suggestions: [...timeSuggestions] } },\r\n    { label: AggrFunc.Difference },\r\n    { label: AggrFunc.NonNegativeDifference },\r\n    { label: AggrFunc.MovingAverage, param: { value: '10', suggestions: ['5', '10', '20', '30', '40'] } },\r\n    { label: AggrFunc.CumulativeSum },\r\n    { label: AggrFunc.Stddev },\r\n    { label: AggrFunc.Elapsed, \r\n      param: { value: timeSuggestions[ 1 ], suggestions: [...timeSuggestions] } },\r\n    ] },\r\n//  { label: AggrFuncGroup[ 3 ], items: [ \r\n//     { label: AggrFunc.HoltWinters },\r\n//     { label: AggrFunc.HoltWintersWithFit }\r\n//     ] },\r\n  { label: AggrFuncGroup[ 4 ], items: [\r\n    { label: AggrFunc.Math, param: { value: ' / 100' } }\r\n  ]  },\r\n  { label: AggrFuncGroup[ 5 ], items: [\r\n    { label: AggrFunc.Alias, param: { value: 'alias' } }\r\n  ]  },\r\n  { label: 'Field', items: [ { label: 'field' }] }\r\n];\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { menuItems } from './func-items';\r\nimport * as _ from 'lodash';\r\nimport { ContextMenuComponent } from 'uilib';\r\n\r\n@Component({\r\n  selector: 'field-function-picker',\r\n  template: `\r\n    <div class=\"gf-form\" >\r\n      <a class=\"gf-form-label pointer\" (click)=\"cm.show( $event )\" >\r\n        <i class=\"fa fa-plus\" ></i>\r\n      </a>\r\n    </div>\r\n\r\n    <ed-context-menu [items]=\"items\" #cm></ed-context-menu>\r\n  `\r\n})\r\nexport class FieldFunctionPickerComponent   {\r\n  items =\t_.cloneDeep( menuItems ); \r\n\r\n  @Output() pick = new EventEmitter<any>();\r\n\r\n  ngOnInit(){\r\n    ContextMenuComponent.wrapItems( this.items, x => this.pick.emit( x.item ) )\r\n  }\r\n}","<div class=\"gf-form\">\r\n\t<label class=\"gf-form-label\">\r\n\t\t<a (click)=\"cmRemove.show( $event )\" class=\"pointer\">{{func.name}} (</a>\r\n\r\n\t\t<a *ngIf=\"param\">\r\n\t\t\t<span [hidden]=\"isEditorVisible\" (click)=\"onShowEditor( $event )\">{{paramValue}}</span>\r\n\t\t</a>\r\n\r\n\t\t<input *ngIf=\"isEditorVisible\" type=\"text\"\r\n\t\t\tclass=\"ff__editor \"\r\n\t\t\t[ngStyle]=\"{width: ((textValue.length + 1) * 8) + 'px' }\"\r\n\t\t\t[(ngModel)]=\"textValue\"\r\n\t\t\t(focusout)=\"onEditorFocusOut()\"\r\n\t\t\t(keydown)=\"onEditorKeyDown()\"\r\n\t\t\t(keyup.enter)=\"onEditorKeyUpEnter()\"\r\n\t\t\t(keyup.escape)=\"onEditorKeyUpEnter()\"\r\n\t\t\tspellcheck=\"false\" \r\n\t\t\t#editor >\r\n\r\n\t\t<a (click)=\"onShowEditor( $event )\">)</a>\r\n\t</label>\r\n</div>\r\n\r\n<ed-context-menu [items]=\"[deleteMenuItem]\" #cmRemove ></ed-context-menu>\r\n\r\n<ed-context-menu [items]=\"suggestionItems\" #suggestions ></ed-context-menu>","import { Component, ElementRef, EventEmitter,\r\n  Input, Output, ViewChild } from '@angular/core';\r\nimport { ContextMenuComponent } from 'uilib';\r\nimport { FuncObject } from '../../../../../metrics.m';\r\n\r\n@Component({\r\n  selector: 'field-function-editor',\r\n  templateUrl: './func-editor.html',\r\n  styleUrls: ['./func-editor.scss']\r\n})\r\nexport class FieldFunctionEditorComponent   {\r\n\r\n  @Input() func: FuncObject;\r\n  @Output() remove = new EventEmitter();\r\n  @Output() rebuild = new EventEmitter();\r\n\r\n  textValue: string;\r\n\r\n  isEditorVisible = false;\r\n  isSuggestionsMenuOpen = false;\r\n  suggestionItems = [];\r\n  deleteMenuItem = { label: 'Remove', command: _ => this.remove.emit()}\r\n\r\n  @ViewChild('editor') editorElement: ElementRef;\r\n  @ViewChild(\"suggestions\") suggestions: ContextMenuComponent;\r\n\r\n  get param(){\r\n    return this.func.param;\r\n  }\r\n\r\n  get paramValue(){\r\n    return this.param.value\r\n  }\r\n\r\n  get hasSuggestions(){\r\n    return ( this.param && this.param.suggestions );\r\n  }\r\n\r\n  ngOnInit(){\r\n    if( this.param ){\r\n      this.textValue = this.paramValue;\r\n    }\r\n    \r\n    if( this.hasSuggestions ){\r\n      this\r\n        .param\r\n        .suggestions\r\n        .forEach(e => this.suggestionItems.push({\r\n          label: e,\r\n          command: (x) => {\r\n\r\n            const same = this.paramValue == x.item.label;\r\n\r\n            if( !same ){\r\n              this.param.value = this.textValue = x.item.label;\r\n              this.isEditorVisible = false;\r\n              this.rebuild.emit()\r\n            }\r\n          }\r\n         }));\r\n    }\r\n  }\r\n\r\n  onShowEditor(e){\r\n    if( !this.param ){\r\n      return;\r\n    }\r\n\r\n    if (this.hasSuggestions) {\r\n      this.isSuggestionsMenuOpen = true;\r\n      this.suggestions.show(e);\r\n    }\r\n\r\n    setTimeout(() => { \r\n      this.isEditorVisible = true;\r\n\r\n      setTimeout( () => this.editorElement.nativeElement.focus(), 0 )\r\n    }, 0);\r\n  }\r\n\r\n  onEditorFocusOut(){\r\n    if( !this.isSuggestionsMenuOpen ){\r\n      this.isEditorVisible = false;\r\n\r\n      const same = this.paramValue == this.textValue;\r\n\r\n      if( !same ){\r\n        this.param.value = this.textValue\r\n        this.rebuild.emit()\r\n      }\r\n    }\r\n  }\r\n\r\n  onEditorKeyDown(){\r\n    this.isSuggestionsMenuOpen = false;\r\n    this.suggestions.hide()\r\n  }\r\n\r\n  onEditorKeyUpEnter(){\r\n    this.isEditorVisible = false;\r\n\r\n    const same = this.paramValue == this.textValue;\r\n\r\n    if( !same ){\r\n      this.param.value = this.textValue\r\n      this.rebuild.emit()\r\n    }\r\n  }\r\n\r\n\r\n}","<div class=\"gf-form-inline\">\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label query-keyword width-7\">\r\n\t\t\t<span *ngIf=\"index === 0\">SELECT</span>&nbsp;\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<ed-autocomplete-picker \r\n\t\t[(ngModel)]=\"field.key\"\r\n\t\tplaceholder=\"field(value)\" \r\n\t\tformatString=\"field({0})\" \r\n\t\t[request]=\"fields$\"\r\n\t\t(pick)=\"onFieldPick($event);needRebuild()\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<field-function-editor *ngFor=\"let f of field.functions\"\r\n\t\t[func] =\"f\" \r\n\t\t(remove)=\"onFuncRemove( f ); needRebuild()\"\r\n\t\t(rebuild)=\"needRebuild()\">\r\n\t</field-function-editor>\r\n\r\n\t<field-function-picker (pick)=\"onFuncPick($event); needRebuild()\" ></field-function-picker>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n\t\r\n</div>\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { map } from 'rxjs/operators';\r\nimport { AggrFuncGroup, AggrFuncHelper, FuncObject } from '../../../metrics.m';\r\nimport { BaseQueryComponent } from '../query-base';\r\nimport * as _ from 'lodash';\r\nimport { menuItems } from './func/picker/func-items';\r\n\r\n@Component({\r\n  selector: 'field-editor',\r\n  templateUrl: './field.html'\r\n})\r\nexport class FieldEditorComponent extends BaseQueryComponent  {\r\n\r\n  index: number;\r\n  fieldFuncItems = menuItems; \r\n\r\n  @Input() field: any;\r\n\r\n  @Output() remove = new EventEmitter();\r\n  @Output() add = new EventEmitter();\r\n\r\n  get functions(): FuncObject[]{\r\n    return this.field.functions;\r\n  }\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.index = this\r\n      .query\r\n      .fields\r\n      .indexOf( this.field );\r\n\r\n    const flatFieldFuncItems = this\r\n      .fieldFuncItems\r\n      .map( p => p.items )\r\n      .reduce( (a, b) => a.concat(b));\r\n\r\n    this\r\n      .field\r\n      .functions\r\n      .forEach( f => {\r\n        if( f.param ){\r\n          let s = flatFieldFuncItems.find( x => x.text === f.name );\r\n          \r\n          if( s && s.param && s.param.suggestions ){\r\n            f.param.suggestions = [...s.param.suggestions];\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  get fields$() {\r\n    return this\r\n      .proxy(`SHOW FIELD KEYS FROM \\\"${this.query.measurement}\\\"`)\r\n      .pipe(\r\n        map(x => {\r\n          if( !x || 0 == x.length ){\r\n            return null;\r\n          }\r\n\r\n          const fields = [...x[0].values.map(y => y[0])];\r\n          return ( this.query.fields.length > 1 ) ? [ this.REMOVE, ...fields ] : fields;\r\n        } ));\r\n  }\r\n\r\n  onFieldPick( field: string ){\r\n    if( field === this.REMOVE ){\r\n      this.remove.emit();\r\n    } else{\r\n      this.field.key = field; \r\n    }\r\n  }\r\n \r\n  onFuncPick( arg ){\r\n    const fo = new FuncObject();\r\n    fo.name = arg.label;\r\n\r\n    if( arg.label == \"field\" ){\r\n      this.add.emit();\r\n      return;\r\n    }\r\n\r\n    if( arg.param )  {\r\n      fo.param = _.cloneDeep( arg.param );\r\n    }\r\n\r\n    const alias = this.functions.find( x => \r\n      AggrFuncHelper.getGroup( x.name ) ==  AggrFuncGroup.Alias )\r\n\r\n    const math = this.functions.find( x => \r\n      AggrFuncHelper.getGroup( x.name ) == AggrFuncGroup.Math )\r\n\r\n    const len = this.functions.length;\r\n\t\tconst funcs = this.functions\r\n\r\n    switch( AggrFuncHelper.getGroup( arg.label ) ){\r\n      case AggrFuncGroup.Aggregations:\r\n      case AggrFuncGroup.Selectors:\r\n        const duplicate = this\r\n          .field\r\n          .functions\r\n          .find( x => \r\n            AggrFuncHelper.getGroup( x.name ) == AggrFuncGroup.Aggregations ||\r\n            AggrFuncHelper.getGroup( x.name ) == AggrFuncGroup.Selectors );\r\n\r\n        if( duplicate ){\r\n          funcs[ 0 ] = fo;\r\n        } else{\r\n          funcs.splice( 0, 0, fo);\r\n        }\r\n        break;\r\n\r\n        case AggrFuncGroup.Transformations:\r\n          if( !alias ){\r\n            funcs.push( fo );\r\n          } else{\r\n            funcs.splice( len - 1, 0, fo);\r\n          }\r\n          break;\r\n\r\n        case AggrFuncGroup.Math:\r\n          if( math && !alias ){\r\n            funcs[ len -1 ] = fo;\r\n          } else if( !math && alias ) {\r\n            funcs.splice( len - 1, 0, fo);\r\n          } else {\r\n            funcs.push( fo );\r\n          }\r\n          break;\r\n\r\n        case AggrFuncGroup.Alias:\r\n          if( alias ){\r\n            this.functions[ len -1 ] = fo;\r\n          } else {\r\n            this.functions.push( fo );\r\n          }\r\n          break;\r\n    }\r\n  }\r\n\r\n  onFuncRemove( f: FuncObject ){\r\n    const index = this.functions.indexOf( f );\r\n\r\n    if( -1 !== index ){\r\n      this.functions.splice( index, 1 );\r\n    }\r\n  }\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { AggrFunc, Field, FuncObject } from '../../../metrics.m';\r\nimport { BaseQueryComponent } from '../query-base';\r\n\r\n@Component({\r\n  selector: 'fields-editor',\r\n  template: `\r\n    <field-editor *ngFor=\"let f of query.fields\" \r\n      [query]=\"query\" \r\n      [field]=\"f\"\r\n      (remove)=\"onRemove(f)\"\r\n      (add)=\"onAdd()\"\r\n      (rebuild)=\"needRebuild()\" >\r\n    </field-editor> `\r\n})\r\nexport class FieldsEditorComponent extends BaseQueryComponent  {\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.fields?.length) {\r\n      this.query.fields = [this.createEmpyField()];\r\n    }\r\n  }\r\n\r\n  onRemove(f: Field) {\r\n    const fields = this.query.fields;\r\n\r\n    if (1 < fields.length) {\r\n\r\n      const index = fields.indexOf( f );\r\n\r\n      if( -1 !== index ){\r\n        this.query.fields.splice( index, 1 );\r\n      }\r\n    }\r\n  }\r\n\r\n  onAdd() {\r\n    this\r\n      .query\r\n      .fields\r\n      .push(this.createEmpyField());\r\n  }\r\n\r\n  createEmpyField() {\r\n    const def = new FuncObject();\r\n    def.name = AggrFunc.Mean;\r\n\r\n    const field = new Field();\r\n    field.functions = [ def ];\r\n\r\n    return field;\r\n  }\r\n}","import { Component, Input, Output } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '[tag-label]',\r\n\ttemplate: `\r\n\t<span (click)=\"cm.show($event)\" class=\"gf-form-label\">tag({{value}})</span>\r\n\r\n\t<ed-context-menu [items]=\"[deleteMenuItem]\" #cm>`,\r\n})\r\nexport class GroupByTagLabelComponent {\r\n\t@Input()value:string;\r\n\t@Output() removed = new EventEmitter();\r\n\r\n\tdeleteMenuItem = {\r\n\t\tlabel: 'Remove',\r\n\t\tcommand: _ => this.removed.emit( this.value )\r\n\t}\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"gf-form-inline\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">\r\n      <span>GROUP BY</span>\r\n    </label>\r\n  </div>\r\n\r\n  <ed-autocomplete-picker   \r\n    *ngIf=\"time\" \r\n    [(ngModel)]=\"timeValue\"\r\n    formatString=\"time({0})\"\r\n    [request]=\"timeOptions$\">\r\n  </ed-autocomplete-picker >\r\n\r\n  <div *ngFor=\"let t of groupByTags\" [value]=\"t.params[ 0 ]\" tag-label \r\n    class=\"gf-form pointer\" (removed)=\"onRemoveTag( $event )\"\t>\r\n  </div>\r\n\r\n  <ed-autocomplete-picker   \r\n    placeholder=\"fa fa-plus\"\r\n    readonly=\"true\"\r\n    [request]=\"groupByOptions$\"\r\n    (pick)=\"onOptionPick( $event );\">\r\n  </ed-autocomplete-picker>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"gf-form-inline\" *ngIf=\"query.order == OrderByTimeRef.Desc;\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">\r\n      ORDER BY\r\n    </label>\r\n\r\n    <label class=\"gf-form-label pointer\" (click)=\"query.order=OrderByTimeRef.Asc; needRebuild()\">\r\n      time <span class=\"query-keyword\">DESC</span> <i class=\"fa fa-remove ml-1\"></i>\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"gf-form-inline\" *ngIf=\"query.limit\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">LIMIT</label>\r\n    <input type=\"text\" class=\"gf-form-input width-9\" [(ngModel)]=\"limit\"\r\n      spellcheck='false' placeholder=\"No Limit\" (change)=\"needRebuild()\" >\r\n  </div>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"gf-form-inline\" *ngIf=\"query.slimit\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">SLIMIT</label>\r\n    <input type=\"text\" class=\"gf-form-input width-9\" [(ngModel)]=\"slimit\"\r\n      spellcheck='false' placeholder=\"No Limit\" (change)=\"needRebuild()\">\r\n  </div>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"gf-form-inline\">\r\n  <div class=\"gf-form max-width-30\">\r\n    <label class=\"gf-form-label query-keyword width-7\">ALIAS BY</label>\r\n    <input type=\"text\" class=\"gf-form-input\" [(ngModel)]=\"query.alias\" spellcheck='false'\r\n      placeholder=\"Naming pattern\">\r\n  </div>\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { BaseQueryComponent } from '../query-base';\r\nimport * as _ from 'lodash';\r\nimport { GroupByFillOptions, GroupByObject, \r\n  GroupByOption, GroupByTimeOptions, OrderByTime } from '../../../metrics.m';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'group-by-editor',\r\n  templateUrl: './group-by.html'\r\n})\r\nexport class GroupByEditorComponent extends BaseQueryComponent  {\r\n\r\n  availableCommands : Array<GroupByCommand>;\r\n  selectedCommands : Array<GroupByCommand>;\r\n  OrderByTimeRef = OrderByTime;\r\n\r\n  get limit() : number {\r\n\t\treturn this.query.limit;\r\n\t}\r\n\r\n\tset limit( l: number ){\r\n    this.query.limit = l;\r\n    \r\n    if( !l ){\r\n      this.needRebuild();\r\n    }\r\n  }\r\n  \r\n  get slimit() : number {\r\n\t\treturn this.query.slimit;\r\n\t}\r\n\r\n\tset slimit( l: number ){\r\n    this.query.slimit = l;\r\n    \r\n    if( !l ){\r\n      this.needRebuild();\r\n    }\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.groupBy.find( x => x.type == GroupByOption.Time );\r\n\t}\r\n\r\n\tget timeValue() {\r\n\t\treturn this.time.params[ 0 ];\r\n  }\r\n  \r\n  set timeValue( v: string ){\r\n    if( v == this.REMOVE ){\r\n      const index = this\r\n        .groupBy\r\n        .findIndex( x=> x.type == GroupByOption.Time );\r\n\r\n      if( -1 !== index ){\r\n        this.groupBy.splice( index, 1 );\r\n      }\r\n\t\t} else{\r\n\t\t\tthis.time.params = [ v ];\r\n    }\r\n    \r\n    this.needRebuild();\r\n  }\r\n\r\n\tget groupByTags() {\r\n\t\treturn this.query.groupBy.filter( x => x.type == GroupByOption.Tag );\r\n\t}\r\n\r\n\tget fill() {\r\n\t\treturn this.groupBy.find( x => x.type == GroupByOption.Fill );\r\n\t}\r\n\r\n\tget fillValue() {\r\n\t\treturn this.fill.params[ 0 ];\r\n\t}\r\n\r\n\tget showFill():boolean{\r\n\t\treturn ( undefined != this.fill );\r\n  }\r\n  \t\r\n  get timeOptions$() {\r\n    return of( [this.REMOVE, ...Object.values(GroupByTimeOptions)] );\r\n\t}\r\n\r\n\tget fillOptions(){\r\n\t\treturn of( [this.REMOVE, ...Object.values(GroupByFillOptions)] );\r\n  }\r\n  \r\n  get groupByOptions$(){\r\n\t\tvar options = [];\r\n\r\n\t\tif( !this.selectedCommands.find( x => x.type == GroupByCommandType.Fill ) ){\r\n\t\t\toptions.push( this.availableCommands[ 0 ].text );\r\n\t\t}\r\n\r\n\t\tif( !this.time ){\r\n\t\t\toptions.push( this.availableCommands[ 1 ].text );\r\n\t\t}\r\n\r\n\t\tif( !this.query.limit ){\r\n\t\t\toptions.push( this.availableCommands[ 2 ].text );\r\n\t\t}\r\n\r\n\t\tif( !this.query.slimit ){\r\n\t\t\toptions.push( this.availableCommands[ 3 ].text );\r\n\t\t}\r\n\r\n\t\tif( this.query.order != OrderByTime.Desc ){\r\n\t\t\toptions.push( this.availableCommands[ 4 ].text );\r\n\t\t}\r\n\r\n\t\tconst q = (this.query.measurement) ?\r\n\t\t\t`SHOW TAG KEYS from ${this.query.measurement}` :\r\n\t\t\t`SHOW TAG KEYS`;\r\n\r\n\t\treturn this\r\n\t\t\t.proxy(q)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(x => {\r\n\t\t\t\t\tconst tags = x[0].values.reduce((acc, value) => acc.concat(value), []);\r\n\r\n\t\t\t\t\tthis.availableCommands = this\r\n\t\t\t\t\t\t.availableCommands\r\n\t\t\t\t\t\t.filter( x => x.type != GroupByCommandType.Tag )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\ttags.forEach( e => this.availableCommands.push( \r\n\t\t\t\t\t\tnew GroupByCommand( GroupByCommandType.Tag, `tag(${e})`, e )));\r\n\r\n\t\t\t\t\tconst tagCommands = this\r\n\t\t\t\t\t\t.availableCommands\r\n\t\t\t\t\t\t.filter( c => c.type == GroupByCommandType.Tag )\r\n\t\t\t\t\t\t.filter( c => !this.query.groupBy.find( x =>\r\n\t\t\t\t\t\t\tx.type == GroupByCommandType.Tag &&\tx.params[ 0 ] == c.value ) )\r\n\t\t\t\t\t\t.map( c => c.text )\r\n\r\n\t\t\t\t\treturn [ ...options, ...tagCommands\t];\r\n\t\t\t\t}))\r\n\r\n\t}\r\n\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n\r\n      this.selectedCommands = [];\r\n\r\n      this.availableCommands = [\r\n        new GroupByCommand( GroupByCommandType.Fill, \"fill(null)\", \"null\" ),\r\n        new GroupByCommand( GroupByCommandType.Time, \"time($interval)\", \"$__interval\" ),\r\n        new GroupByCommand( GroupByCommandType.Limit, \"LIMIT\", 10 ),\r\n        new GroupByCommand( GroupByCommandType.SLimit, \"SLIMIT\", 10 ),\r\n        new GroupByCommand( GroupByCommandType.OrderBy, \"ORDER BY time DESC\" )]\r\n  }\r\n  \r\n\tonOptionPick( e: string ){\r\n    var command = this\r\n      .availableCommands\r\n      .find( x => x.text == e );\r\n\r\n    if( !command ){\r\n      return \r\n    }\r\n\r\n    this.selectedCommands.push( command );\r\n    \r\n\t\tswitch( command.type ){\r\n      case GroupByCommandType.Time:\r\n\t\t\t\tthis.groupBy.push( new GroupByObject( GroupByOption.Time, [command.value] ) );\r\n        break;\r\n        \r\n\t\t\tcase GroupByCommandType.Fill:\r\n\t\t\t\tthis.groupBy.push( new GroupByObject( GroupByOption.Fill, [command.value] ) );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase GroupByCommandType.Limit:\r\n\t\t\t\tthis.query.limit = command.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase GroupByCommandType.SLimit:\r\n\t\t\t\tthis.query.slimit = command.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase GroupByCommandType.OrderBy:\r\n\t\t\t\tthis.query.order = OrderByTime.Desc;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase GroupByCommandType.Tag:\r\n\t\t\t\tthis.groupBy.push( new GroupByObject( GroupByOption.Tag, [command.value] ) );\r\n\t\t\t\tbreak;\r\n    }\r\n    \r\n    this.needRebuild()\r\n  }\r\n\r\n  onRemoveTag( t: string ){\r\n    this.query.groupBy = this\r\n      .groupBy\r\n      .filter( x => !( x.type == GroupByOption.Tag && x.params[ 0 ] == t ) );\r\n\r\n    this.needRebuild();\r\n\t}\r\n}\r\n\r\nclass GroupByCommand{\r\n\tconstructor( \r\n\t\tpublic type:GroupByCommandType,\r\n\t\tpublic text: string,\r\n\t\tpublic value: any = undefined ){\r\n\r\n\t}\r\n}\r\n\r\nenum GroupByCommandType{\r\n\tFill,\r\n\tTime,\r\n\tTag,\r\n\tLimit,\r\n\tSLimit,\r\n\tOrderBy\r\n}","<div class=\"gf-form-query\">\r\n\t<div class=\"gf-form gf-form-query-letter-cell \" (click)=\"opened=!opened\"> \r\n\t\t<label class=\"gf-form-label\"  >\r\n\t\t\t<a class=\"pointer\" tabindex=\"1\" >\r\n        <span  ng-class=\"{muted: !ctrl.canCollapse}\" class=\"gf-form-query-letter-cell-carret\">\r\n          <i class=\"fa fa-caret-down\" *ngIf=\"opened\"></i>\r\n          <i class=\"fa fa-caret-right\" *ngIf=\"!opened\"></i>\r\n        </span>\r\n        <span class=\"gf-form-query-letter-cell-letter\">{{query.refId}}</span>\r\n        \r\n      </a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t\r\n\t<div class=\"gf-form-query-content gf-form-query-content--collapsed mr-1\" *ngIf=\"!opened\">\r\n\t\t<div class=\"gf-form\">\r\n\t\t\t<label class=\"gf-form-label pointer gf-form-label--grow\" (click)=\"opened=!opened\">\r\n\t\t\t\t{{queryAsString}}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-query-content\" *ngIf=\"opened\">\r\n\r\n\t\t<measurement-editor [query]=\"query\" (rebuild)=\"build()\"></measurement-editor>\r\n\r\n\t\t<fields-editor [query]=\"query\" (rebuild)=\"build()\"></fields-editor>\r\n\r\n\t\t<group-by-editor [query]=\"query\" (rebuild)=\"build()\"></group-by-editor>\r\n\r\n\t</div>\r\n\r\n\t<div class=\"gf-form ed\">\r\n\t\t<label class=\"gf-form-label\" (click)=\"cm.show( $event )\">\r\n\t\t\t<a class=\"pointer dropdown-toggle\" data-toggle=\"dropdown\" tabindex=\"1\">\r\n\t\t\t\t<i class=\"fa fa-bars\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n    <label class=\"gf-form-label\">\r\n\t\t\t<a ng-click=\"ctrl.toggleHideQuery()\" role=\"menuitem\">\r\n\t\t\t\t<i class=\"fa fa-eye\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t\t<label class=\"gf-form-label\">\r\n\t\t\t<a class=\"pointer\" tabindex=\"1\" (click)=\"remove.emit();\">\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<ed-context-menu #cm [items]=\"contextMenuItems\">\r\n</ed-context-menu>","import { Component, EventEmitter, Inject, Output } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN,\r\n  TimeRangeStore, MetricQuery } from 'common';\r\nimport { BaseQueryComponent } from './query-base';\r\n\r\n@Component({\r\n  selector: 'query-editor',\r\n  templateUrl: './query.html'\r\n})\r\nexport class QueryEditorComponent extends BaseQueryComponent {\r\n\r\n  contextMenuItems = [];\r\n\r\n  opened: boolean = true;\r\n  editMode: boolean = false;\r\n\r\n  @Output() remove = new EventEmitter();\r\n  @Output() moveUp = new EventEmitter();\r\n  @Output() moveDown = new EventEmitter();\r\n  @Output() duplicate = new EventEmitter();\r\n  \r\n\r\n  constructor(\r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService,\r\n    public time :TimeRangeStore ){\r\n      super( panel, dsService );\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.contextMenuItems = [\r\n      {\r\n        label: 'Toggle edit mode',\r\n        command: ( _ ) => this.editMode != this.editMode\r\n      },\r\n\r\n      {\r\n        label: 'Duplicate',\r\n        command: ( _ ) => this.duplicate.emit()\r\n      },\r\n\r\n      {\r\n        label: 'Move up',\r\n        command: ( _ ) => this.moveUp.emit()\r\n      },\r\n\r\n      {\r\n        label: 'Move down',\r\n        command: ( _ ) => this.moveDown.emit()\r\n      },\r\n    ]\r\n\r\n    this.build( false );\r\n  }\r\n\r\n  onRebuild(){\r\n    this.rebuild.emit();\r\n  }\r\n}","<query-editor *ngFor=\"let t of metrics.targets\"\r\n  [query]=\"t\"\r\n  (remove)=\"onRemove(t)\"\r\n  (duplicate)=\"onDuplicate(t)\"\r\n  (moveUp)=\"onMoveUp(t)\"\r\n  (moveDown)=\"onMoveDown(t)\"\r\n  (rebuild)=\"rebuild()\">\r\n</query-editor>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Panel, PANEL_TOKEN, TimeRangeStore } from 'common';\r\nimport { InfluxQuery } from '../metrics.m';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'metrics-designer',\r\n  templateUrl: `./designer.html`\r\n})\r\nexport class InfluxMetricsDesignerComponent {\r\n\r\n  get metrics():any{\r\n    return this\r\n      .panel\r\n      .widget\r\n      .metrics;\r\n  }\r\n\r\n  constructor(\r\n    @Inject( PANEL_TOKEN ) public panel: Panel,\r\n    private time: TimeRangeStore){\r\n\r\n  }\r\n\r\n  onRemove( t: InfluxQuery,  ){\r\n    const index = this.metrics.targets.indexOf( t );\r\n\r\n    if( -1 !== index ){\r\n      this.metrics.targets.splice( index, 1 );\r\n      this.rebuild();\r\n    }\r\n  }\r\n\r\n  onMoveUp( t: InfluxQuery ){\r\n    \r\n  }\r\n\r\n  onMoveDown( t: InfluxQuery ){\r\n    console.log( 'onMoveDown' );\r\n  }\r\n\r\n  onDuplicate( t: InfluxQuery ){\r\n    this.metrics.targets.push( _.cloneDeep( t ) )\r\n  }\r\n\r\n  rebuild(){\r\n    //console.log( this.metrics );\r\n    this.time.tick();\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { InfluxSettingsEditorComponent } from './settings/settings';\n\n\nimport { EdCommonModule } from 'common';\nimport { EdUilibModule } from 'uilib';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { InfluxMetricsBuilder } from './metrics/builder';\nimport { InfluxMetricsDesignerComponent } from './metrics/designer/designer';\nimport { QueryEditorComponent } from './metrics/designer/query/query';\nimport { MeasurementEditorComponent } from './metrics/designer/query/measurement/measurement';\nimport { FieldsEditorComponent } from './metrics/designer/query/fields/fields';\nimport { FieldEditorComponent } from './metrics/designer/query/fields/field';\nimport { FieldFunctionEditorComponent } from './metrics/designer/query/fields/func/editor/func-editor';\nimport { FieldFunctionPickerComponent } from './metrics/designer/query/fields/func/picker/func-picker';\nimport { GroupByEditorComponent } from './metrics/designer/query/group-by/group-by';\nimport { GroupByTagLabelComponent } from './metrics/designer/query/group-by/tag-label.c';\n\n@NgModule({\n  declarations: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n\n    InfluxMetricsDesignerComponent,\n    QueryEditorComponent,\n    MeasurementEditorComponent,\n    FieldsEditorComponent,\n    FieldEditorComponent,\n    FieldFunctionEditorComponent,\n    FieldFunctionPickerComponent,\n\n    GroupByEditorComponent,\n    GroupByTagLabelComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    EdCommonModule,\n    EdUilibModule\n  ],\n  exports: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n    InfluxMetricsDesignerComponent\n  ]\n})\nexport class InfluxModule { }\n"]}