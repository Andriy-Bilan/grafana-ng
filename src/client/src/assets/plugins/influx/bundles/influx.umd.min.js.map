{"version":3,"sources":["../../../../app/plugins/datasources/influx/src/settings/settings.html","../../../../app/plugins/datasources/influx/src/settings/settings.ts","../../../../app/plugins/datasources/influx/src/metrics/metrics.m.ts","../../../../app/plugins/datasources/influx/src/metrics/builder.ts","../../../../../node_modules/tslib/tslib.es6.js","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query-base.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/measurement/measurement.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/measurement/measurement.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/picker/func-items.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/picker/func-picker.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/editor/func-editor.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/func/editor/func-editor.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/field.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/field.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/fields/fields.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/group-by/tag-label.c.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/group-by/group-by.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/group-by/group-by.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/designer.html","../../../../app/plugins/datasources/influx/src/metrics/designer/designer.ts","../../../../app/plugins/datasources/influx/src/influx.mod.ts"],"names":["i0.ɵɵtext","i0.ɵɵtemplate","InfluxSettingsEditorComponent","this","form","FormGroup","url","FormControl","Validators","required","whitelistedCookies","basicAuthentication","withCredentials","tlsClientAuth","withCaCert","skipTlsVerification","database","user","password","minTimeInterval","Object","defineProperty","prototype","get","selectors","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵadvance","AggrFunc","AggrFuncGroup","tags","Array","fields","order","OrderByTime","Asc","groupBy","GroupByOption","GroupByTimeOptions","GroupByFillOptions","AggrFuncHelper","getGroup","f","Count","Distinct","Integral","Mean","Median","Mode","Sum","Aggregations","Bottom","First","Last","Max","Min","Percentile","Top","Selectors","Derivative","Spread","NonNegativeDerivative","Difference","NonNegativeDifference","MovingAverage","CumulativeSum","Stddev","Elapsed","Transformations","HoltWinters","HoltWintersWithFit","Predictors","Math","Alias","type","params","MetricVars","TIME_FILTER","TIME_INTERVAL","TagOperator","TagCondition","key","value","operator","Eq","condition","And","InfluxMetricsBuilder","time","undefined","build","metrics","range","_this","array","targets","filter","x","hidden","forEach","t","gen","Builder","invalid","virgin","push","text","request","join","of","i0","ɵɵdirectiveInject","i1","TimeRangeStore","encapsulation","target","length","getFieldsText","getMeasurementText","result","getFieldText","field","aggr","functions","find","name","param","p","math","alias","meas","measurement","root","policy","cond","tagIndex","isRegex","timeFilter","getTimeFilter","groupByTime","Time","groupByFill","Fill","groupByTag","Tag","gb","getOptimalAutoGroupBy","e","index","limit","slimit","TimeRangeParser","toDateTime","from","to","diff","tz","converter","timezone","getInfluxTime","fromIsAbsolute","date","roundUp","_.isString","parts","exec","parseInt","valueOf","expr","isValid","RegExp","startsWith","endsWith","extendStatics","d","b","setPrototypeOf","__proto__","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","i","call","ar","next","done","error","__spread","arguments","concat","BaseQueryComponent","panel","dsService","REMOVE","ADD","change","EventEmitter","rebuild","widget","dataSource","query","proxy","command","dataSourceId","needRebuild","emit","fireRebuild","subscribe","queryAsString","onRebuild","i0.ɵɵelementContainerStart","i0.ɵɵlistener","ɵɵrestoreView","_r5_1","ɵɵnextContext","$event","t_r2","$implicit","ctx_r8","onTagKeyEditPick","i0.ɵɵelementContainerEnd","ctx_r0","conditions$","tagEditKeys$","tagOperators$","tagValues$","PANEL_TOKEN","DataSourceService","inputs","outputs","MeasurementEditorComponent","_super","DEFAULT_POLICY","pipe","map","values","y","reduce","acc","tag","isRegexValue","allOperators","slice","q","tagAddKeys$","_a","ngOnInit","onTagAddKeyPick","k","onTagValuePick","v","oldValueIsRegEx","newValueIsRegEx","RegExEq","features","ɵɵInheritDefinitionFeature","retentionPolicies$","measurements$","timeSuggestions","menuItems","label","items","suggestions","FieldFunctionPickerComponent","_.cloneDeep","pick","ContextMenuComponent","wrapItems","item","show","i0.ɵɵtextInterpolate","_r8_1","onEditorFocusOut","onEditorKeyDown","onEditorKeyUpEnter","ctx_r1","textValue","FieldFunctionEditorComponent","remove","isEditorVisible","isSuggestionsMenuOpen","suggestionItems","deleteMenuItem","_","func","paramValue","hasSuggestions","onShowEditor","setTimeout","editorElement","nativeElement","focus","hide","_r4_1","viewQuery","i0.ɵɵtextInterpolate1","FieldEditorComponent","fieldFuncItems","add","indexOf","flatFieldFuncItems","a","s","onFieldPick","onFuncPick","arg","fo","FuncObject","len","funcs","splice","onFuncRemove","_r3_1","onAdd","f_r1","fields$","FieldsEditorComponent","createEmpyField","onRemove","def","Field","GroupByTagLabelComponent","removed","timeOptions$","ctx_r2","fillOptions$","_r16_1","_r19_1","attrs","GroupByEditorComponent","OrderByTimeRef","selectedCommands","availableCommands","GroupByCommand","GroupByCommandType","Limit","SLimit","OrderBy","l","findIndex","fill","options","Desc","tagCommands","c","onOptionPick","GroupByObject","onRemoveTag","_r8","QueryEditorComponent","contextMenuItems","opened","rawMode","moveUp","moveDown","duplicate","t_r1","onDuplicate","onMoveUp","onMoveDown","InfluxMetricsDesignerComponent","candidate","String","fromCharCode","toUpperCase","round","this_1","refId","onAddQuery","InfluxQuery","nextRefId","copy","tick","InfluxModule","imports","CommonModule","FormsModule","ReactiveFormsModule","EdCommonModule","EdUilibModule","declarations","exports"],"mappings":"qnBAUIA,EAAAA,OAAAA,EAAAA,2CADDC,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,cAAAA,qBCMF,SAAAC,IACCC,KAAKC,KAAO,IAAIC,EAAAA,UAAU,CACzBC,IAAO,IAAIC,EAAAA,YAAa,KAAMC,EAAAA,WAAWC,UACzCC,mBAAsB,IAAIH,EAAAA,YAAa,MAEvCI,oBAAuB,IAAIJ,EAAAA,aAAa,GACxCK,gBAAmB,IAAIL,EAAAA,aAAa,GACpCM,cAAiB,IAAIN,EAAAA,aAAa,GAClCO,WAAc,IAAIP,EAAAA,aAAa,GAC/BQ,oBAAuB,IAAIR,EAAAA,aAAa,GAExCS,SAAY,IAAIT,EAAAA,YAAa,KAAMC,EAAAA,WAAWC,UAC9CQ,KAAQ,IAAIV,EAAAA,YAAa,MACzBW,SAAY,IAAIX,EAAAA,YAAa,MAC7BY,gBAAmB,IAAIZ,EAAAA,YAAa,eAlBtCa,OAAAC,eAAInB,EAAAoB,UAAA,MAAG,KAAP,WACC,OAAOnB,KAAKC,KAAKmB,IAAI,8EAJVrB,qCAAAA,EAA6BsB,UAAA,CAAA,CAAA,uBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,aAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,iBAAA,CAAA,QAAA,MAAA,aAAA,KAAA,OAAA,oEAAA,kBAAA,OAAA,CAAA,EAAA,QAAA,CAAA,QAAA,sBAAA,aAAA,KAAA,kBAAA,sBAAA,CAAA,EAAA,kBAAA,CAAA,aAAA,KAAA,QAAA,aAAA,kBAAA,uBAAA,CAAA,aAAA,KAAA,QAAA,mBAAA,OAAA,+FAAA,kBAAA,mBAAA,CAAA,aAAA,KAAA,QAAA,kBAAA,kBAAA,iBAAA,CAAA,aAAA,KAAA,QAAA,eAAA,OAAA,4CAAA,kBAAA,cAAA,CAAA,aAAA,KAAA,QAAA,kBAAA,kBAAA,uBAAA,CAAA,kBAAA,WAAA,EAAA,QAAA,cAAA,CAAA,kBAAA,OAAA,EAAA,QAAA,aAAA,SAAA,CAAA,OAAA,WAAA,kBAAA,WAAA,EAAA,QAAA,aAAA,SAAA,CAAA,OAAA,+JAAA,OAAA,WAAA,kBAAA,kBAAA,EAAA,QAAA,aAAA,QAAA,eAAA,CAAA,uBAAA,KAAAC,SAAA,SAAAC,EAAAC,SDR1CC,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,KAAAA,GAAyB/B,EAAAA,OAAAA,EAAAA,QAAIgC,EAAAA,eAC7BD,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,aAAAA,GAKC9B,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,OAAAA,EAAAA,GAGD+B,EAAAA,eAEAC,EAAAA,UAAAA,EAAAA,aAAAA,GAMDD,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,KAAAA,GAAyB/B,EAAAA,OAAAA,EAAAA,QAAIgC,EAAAA,eAC7BD,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,MAAAA,GACCE,EAAAA,UAAAA,GAAAA,cAAAA,GAMAA,EAAAA,UAAAA,GAAAA,cAAAA,GAMDD,EAAAA,eAEAD,EAAAA,eAAAA,GAAAA,MAAAA,GACCE,EAAAA,UAAAA,GAAAA,cAAAA,GAMAA,EAAAA,UAAAA,GAAAA,cAAAA,IAMDD,EAAAA,eAEAD,EAAAA,eAAAA,GAAAA,MAAAA,GACCE,EAAAA,UAAAA,GAAAA,cAAAA,IAKDD,EAAAA,eAEDA,EAAAA,eAEAD,EAAAA,eAAAA,GAAAA,KAAAA,GAAyB/B,EAAAA,OAAAA,GAAAA,oBAAgBgC,EAAAA,eAEzCD,EAAAA,eAAAA,GAAAA,MAAAA,GACCE,EAAAA,UAAAA,GAAAA,aAAAA,IAMAF,EAAAA,eAAAA,GAAAA,MAAAA,GACCE,EAAAA,UAAAA,GAAAA,aAAAA,IAOAA,EAAAA,UAAAA,GAAAA,aAAAA,IAODD,EAAAA,eAEDA,EAAAA,eAEAD,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,eACCA,EAAAA,eAAAA,GAAAA,MAAI/B,EAAAA,OAAAA,GAAAA,mBAAegC,EAAAA,eACnBD,EAAAA,eAAAA,GAAAA,KACC/B,EAAAA,OAAAA,GAAAA,0KAEA+B,EAAAA,eAAAA,GAAAA,QAAM/B,EAAAA,OAAAA,GAAAA,kCAA8BgC,EAAAA,eAAQhC,EAAAA,OAAAA,GAAAA,QAAG+B,EAAAA,eAAAA,GAAAA,QAAM/B,EAAAA,OAAAA,GAAAA,kDAA8CgC,EAAAA,eACnGC,EAAAA,UAAAA,GAAAA,MAAKA,EAAAA,UAAAA,GAAAA,MACLjC,EAAAA,OAAAA,GAAAA,2GACDgC,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eAEAD,EAAAA,eAAAA,GAAAA,MAAAA,GACCE,EAAAA,UAAAA,GAAAA,aAAAA,IAUDD,EAAAA,eAGDA,EAAAA,sBAvHKE,EAAAA,WAAAA,YAAAA,EAAAA,MASgCC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,IAAAA,SAAAA,aAAAA,EAAAA,IAAAA,SA2DlCC,EAAAA,UAAAA,IAAAD,EAAAA,WAAAA,QAAAA,WAAAA,CAAoB,aAAA,IAOnBC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,OAAAA,CAAgB,aAAA,GAAhBA,CAAgB,QAAA,GAOhBC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,WAAAA,CAAoB,aAAA,GAApBA,CAAoB,QAAA,GAyBrBC,EAAAA,UAAAA,IAAAD,EAAAA,WAAAA,QAAAA,oBAAAA,CAA6B,aAAA,GAA7BA,CAA6B,QAAA,EAA7BA,CAA6B,cAAA,yNE7EpBE,EAkCAC,IA9DZ,WAIElC,KAAAmC,KAAO,IAAIC,MACZpC,KAAAqC,OAAS,IAAID,MAKbpC,KAAAsC,MAAQC,EAAAA,YAAYC,IAGnBxC,KAAAyC,QAAU,IAAIL,SAKhB,eAKA,cAKYH,EAAAA,EAAAA,WAAAA,EAAAA,SAAQ,KAClB,MAAA,QACAA,EAAA,SAAA,WACAA,EAAA,SAAA,WACAA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MAEAA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,WAAA,aACAA,EAAA,IAAA,MAEAA,EAAA,WAAA,aACAA,EAAA,OAAA,SACAA,EAAA,sBAAA,0BACAA,EAAA,WAAA,aACAA,EAAA,sBAAA,0BACAA,EAAA,cAAA,iBACAA,EAAA,cAAA,iBACAA,EAAA,OAAA,SACAA,EAAA,QAAA,UAEAA,EAAA,YAAA,eACAA,EAAA,mBAAA,wBAEAA,EAAA,KAAA,OACAA,EAAA,MAAA,SAGUC,EAAAA,EAAAA,gBAAAA,EAAAA,cAAa,KACvBA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,YAuDUQ,EAMAC,EAWAC,EAQAL,eA5EZ,SAAAM,YACSA,EAAAC,SAAP,SAAgBC,GACd,OAAQA,GACN,KAAKd,EAAAA,SAASe,MACd,KAAKf,EAAAA,SAASgB,SACd,KAAKhB,EAAAA,SAASiB,SACd,KAAKjB,EAAAA,SAASkB,KACd,KAAKlB,EAAAA,SAASmB,OACd,KAAKnB,EAAAA,SAASoB,KACd,KAAKpB,EAAAA,SAASqB,IACZ,OAAOpB,EAAAA,cAAcqB,aAEvB,KAAKtB,EAAAA,SAASuB,OACd,KAAKvB,EAAAA,SAASwB,MACd,KAAKxB,EAAAA,SAASyB,KACd,KAAKzB,EAAAA,SAAS0B,IACd,KAAK1B,EAAAA,SAAS2B,IACd,KAAK3B,EAAAA,SAAS4B,WACd,KAAK5B,EAAAA,SAAS6B,IACZ,OAAO5B,EAAAA,cAAc6B,UAEvB,KAAK9B,EAAAA,SAAS+B,WACd,KAAK/B,EAAAA,SAASgC,OACd,KAAKhC,EAAAA,SAASiC,sBACd,KAAKjC,EAAAA,SAASkC,WACd,KAAKlC,EAAAA,SAASmC,sBACd,KAAKnC,EAAAA,SAASoC,cACd,KAAKpC,EAAAA,SAASqC,cACd,KAAKrC,EAAAA,SAASsC,OACd,KAAKtC,EAAAA,SAASuC,QACZ,OAAOtC,EAAAA,cAAcuC,gBAEvB,KAAKxC,EAAAA,SAASyC,YACd,KAAKzC,EAAAA,SAAS0C,mBACZ,OAAOzC,EAAAA,cAAc0C,WAEvB,KAAK3C,EAAAA,SAAS4C,KACZ,OAAO3C,EAAAA,cAAc2C,KAEvB,KAAK5C,EAAAA,SAAS6C,MACZ,OAAO5C,EAAAA,cAAc4C,eAQ5B,SAAoBC,EAAaC,QAAA,IAAAA,IAAAA,EAAA,IAAbhF,KAAA+E,KAAAA,EAAa/E,KAAAgF,OAAAA,IAGtBtC,EAAAA,EAAAA,gBAAAA,EAAAA,cAAa,KACxBA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,IAAA,GAAA,OAGWC,EAAAA,EAAAA,qBAAAA,EAAAA,mBAAkB,KAC5B,QAAA,cACAA,EAAA,GAAA,KACAA,EAAA,IAAA,MACAA,EAAA,GAAA,KACAA,EAAA,GAAA,KACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,GAAA,MAGUC,EAAAA,EAAAA,qBAAAA,EAAAA,mBAAkB,KAC7B,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,KAAA,IACAA,EAAA,KAAA,WACAA,EAAA,OAAA,UAGWL,EAAAA,EAAAA,cAAAA,EAAAA,YAAW,KACtB,IAAA,MACAA,EAAA,KAAA,aAGD,aACiB0C,EAAAC,YAAc,cACdD,EAAAE,cAAgB,kBAUrBC,EASAC,IAhBZ,WACErF,KAAAsF,IAAc,GACdtF,KAAAuF,MAAgB,GAChBvF,KAAAwF,SAAwBJ,EAAAA,YAAYK,GACpCzF,KAAA0F,UAA0BL,EAAAA,aAAaM,MAG7BP,EAAAA,EAAAA,cAAAA,EAAAA,YAAW,KACrB,GAAA,IACAA,EAAA,IAAA,KACAA,EAAA,KAAA,IACAA,EAAA,QAAA,IACAA,EAAA,QAAA,KACAA,EAAA,SAAA,MAGUC,EAAAA,EAAAA,eAAAA,EAAAA,aAAY,KACtB,IAAA,MACAA,EAAA,GAAA,sBCpKD,SAAAO,EAAqBC,QAAA,IAAAA,IAAAA,OAAAC,GAAA9F,KAAA6F,KAAAA,SAIrBD,EAAAzE,UAAA4E,MAAA,SAAOC,EAAkBC,GAAzB,IAAAC,EAAAlG,KACOmG,EAAQ,GAEdH,EACKI,QACAC,QAAQ,SAAAC,GAAK,OAAeA,EAAGC,UAClCC,SAAQ,SAAAC,GACR,IAAMC,EAAM,IAAIC,EAAST,EAAKL,KAAMY,EAAGR,GAElCS,EAAIE,SAAkBH,EAAGI,QAC7BV,EAAMW,KAAKJ,EAAIK,SAIlB,IAAIC,EAAUb,EAAMc,KAAK,KAEzB,OAAOC,EAAAA,GAAIF,0CAtBApB,GAAoBuB,EAAAC,kBAAAC,EAAAC,mDAApB1B,EAAoBvE,UAAA,CAAA,CAAA,oBAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,KAAA4F,cAAA,IA0BjC,IAAAZ,EAAA,WAaC,SAAAA,EACSd,EACA2B,EACAvB,GAFAjG,KAAA6F,KAAAA,EACA7F,KAAAwH,OAAAA,EACAxH,KAAAiG,MAAAA,SAfThF,OAAAC,eAAIyF,EAAAxF,UAAA,UAAO,KAAX,WAKG,OAHInB,KAAKwH,SACLxH,KAAKwH,OAAOnF,QAAU,IAAMrC,KAAKwH,OAAOnF,OAAOoF,wCAKtDxG,OAAAC,eAAIyF,EAAAxF,UAAA,OAAI,KAAR,WACG,MAAO,UAAUnB,KAAK0H,gBAAe,SAAS1H,KAAK2H,sDAUtDhB,EAAAxF,UAAAuG,cAAA,WAAA,IAAAxB,EAAAlG,KACK4H,EAAS,GAEX,OAAK5H,KAAKwH,OAAOnF,QAIjBrC,KAAKwH,OAAOnF,OAAOmE,SAAQ,SAAAF,GACrBsB,EAAOH,OAAS,IAClBG,GAAU,MAGZA,GAAU1B,EAAK2B,aAAcvB,MAGxBsB,GAXEA,GAeXjB,EAAAxF,UAAA0G,aAAA,SAAaC,GACZ,IAAIF,EAAS,GACRtC,EAAQwC,EAAMxC,IAAiBwC,EAAMxC,IAAhB,QAEnByC,EAAOD,EAAME,UAAUC,MAAK,SAAA3B,GAChC,OAAAzD,EAAeC,SAASwD,EAAE4B,OAAShG,EAAAA,cAAcqB,cACjDV,EAAeC,SAASwD,EAAE4B,OAAShG,EAAAA,cAAc6B,aAE/CgE,EACFH,GAAUG,EAAKG,MAASH,EAAKI,OAASJ,EAAKI,MAAM5C,MAC/C,KAAKD,EAAG,MAAMyC,EAAKI,MAAM5C,MAAK,IAAM,KAAKD,EAAG,MAE9CsC,EAAS,IAAItC,EAAG,IAGJwC,EAAME,UAAU3B,QAAO,SAAAC,GACnC,OAAAzD,EAAeC,SAASwD,EAAE4B,QAAUhG,EAAAA,cAAcuC,mBAE9C+B,SAAQ,SAAAF,GACZ,IAAM8B,EAAK9B,EAAE6B,OAAS7B,EAAE6B,MAAM5C,MAAS,KAAKe,EAAE6B,MAAM5C,MAAU,GAC9DqC,EAAYtB,EAAE4B,KAAI,IAAIN,EAASQ,EAAC,OAGlC,IAAMC,EAAOP,EAAME,UAAUC,MAAK,SAAA3B,GAChC,OAAAzD,EAAeC,SAASwD,EAAE4B,QAAUhG,EAAAA,cAAc2C,QAEhDwD,IACFT,EAAYA,EAAM,IAAIS,EAAKF,MAAM5C,OAGnC,IAAM+C,EAAQR,EAAME,UAAUC,MAAK,SAAA3B,GACjC,OAAAzD,EAAeC,SAASwD,EAAE4B,QAAUhG,EAAAA,cAAc4C,SAMtD,OAJMwD,IACFV,EAAYA,EAAM,QAAQU,EAAMH,MAAM5C,MAAK,KAGxCqC,GAGPjB,EAAAxF,UAAAwG,mBAAA,WACE,IAAMY,EAASvI,KAAKwH,OAAOgB,YAA+BxI,KAAKwH,OAAOgB,YAA5B,cAKtCC,GAHMzI,KAAKwH,OAAOkB,QAAU1I,KAAKwH,OAAOkB,OAAOjB,OAAS,GAA4B,YAAvBzH,KAAKwH,OAAOkB,OAC3E,IAAI1I,KAAKwH,OAAOkB,OAAM,KAAO,IAEf,IAAIH,EAAI,IACpBI,EAAO,GAEPC,EAAW,EAEX5I,KAAKwH,OAAOrF,MACdnC,KACGwH,OACArF,KACAkE,QAAO,SAAAC,GAAK,OAAAA,EAAEhB,KAAOgB,EAAEf,SACvBiB,SAAQ,SAAAF,GACHsC,EAAW,IACbD,GAAQ,IAAIrC,EAAEZ,UAAS,KAGzB,IAAMH,EAAQsD,EAASvC,EAAEf,OAAUe,EAAEf,MAAQ,IAAIe,EAAEf,MAAK,IACxDoD,GAAQ,KAAKrC,EAAEhB,IAAG,KAAKgB,EAAEd,SAAQ,IAAID,IACnCqD,KAIR,IAAME,EAAe9I,KAAU,MAC7BA,KAAK+I,gBAAkB9D,EAAWC,YAGlCuD,EADEE,EAAKlB,OAAS,EACNgB,EAAI,WAAWE,EAAI,SAASG,EAI5BL,EAAI,UAAUK,EAG5B,IAAMrG,EAAUzC,KAAKwH,OAAO/E,QACtBuG,EAAcvG,EAAQwF,MAAM,SAAA3B,GAAK,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAcuG,QACzDC,EAAczG,EAAQwF,MAAM,SAAA3B,GAAK,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAcyG,QACvDC,EAAa3G,EAAQ4D,QAAQ,SAAAC,GAAK,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAc2G,OAIlE,GAAIL,EAAa,CACb,IAAMM,EAAOtJ,KAAKiG,OAAS+C,EAAYhE,OAAQ,IAAOC,EAAWE,cAC/DnF,KAAKuJ,wBAA0BP,EAAYhE,OAAQ,GAExDyD,EAAUA,EAAI,kBAAkBa,EAAE,IA2BjC,OAxBEF,EAAW3B,OAAS,IACvBgB,EAAUO,EAAwCP,EAAI,IAAzBA,EAAI,YAEjCW,EAAW5C,SAAS,SAACgD,EAAEC,GACtBhB,EAAUA,GAAOgB,EAAO,EAAI,KAAO,KAAG,KAAKD,EAAExE,OAAQ,GAAG,QAItDkE,IACHT,EAAUA,EAAI,SAASS,EAAYlE,OAAQ,GAAG,KAG3ChF,KAAKwH,OAAOlF,OAASC,EAAAA,YAAYC,MACpCiG,GAAc,uBAGXzI,KAAKwH,OAAOkC,MAAQ,IACvBjB,EAAUA,EAAI,UAAUzI,KAAKwH,OAAOkC,OAGjC1J,KAAKwH,OAAOmC,OAAS,IACxBlB,EAAUA,EAAI,WAAWzI,KAAKwH,OAAOmC,QAG7BlB,GAGT9B,EAAAxF,UAAAoI,sBAAA,WACE,IAAMxG,EAAI6G,EAAAA,gBAAgBC,WAAY7J,KAAKiG,MAAM6D,MAAM,GACjDrD,EAAImD,EAAAA,gBAAgBC,WAAY7J,KAAKiG,MAAM8D,IAAI,GAEvD,OAAI,GAAKtD,EAAEuD,KAAMjH,EAAG,WACZ,QAEJ,IAAM0D,EAAEuD,KAAMjH,EAAG,WACb,KAEJ,GAAK0D,EAAEuD,KAAMjH,EAAG,WACZ,KAEJ,EAAI0D,EAAEuD,KAAMjH,EAAG,SACX,KAEJ,EAAI0D,EAAEuD,KAAMjH,EAAG,SACX,MAEJ,EAAI0D,EAAEuD,KAAMjH,EAAG,SACX,MAEJ,GAAK0D,EAAEuD,KAAMjH,EAAG,SACZ,KAEJ,GAAK0D,EAAEuD,KAAMjH,EAAG,SACZ,KAEJ,EAAI0D,EAAEuD,KAAMjH,EAAG,QACX,MAEJ,GAAK0D,EAAEuD,KAAMjH,EAAG,QACZ,KAEJ,IAAM0D,EAAEuD,KAAMjH,EAAG,QACb,MAEA,OAGR4D,EAAAxF,UAAA4H,cAAA,WACE,IAAM9C,EAAQjG,KAAKiG,MACbgE,EAAKjK,KAAK6F,KAAKqE,UAAUC,SAE3BL,EAAO9J,KAAKoK,cAAenE,EAAM6D,MAAM,EAAOG,GAC9CF,EAAK/J,KAAKoK,cAAenE,EAAM8D,IAAI,EAAME,GAEvCI,EAA2C,OAA1BP,EAAKA,EAAKrC,OAAS,GAE1C,MAAW,UAAPsC,GAAmBM,EAIhB,WAAaP,EAAO,gBAAkBC,EAHpC,WAAaD,GAMxBnD,EAAAxF,UAAAiJ,cAAA,SAAcE,EAAWC,EAAcJ,GACrC,GAAIK,EAAAA,SAAWF,GAAO,CACpB,GAAa,QAATA,EACF,MAAO,QAGT,IAAMG,EAAQ,sBAAsBC,KAAKJ,GAEzC,GAAIG,EAGF,MAAO,WAFQE,SAASF,EAAM,GAAI,IACrBA,EAAM,GAIrBH,EAAOV,EAAAA,gBAAgBC,WAAWS,EAAMC,EAASJ,GAGnD,OAAOG,EAAKM,UAAY,QAvO5B,YA4OgB/B,EAAQgC,GACtB,IAAIC,GAAU,EACd,IACE,IAAIC,OAAOF,GAEXC,EAAYD,EAAKG,WAAY,MAASH,EAAKI,SAAU,KACrD,MAAOzB,GACPsB,GAAU,EAGZ,OAAOA;;;;;;;;;;;;;;oFC5QT,IAAII,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBjK,OAAOoK,gBAClB,CAAEC,UAAW,cAAgBlJ,OAAS,SAAU+I,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIhD,KAAKgD,EAAOA,EAAEG,eAAenD,KAAI+C,EAAE/C,GAAKgD,EAAEhD,MACpD+C,EAAGC,aAGZI,EAAUL,EAAGC,GAEzB,SAASK,IAAOzL,KAAK0L,YAAcP,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEhK,UAAkB,OAANiK,EAAanK,OAAO0K,OAAOP,IAAMK,EAAGtK,UAAYiK,EAAEjK,UAAW,IAAIsK,YAoGnEG,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAY1C,EAA3B2C,EAAIJ,EAAEK,KAAKP,GAAOQ,EAAK,GAC3B,IACI,WAAc,IAANP,GAAgBA,KAAM,MAAQI,EAAIC,EAAEG,QAAQC,MAAMF,EAAGvF,KAAKoF,EAAE3G,OAExE,MAAOiH,GAAShD,EAAI,CAAEgD,MAAOA,WAEzB,IACQN,IAAMA,EAAEK,OAASR,EAAII,EAAU,SAAIJ,EAAEK,KAAKD,WAExC,GAAI3C,EAAG,MAAMA,EAAEgD,OAE7B,OAAOH,WAGKI,IACZ,IAAK,IAAIJ,EAAK,GAAIF,EAAI,EAAGA,EAAIO,UAAUjF,OAAQ0E,IAC3CE,EAAKA,EAAGM,OAAOf,EAAOc,UAAUP,KACpC,OAAOE,ECzIX,IAAAO,EAAA,WA4BE,SAAAA,EACgCC,EACvBC,GADuB9M,KAAA6M,MAAAA,EACvB7M,KAAA8M,UAAAA,EA7BA9M,KAAA+M,OAAS,aACV/M,KAAAgN,IAAM,UAGJhN,KAAAiN,OAAS,IAAIC,EAAAA,aACblN,KAAAmN,QAAU,IAAID,EAAAA,oBAGxBjM,OAAAC,eAAI0L,EAAAzL,UAAA,UAAO,KAAX,WACE,OAAOnB,KACJ6M,MACAO,OACApH,yCAGL/E,OAAAC,eAAI0L,EAAAzL,UAAA,eAAY,KAAhB,WACE,OAAOnB,KAAKgG,QAAQqH,4CAGtBpM,OAAAC,eAAI0L,EAAAzL,UAAA,SAAM,KAAV,WACE,OAAOnB,KAAKsN,MAAMjL,wCAGpBpB,OAAAC,eAAI0L,EAAAzL,UAAA,UAAO,KAAX,WACE,OAAOnB,KAAKsN,MAAM7K,yCAQpBmK,EAAAzL,UAAAoM,MAAA,SAAOC,GACL,OAAOxN,KACJ8M,UACAS,MAAOvN,KAAKyN,aAAcD,IAG/BZ,EAAAzL,UAAAuM,YAAA,WACE1N,KAAKmN,QAAQQ,QAGff,EAAAzL,UAAA4E,MAAA,SAAO6H,GAAP,IAAA1H,EAAAlG,UAAO,IAAA4N,IAAAA,GAAA,IACL,IAAIhI,GACDG,MAAO,CAACK,QAAS,CAACpG,KAAKsN,OAAQD,WAAY,IAC3CQ,WAAW,SAAAvH,GACVJ,EAAK4H,cAAgBxH,EAEjBsH,GACF1H,EAAK6H,gBAKbnB,EAAAzL,UAAA4M,UAAA,eAvDF,sDCkBCC,EAAAA,wBAAAA,GAECpM,EAAAA,eAAAA,EAAAA,yBAAAA,IAECqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,UAAAA,UAAAA,IAAAA,CAAyB,QAAA,WAAA,OAAA9G,EAAA+G,cAAAC,GAAAhH,EAAAiH,gBAAAV,iBAI1B7L,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,yBAAAA,GACCqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,UAAAA,IAAAA,IAAAA,CAAmB,QAAA,SAAAI,GAAAlH,EAAA+G,cAAAC,GAAA,IAAAG,EAAA3M,EAAA4M,UAAAC,EAAArH,EAAAiH,gBAAA,OAAAI,EAAAC,iBAAAJ,EAAAC,GAAAE,EAAAd,iBAGpB7L,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,yBAAAA,IACCqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,UAAAA,SAAAA,IAAAA,CAAwB,QAAA,WAAA,OAAA9G,EAAA+G,cAAAC,GAAAhH,EAAAiH,gBAAAV,iBAIzB7L,EAAAA,eAEED,EAAAA,eAAAA,EAAAA,yBAAAA,IAKDqM,EAAAA,WAAAA,QAAAA,SAAAA,GAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,gBAAAA,eAAAA,EAAAA,MACDpM,EAAAA,eAED6M,EAAAA,gFA5BE1M,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,WAAAA,EAAAA,GAAAA,EAAAA,KAAAA,CAA4B,UAAAuM,EAAA5I,UAA5B3D,CAA4B,UAAA4M,EAAAC,aAQ5B5M,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,IAAAA,CAAmB,UAAA4M,EAAAE,cAMnB7M,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,SAAAA,CAAwB,UAAA4M,EAAAG,cAAAR,IAQrBtM,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,MAAAA,CAAiB,UAAA4M,EAAAI,WAAAT,GAAjBvM,CAAiB,kBAAA,uDAQtBH,EAAAA,eAAAA,EAAAA,yBAAAA,IAICqM,EAAAA,WAAAA,QAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,gBAAAA,MACDpM,EAAAA,+CAHCE,EAAAA,WAAAA,UAAAA,EAAAA,YAAAA,CAAuB,YAAA,qCDrDZ6K,GAAkBzF,EAAAC,kBA6BlB4H,EAAAA,aAAW7H,EAAAC,kBAAAC,EAAA4H,sDA7BXrC,EAAkBsC,OAAA,CAAA5B,MAAA,SAAA6B,QAAA,CAAAlC,OAAA,SAAAE,QAAA,aEG/B,IAAAiC,EAAA,SAAAC,GA+DE,SAAAD,EACyBvC,EAChBC,GAFT,IAAA5G,EAGImJ,EAAAjD,KAAApM,KAAO6M,EAAOC,IAAW9M,YADpBkG,EAAA4G,UAAAA,EA/DA5G,EAAAoJ,eAAiB,mBAFoB9D,EAAA4D,EAAAC,GAI9CpO,OAAAC,eAAIkO,EAAAjO,UAAA,qBAAkB,KAAtB,WACE,OAAOnB,KACJuN,MAAO,2BACPgC,KACCC,EAAAA,KAAI,SAAAlJ,GAAK,OAAAmG,EAAA,CAAC,WAAcnG,EAAE,GAAGmJ,OAAOD,KAAI,SAAAE,GAAK,OAAAA,EAAE,4CAGrDzO,OAAAC,eAAIkO,EAAAjO,UAAA,gBAAa,KAAjB,WACE,OAAOnB,KACJuN,MAAO,qBACPgC,KACCC,EAAAA,KAAI,SAAAlJ,GAAK,OAAAmG,EAAInG,EAAE,GAAGmJ,QAAQE,QAAO,SAACC,EAAKrK,GAAU,OAAAqK,EAAIjD,OAAOpH,KAAQ,yCAG1E6J,EAAAjO,UAAA2N,cAAA,SAAee,GACb,IAAMC,EAAejH,EAASgH,EAAItK,OAC5BwK,EAAe9O,OAAOwO,OAAOrK,EAAAA,aAE/BwC,EAASkI,EAAeC,EAAaC,MAAO,EAAG,GAAMD,EAAaC,MAAO,EAAG,GAEhF,OAAO9I,EAAAA,GAAIU,IAGb3G,OAAAC,eAAIkO,EAAAjO,UAAA,cAAW,KAAf,WACE,IAAM8O,EAAKjQ,KAAKsN,MAAiB,YAC/B,sBAAsBtN,KAAKsN,MAAM9E,YACjC,gBAEF,OAAOxI,KACJuN,MAAO0C,GACPV,KACCC,EAAAA,KAAI,SAAAlJ,GAAK,OAAEA,EAAEmB,OAAYgF,EAAOnG,EAAE,GAAGmJ,OAAOE,QAAO,SAACC,EAAKrK,GAAU,OAAAqK,EAAIjD,OAAOpH,KAAQ,KAA/D,wCAG7BtE,OAAAC,eAAIkO,EAAAjO,UAAA,eAAY,KAAhB,WAAA,IAAA+E,EAAAlG,KACE,OAAOA,KACJkQ,YACAX,KACCC,EAAAA,KAAK,SAAAlJ,GAAK,OAAAmG,EAAA,CAACvG,EAAK6G,QAAWzG,wCAGjC8I,EAAAjO,UAAA4N,WAAA,SAAYc,GACV,IAAMI,EAAI,4BAA4BJ,EAAIvK,IAE1C,OAAOtF,KACJuN,MAAO0C,GACPV,KACCC,EAAAA,KAAI,SAAAlJ,GAAC,IAAA6J,EAAA,OAAQ,QAARA,EAAI7J,EAAE,UAAE,IAAA6J,OAAA,EAAAA,EAAEV,OAAOD,KAAI,SAAAE,GAAK,OAAAA,EAAE,WAGvCzO,OAAAC,eAAIkO,EAAAjO,UAAA,cAAW,KAAf,WACE,OAAO+F,EAAAA,GAAGjG,OAAOwO,OAAOpK,EAAAA,gDAG1BpE,OAAAC,eAAIkO,EAAAjO,UAAA,YAAS,KAAb,WACE,IAAMgB,EAAOnC,KAAKsN,MAAMnL,KACxB,QAAUA,MAAAA,OAAI,EAAJA,EAAMsF,SAActF,EAAMA,EAAKsF,OAAS,GAAMlC,uCAS1D6J,EAAAjO,UAAAiP,SAAA,WACOpQ,KAAKsN,MAAM5E,SACd1I,KAAKsN,MAAM5E,OAAS1I,KAAKsP,iBAI7BF,EAAAjO,UAAAkP,gBAAA,SAAiBC,GACf,IAAIT,EAAM,IAAIxG,EACdwG,EAAIvK,IAAMgL,EACVtQ,KAAKsN,MAAMnL,KAAK2E,KAAM+I,IAGxBT,EAAAjO,UAAAsN,iBAAA,SAAkB6B,EAAW7J,GACvB6J,GAAKtQ,KAAK+M,SACZ/M,KAAKsN,MAAMnL,KAAOnC,KAAKsN,MAAMnL,KAAKkE,QAAQ,SAAAC,GAAK,OAAAA,GAAKG,OAIxD2I,EAAAjO,UAAAoP,eAAA,SAAe9J,EAAQ+J,GACrB,GAAIA,IAAM/J,EAAElB,MAAZ,CAIA,IAAIkL,EAAkB5H,EAASpC,EAAElB,OACjCkB,EAAElB,MAAQiL,EACV,IAAIE,EAAkB7H,EAASpC,EAAElB,OAEVkL,GAAmBC,IAGxCjK,EAAEjB,SAAW,EAAsBJ,EAAAA,YAAYuL,QAAUvL,EAAAA,YAAYK,IAGvEzF,KAAK0N,kBAtGT,CAAgDd,oCAAnCwC,GAA0BjI,EAAAC,kBAgE1B4H,EAAAA,aAAW7H,EAAAC,kBAAAC,EAAA4H,sDAhEXG,EAA0B/N,UAAA,CAAA,CAAA,uBAAAuP,SAAA,CAAAzJ,EAAA0J,4BAAAvP,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,gBAAA,WAAA,CAAA,EAAA,UAAA,UAAA,gBAAA,QAAA,CAAA,cAAA,qBAAA,EAAA,UAAA,UAAA,gBAAA,QAAA,CAAA,EAAA,gBAAA,iBAAA,CAAA,EAAA,QAAA,WAAA,CAAA,cAAA,aAAA,EAAA,UAAA,WAAA,OAAA,EAAA,QAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,gBAAA,uBAAA,CAAA,aAAA,gBAAA,EAAA,SAAA,UAAA,UAAA,gBAAA,QAAA,CAAA,aAAA,yBAAA,EAAA,UAAA,UAAA,gBAAA,QAAA,CAAA,cAAA,mBAAA,EAAA,QAAA,UAAA,iBAAA,QAAA,CAAA,cAAA,aAAA,EAAA,UAAA,WAAA,SAAAC,SAAA,SAAAC,EAAAC,SDZvCC,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,QAAAA,GACC/B,EAAAA,OAAAA,EAAAA,UACDgC,EAAAA,eACDA,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,yBAAAA,GACCqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,OAAAA,IAAAA,CAA0B,QAAA,WAAA,OAElBtM,EAAA+L,iBACT7L,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,yBAAAA,GAECqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,YAAAA,IAAAA,CAA+B,QAAA,WAAA,OAEvBtM,EAAA+L,iBACT7L,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,QAAAA,GACC/B,EAAAA,OAAAA,EAAAA,WACDgC,EAAAA,eACDA,EAAAA,eAEA/B,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,GAAAA,eAAAA,GAiCAA,EAAAA,WAAAA,GAAAA,EAAAA,EAAAA,EAAAA,yBAAAA,GAOA8B,EAAAA,eAAAA,GAAAA,MAAAA,GACCE,EAAAA,UAAAA,GAAAA,MAAAA,GACDD,EAAAA,eACDA,EAAAA,sBA7DEG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,OAAAA,CAA0B,UAAAJ,EAAAmP,oBAO1B9O,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,YAAAA,CAA+B,UAAAJ,EAAAoP,eAWlB/O,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,MAiCUC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,uHE1DzB,IAAMiP,EAAkB,CAAC,KAAM,MAAO,KAAM,KAAM,MAAO,MAAO,MAEnDC,EAAmB,CAC9B,CAAEC,MAAOhP,EAAAA,cAAe,GAAKiP,MAAO,CACjC,CAAED,MAAOjP,EAAAA,SAASe,OAClB,CAAEkO,MAAOjP,EAAAA,SAASgB,UAClB,CAAEiO,MAAOjP,EAAAA,SAASiB,UAClB,CAAEgO,MAAOjP,EAAAA,SAASkB,MAClB,CAAE+N,MAAOjP,EAAAA,SAASmB,QAClB,CAAE8N,MAAOjP,EAAAA,SAASoB,MAClB,CAAE6N,MAAOjP,EAAAA,SAASqB,OAErB,CAAE4N,MAAOhP,EAAAA,cAAe,GAAKiP,MAAO,CAClC,CAAED,MAAOjP,EAAAA,SAASuB,OAAQ2E,MAAO,CAAE5C,MAAO,MAC1C,CAAE2L,MAAOjP,EAAAA,SAASwB,OAClB,CAAEyN,MAAOjP,EAAAA,SAASyB,MAClB,CAAEwN,MAAOjP,EAAAA,SAAS0B,KAClB,CAAEuN,MAAOjP,EAAAA,SAAS2B,KAClB,CAAEsN,MAAOjP,EAAAA,SAAS4B,WAAYsE,MAAO,CAAE5C,MAAO,OAC9C,CAAE2L,MAAOjP,EAAAA,SAAS6B,IAAKqE,MAAO,CAAE5C,MAAO,QAEzC,CAAE2L,MAAOhP,EAAAA,cAAe,GAAKiP,MAAO,CAClC,CAAED,MAAOjP,EAAAA,SAAS+B,WAChBmE,MAAO,CAAE5C,MAAOyL,EAAiB,GAAKI,YAAW3E,EAAMuE,KACzD,CAAEE,MAAOjP,EAAAA,SAASgC,QAClB,CAAEiN,MAAOjP,EAAAA,SAASiC,sBACfiE,MAAO,CAAE5C,MAAOyL,EAAiB,GAAKI,YAAW3E,EAAMuE,KAC1D,CAAEE,MAAOjP,EAAAA,SAASkC,YAClB,CAAE+M,MAAOjP,EAAAA,SAASmC,uBAClB,CAAE8M,MAAOjP,EAAAA,SAASoC,cAAe8D,MAAO,CAAE5C,MAAO,KAAM6L,YAAa,CAAC,IAAK,KAAM,KAAM,KAAM,QAC5F,CAAEF,MAAOjP,EAAAA,SAASqC,eAClB,CAAE4M,MAAOjP,EAAAA,SAASsC,QAClB,CAAE2M,MAAOjP,EAAAA,SAASuC,QAChB2D,MAAO,CAAE5C,MAAOyL,EAAiB,GAAKI,YAAW3E,EAAMuE,OAM3D,CAAEE,MAAOhP,EAAAA,cAAe,GAAKiP,MAAO,CAClC,CAAED,MAAOjP,EAAAA,SAAS4C,KAAMsD,MAAO,CAAE5C,MAAO,aAE1C,CAAE2L,MAAOhP,EAAAA,cAAe,GAAKiP,MAAO,CAClC,CAAED,MAAOjP,EAAAA,SAAS6C,MAAOqD,MAAO,CAAE5C,MAAO,YAE3C,CAAE2L,MAAO,QAASC,MAAO,CAAE,CAAED,MAAO,YC9BtCG,EAAA,WAZA,SAAAA,IAaErR,KAAAmR,MAAQG,EAAAA,UAAaL,GAEXjR,KAAAuR,KAAO,IAAIrE,EAAAA,oBAErBmE,EAAAlQ,UAAAiP,SAAA,WAAA,IAAAlK,EAAAlG,KACEwR,EAAAA,qBAAqBC,UAAWzR,KAAKmR,OAAO,SAAA7K,GAAK,OAAAJ,EAAKqL,KAAK5D,KAAMrH,EAAEoL,YANvE,oCAAaL,qCAAAA,EAA4BhQ,UAAA,CAAA,CAAA,0BAAA8N,QAAA,CAAAoC,KAAA,QAAAjQ,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,UAAA,EAAA,SAAA,CAAA,EAAA,KAAA,WAAA,CAAA,EAAA,SAAA,CAAA,KAAA,KAAAC,SAAA,SAAAC,EAAAC,sCATrCC,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,IAAAA,GAAiCqM,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,YAAAA,GAAS0D,KAAAtD,MACxCvM,EAAAA,UAAAA,EAAAA,IAAAA,GACFD,EAAAA,eACFA,EAAAA,eAEAC,EAAAA,UAAAA,EAAAA,kBAAAA,EAAAA,SAAiBE,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,qJCVnBH,EAAAA,eAAAA,EAAAA,KACCA,EAAAA,eAAAA,EAAAA,OAAAA,GAAiCqM,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,aAAAA,MAAiCpO,EAAAA,OAAAA,GAAcgC,EAAAA,eACjFA,EAAAA,+CADOG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,SAAAA,EAAAA,iBAA4DC,EAAAA,UAAAA,GAAA4P,EAAAA,kBAAAA,EAAAA,mGAGnEhQ,EAAAA,eAAAA,EAAAA,QAAAA,GAAAA,IAGCqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,UAAAA,IAAAA,CAAuB,YAAA,WAAA,OAAA9G,EAAA+G,cAAA2D,GAAA1K,EAAAiH,gBAAA0D,qBAAvB7D,CAAuB,WAAA,WAAA,OAAA9G,EAAA+G,cAAA2D,GAAA1K,EAAAiH,gBAAA2D,oBAAvB9D,CAAuB,eAAA,WAAA,OAAA9G,EAAA+G,cAAA2D,GAAA1K,EAAAiH,gBAAA4D,uBAAvB/D,CAAuB,gBAAA,WAAA,OAAA9G,EAAA+G,cAAA2D,GAAA1K,EAAAiH,gBAAA4D,wBAHxBnQ,EAAAA,+CAECE,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,GAAAA,EAAAA,UAAAA,OAAAA,GAAAA,MAAAA,CAAyD,UAAAkQ,EAAAC,yCCA5DC,EAAA,WALA,SAAAA,IAAA,IAAAjM,EAAAlG,KAQYA,KAAAoS,OAAS,IAAIlF,EAAAA,aACblN,KAAAmN,QAAU,IAAID,EAAAA,aAIxBlN,KAAAqS,iBAAkB,EAClBrS,KAAAsS,uBAAwB,EACxBtS,KAAAuS,gBAAkB,GAClBvS,KAAAwS,eAAiB,CAAEtB,MAAO,SAAU1D,QAAS,SAAAiF,GAAK,OAAAvM,EAAKkM,OAAOzE,gBAK9D1M,OAAAC,eAAIiR,EAAAhR,UAAA,QAAK,KAAT,WACE,OAAOnB,KAAK0S,KAAKvK,uCAGnBlH,OAAAC,eAAIiR,EAAAhR,UAAA,aAAU,KAAd,WACE,OAAOnB,KAAKmI,MAAM5C,uCAGpBtE,OAAAC,eAAIiR,EAAAhR,UAAA,iBAAc,KAAlB,WACE,OAASnB,KAAKmI,OAASnI,KAAKmI,MAAMiJ,6CAGpCe,EAAAhR,UAAAiP,SAAA,WAAA,IAAAlK,EAAAlG,KACMA,KAAKmI,QACPnI,KAAKkS,UAAYlS,KAAK2S,YAGpB3S,KAAK4S,gBACP5S,KACGmI,MACAiJ,YACA5K,SAAQ,SAAAgD,GAAK,OAAAtD,EAAKqM,gBAAgBzL,KAAK,CACtCoK,MAAO1H,EACPgE,QAAS,SAAClH,GAEKJ,EAAKyM,YAAcrM,EAAEoL,KAAKR,QAGrChL,EAAKiC,MAAM5C,MAAQW,EAAKgM,UAAY5L,EAAEoL,KAAKR,MAC3ChL,EAAKmM,iBAAkB,EACvBnM,EAAKiH,QAAQQ,eAOzBwE,EAAAhR,UAAA0R,aAAA,SAAarJ,GAAb,IAAAtD,EAAAlG,KACOA,KAAKmI,QAINnI,KAAK4S,iBACP5S,KAAKsS,uBAAwB,EAC7BtS,KAAKoR,YAAYO,KAAKnI,IAGxBsJ,YAAW,WACT5M,EAAKmM,iBAAkB,EAEvBS,YAAY,WAAM,OAAA5M,EAAK6M,cAAcC,cAAcC,UAAS,KAC3D,KAGLd,EAAAhR,UAAA2Q,iBAAA,WACO9R,KAAKsS,wBACRtS,KAAKqS,iBAAkB,EAEVrS,KAAK2S,YAAc3S,KAAKkS,YAGnClS,KAAKmI,MAAM5C,MAAQvF,KAAKkS,UACxBlS,KAAKmN,QAAQQ,UAKnBwE,EAAAhR,UAAA4Q,gBAAA,WACE/R,KAAKsS,uBAAwB,EAC7BtS,KAAKoR,YAAY8B,QAGnBf,EAAAhR,UAAA6Q,mBAAA,WACEhS,KAAKqS,iBAAkB,EAEVrS,KAAK2S,YAAc3S,KAAKkS,YAGnClS,KAAKmI,MAAM5C,MAAQvF,KAAKkS,UACxBlS,KAAKmN,QAAQQ,WA/FnB,yBCNG/L,EAAAA,eAAAA,EAAAA,QAA0B/B,EAAAA,OAAAA,EAAAA,UAAMgC,EAAAA,mEAYlCD,EAAAA,eAAAA,EAAAA,wBAAAA,GAECqM,EAAAA,WAAAA,UAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,gBAAAA,OAAAA,EAAAA,aAAAA,GAAAA,EAAAA,gBAAAA,CAA2C,WAAA,WAAA,OAAA9G,EAAA+G,cAAAiF,GAAAhM,EAAAiH,gBAAAV,iBAE5C7L,EAAAA,yCAHCE,EAAAA,WAAAA,OAAAA,qCDPWoQ,qCAAAA,EAA4B9Q,UAAA,CAAA,CAAA,0BAAA+R,UAAA,SAAA1R,EAAAC,6xBDVzCC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,QAAAA,GACCA,EAAAA,eAAAA,EAAAA,IAAAA,GAAGqM,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,YAAAA,GAAS0D,KAAAtD,MAAyCxO,EAAAA,OAAAA,GAAegC,EAAAA,eAEpE/B,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,GAIAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,QAAAA,GAWA8B,EAAAA,eAAAA,EAAAA,IAAAA,GAAGqM,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAStM,EAAAkR,aAAAxE,MAAwBxO,EAAAA,OAAAA,EAAAA,KAACgC,EAAAA,eACtCA,EAAAA,eACDA,EAAAA,eAEAC,EAAAA,UAAAA,EAAAA,kBAAAA,EAAAA,GAEAA,EAAAA,UAAAA,GAAAA,kBAAAA,EAAAA,SAvBuDE,EAAAA,UAAAA,GAAAqR,EAAAA,mBAAAA,GAAAA,EAAAA,KAAAA,KAAAA,MAElDrR,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,OAIIC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,iBAeQC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,EAAAA,iBAEAC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,6eGbjB,IAAAuR,EAAA,SAAAjE,GAcE,SAAAiE,EACyBzG,EAChBC,GAFT,IAAA5G,EAGImJ,EAAAjD,KAAApM,KAAO6M,EAAOC,IAAW9M,YADpBkG,EAAA4G,UAAAA,EAbT5G,EAAAqN,eAAiBtC,EAIP/K,EAAAkM,OAAS,IAAIlF,EAAAA,aACbhH,EAAAsN,IAAM,IAAItG,EAAAA,sBARoB1B,EAAA8H,EAAAjE,GAUxCpO,OAAAC,eAAIoS,EAAAnS,UAAA,YAAS,KAAb,WACE,OAAOnB,KAAK8H,MAAME,2CASpBsL,EAAAnS,UAAAiP,SAAA,WACEpQ,KAAKyJ,MAAQzJ,KACVsN,MACAjL,OACAoR,QAASzT,KAAK8H,OAEjB,IAAM4L,EAAqB1T,KACxBuT,eACA/D,KAAK,SAAApH,GAAK,OAAAA,EAAE+I,SACZxB,QAAQ,SAACgE,EAAGvI,GAAM,OAAAuI,EAAEhH,OAAOvB,MAE9BpL,KACG8H,MACAE,UACAxB,SAAS,SAAAzD,GACR,GAAIA,EAAEoF,MAAO,CACX,IAAIyL,EAAIF,EAAmBzL,MAAM,SAAA3B,GAAK,OAAAA,EAAES,OAAShE,EAAEmF,QAE/C0L,GAAKA,EAAEzL,OAASyL,EAAEzL,MAAMiJ,cAC1BrO,EAAEoF,MAAMiJ,YAAW3E,EAAOmH,EAAEzL,MAAMiJ,mBAM5CnQ,OAAAC,eAAIoS,EAAAnS,UAAA,UAAO,KAAX,WAAA,IAAA+E,EAAAlG,KACE,OAAOA,KACJuN,MAAM,yBAA0BvN,KAAKsN,MAAM9E,YAAW,KACtD+G,KACCC,EAAAA,KAAI,SAAAlJ,GACF,IAAKA,GAAK,GAAKA,EAAEmB,OACf,OAAO,KAGT,IAAMpF,EAAMoK,EAAOnG,EAAE,GAAGmJ,OAAOD,KAAI,SAAAE,GAAK,OAAAA,EAAE,OAC1C,OAASxJ,EAAKoH,MAAMjL,OAAOoF,OAAS,EAACgF,EAAA,CAAOvG,EAAK6G,QAAW1K,GAAWA,uCAI/EiR,EAAAnS,UAAA0S,YAAA,SAAa/L,GACPA,IAAU9H,KAAK+M,OACjB/M,KAAKoS,OAAOzE,OAEZ3N,KAAK8H,MAAMxC,IAAMwC,GAIrBwL,EAAAnS,UAAA2S,WAAA,SAAYC,GACV,IAAMC,EAAK,IAAIC,EAGf,GAFAD,EAAG9L,KAAO6L,EAAI7C,MAEG,SAAb6C,EAAI7C,MAAR,CAKI6C,EAAI5L,QACN6L,EAAG7L,MAAQmJ,EAAAA,UAAayC,EAAI5L,QAG9B,IAAMG,EAAQtI,KAAKgI,UAAUC,MAAM,SAAA3B,GACjC,OAAAzD,EAAeC,SAAUwD,EAAE4B,OAAWhG,EAAAA,cAAc4C,SAEhDuD,EAAOrI,KAAKgI,UAAUC,MAAM,SAAA3B,GAChC,OAAAzD,EAAeC,SAAUwD,EAAE4B,OAAUhG,EAAAA,cAAc2C,QAE/CqP,EAAMlU,KAAKgI,UAAUP,OACvB0M,EAAQnU,KAAKgI,UAEjB,OAAQnF,EAAeC,SAAUiR,EAAI7C,QACnC,KAAKhP,EAAAA,cAAcqB,aACnB,KAAKrB,EAAAA,cAAc6B,UACC/D,KACf8H,MACAE,UACAC,MAAM,SAAA3B,GACL,OAAAzD,EAAeC,SAAUwD,EAAE4B,OAAUhG,EAAAA,cAAcqB,cACnDV,EAAeC,SAAUwD,EAAE4B,OAAUhG,EAAAA,cAAc6B,aAGrDoQ,EAAO,GAAMH,EAEbG,EAAMC,OAAQ,EAAG,EAAGJ,GAEtB,MAEA,KAAK9R,EAAAA,cAAcuC,gBACZ6D,EAGH6L,EAAMC,OAAQF,EAAM,EAAG,EAAGF,GAF1BG,EAAMrN,KAAMkN,GAId,MAEF,KAAK9R,EAAAA,cAAc2C,KACbwD,IAASC,EACX6L,EAAOD,EAAK,GAAMF,GACR3L,GAAQC,EAClB6L,EAAMC,OAAQF,EAAM,EAAG,EAAGF,GAE1BG,EAAMrN,KAAMkN,GAEd,MAEF,KAAK9R,EAAAA,cAAc4C,MACbwD,EACFtI,KAAKgI,UAAWkM,EAAK,GAAMF,EAE3BhU,KAAKgI,UAAUlB,KAAMkN,SAxD3BhU,KAAKwT,IAAI7F,QA8Db2F,EAAAnS,UAAAkT,aAAA,SAActR,GACZ,IAAM0G,EAAQzJ,KAAKgI,UAAUyL,QAAS1Q,IAEjC,IAAM0G,GACTzJ,KAAKgI,UAAUoM,OAAQ3K,EAAO,MA1IpC,CAA0CmD,sDCJtChL,EAAAA,eAAAA,EAAAA,eAAAA,GAGEqM,EAAAA,WAAAA,UAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,gBAAAA,SAAAA,KAAAA,CAAsB,OAAA,WAAA,OAAA9G,EAAA+G,cAAAoG,GAAAnN,EAAAiH,gBAAAmG,UAAtBtG,CAAsB,WAAA,WAAA,OAAA9G,EAAA+G,cAAAoG,GAAAnN,EAAAiH,gBAAAV,iBAGxB7L,EAAAA,6DALEE,EAAAA,WAAAA,QAAAA,EAAAA,MAAAA,CAAe,QAAAyS,qCDGRlB,GAAoBnM,EAAAC,kBAepB4H,EAAAA,aAAW7H,EAAAC,kBAAAC,EAAA4H,sDAfXqE,EAAoBjS,UAAA,CAAA,CAAA,iBAAA6N,OAAA,CAAApH,MAAA,SAAAqH,QAAA,CAAAiD,OAAA,SAAAoB,IAAA,OAAA5C,SAAA,CAAAzJ,EAAA0J,4BAAAvP,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,gBAAA,WAAA,CAAA,EAAA,QAAA,CAAA,cAAA,eAAA,eAAA,aAAA,EAAA,UAAA,UAAA,gBAAA,QAAA,CAAA,EAAA,OAAA,SAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,QAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,gBAAA,uBAAA,CAAA,EAAA,OAAA,SAAA,YAAAC,SAAA,SAAAC,EAAAC,SDZjCC,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,QAAAA,GACC9B,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,GAAuCD,EAAAA,OAAAA,EAAAA,MACxCgC,EAAAA,eACDA,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,yBAAAA,GACCqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,IAAAA,CAAuB,QAAA,SAAAI,GAII,OAAnB1M,EAAAkS,YAAAxF,GAAoB1M,EAAA+L,iBAC7B7L,EAAAA,eAEA/B,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,wBAAAA,GAMA8B,EAAAA,eAAAA,EAAAA,wBAAAA,GAAuBqM,EAAAA,WAAAA,QAAAA,SAAAA,GAA0B,OAAlBtM,EAAAmS,WAAAzF,GAAoB1M,EAAA+L,iBAAgB7L,EAAAA,eAEnED,EAAAA,eAAAA,EAAAA,MAAAA,GACCE,EAAAA,UAAAA,EAAAA,MAAAA,GACDD,EAAAA,eAEDA,EAAAA,sBAxBSG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,IAAAA,EAAAA,OAKPC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,IAAAA,CAAuB,UAAAJ,EAAA8S,SAODzS,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,2HEAxB,IAAA2S,EAAA,SAAArF,GAEE,SAAAqF,EACyB7H,EAChBC,GAFT,IAAA5G,EAGImJ,EAAAjD,KAAApM,KAAO6M,EAAOC,IAAW9M,YADpBkG,EAAA4G,UAAAA,WAJgCtB,EAAAkJ,EAAArF,GAQzCqF,EAAAvT,UAAAiP,SAAA,kBACkB,QAAZD,EAACnQ,KAAKqC,cAAM,IAAA8N,OAAA,EAAAA,EAAE1I,UAChBzH,KAAKsN,MAAMjL,OAAS,CAACrC,KAAK2U,qBAI9BD,EAAAvT,UAAAyT,SAAA,SAAS7R,GACP,IAAMV,EAASrC,KAAKsN,MAAMjL,OAE1B,GAAI,EAAIA,EAAOoF,OAAQ,CAErB,IAAMgC,EAAQpH,EAAOoR,QAAS1Q,IAEzB,IAAM0G,GACTzJ,KAAKsN,MAAMjL,OAAO+R,OAAQ3K,EAAO,KAKvCiL,EAAAvT,UAAAoT,MAAA,WACEvU,KACGsN,MACAjL,OACAyE,KAAK9G,KAAK2U,oBAGfD,EAAAvT,UAAAwT,gBAAA,WACE,IAAME,EAAM,IAAIZ,EAChBY,EAAI3M,KAAOjG,EAAAA,SAASkB,KAEpB,IAAM2E,EAAQ,IAAIgN,EAGlB,OAFAhN,EAAME,UAAY,CAAE6M,GAEb/M,KAzCX,CAA2C8E,oCAA9B8H,GAAqBvN,EAAAC,kBAGrB4H,EAAAA,aAAW7H,EAAAC,kBAAAC,EAAA4H,sDAHXyF,EAAqBrT,UAAA,CAAA,CAAA,kBAAAuP,SAAA,CAAAzJ,EAAA0J,4BAAAvP,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,QAAA,QAAA,SAAA,MAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,QAAA,QAAA,SAAA,MAAA,YAAAC,SAAA,SAAAC,EAAAC,QAR9B7B,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,eAAAA,QAAciC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,iFCElBgT,GAPA,WAAA,IAAA7O,EAAAlG,KASWA,KAAAgV,QAAU,IAAI9H,EAAAA,aAExBlN,KAAAwS,eAAiB,CAChBtB,MAAO,SACP1D,QAAS,SAAAiF,GAAK,OAAAvM,EAAK8O,QAAQrH,KAAMzH,EAAKX,8DCTtC3D,EAAAA,eAAAA,EAAAA,yBAAAA,IAEEqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,UAAAA,KAGFpM,EAAAA,+CAHEE,EAAAA,WAAAA,UAAAA,EAAAA,UAAAA,CAAuB,UAAA4M,EAAAsG,mEAKzBrT,EAAAA,eAAAA,EAAAA,MAAAA,IAC0BqM,EAAAA,WAAAA,WAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,YAAAA,MAC1BpM,EAAAA,yCAF4BE,EAAAA,WAAAA,QAAAA,EAAAA,OAAAA,yDAI5BH,EAAAA,eAAAA,EAAAA,yBAAAA,IAEEqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,UAAAA,KAEFpM,EAAAA,+CAFEE,EAAAA,WAAAA,UAAAA,EAAAA,UAAAA,CAAuB,UAAAmT,EAAAC,mEAgB3BvT,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,QAAAA,GACE/B,EAAAA,OAAAA,EAAAA,cACFgC,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,QAAAA,IAAqCqM,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,gBAAAA,OAAAA,EAAAA,MAAAA,MAAAA,EAAAA,eAAAA,IAAAA,EAAAA,iBACnCpO,EAAAA,OAAAA,EAAAA,UAAK+B,EAAAA,eAAAA,EAAAA,OAAAA,IAA4B/B,EAAAA,OAAAA,EAAAA,QAAIgC,EAAAA,eAAQC,EAAAA,UAAAA,EAAAA,IAAAA,IAC/CD,EAAAA,eACFA,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,MAAAA,GACEE,EAAAA,UAAAA,GAAAA,MAAAA,GACFD,EAAAA,eACFA,EAAAA,oEAGAD,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,QAAAA,GAAmD/B,EAAAA,OAAAA,EAAAA,SAAKgC,EAAAA,eACxDD,EAAAA,eAAAA,EAAAA,QAAAA,IAAiDqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,MAAAA,IAAAA,CAAmB,UAAA,WAAA,OAAA9G,EAAA+G,cAAAkH,GAAAjO,EAAAiH,gBAAAV,iBAApE7L,EAAAA,eAEFA,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,MAAAA,GACEE,EAAAA,UAAAA,EAAAA,MAAAA,GACFD,EAAAA,eACFA,EAAAA,+CAPqDG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,4DASrDH,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,QAAAA,GAAmD/B,EAAAA,OAAAA,EAAAA,UAAMgC,EAAAA,eACzDD,EAAAA,eAAAA,EAAAA,QAAAA,IAAiDqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,OAAAA,IAAAA,CAAoB,UAAA,WAAA,OAAA9G,EAAA+G,cAAAmH,GAAAlO,EAAAiH,gBAAAV,iBAArE7L,EAAAA,eAEFA,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,MAAAA,GACEE,EAAAA,UAAAA,EAAAA,MAAAA,GACFD,EAAAA,eACFA,EAAAA,+CAPqDG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,2CD1DxCgT,uCAAAA,GAAwB1T,UAAA,CAAA,CAAA,GAAA,YAAA,KAAA6N,OAAA,CAAA3J,MAAA,SAAA4J,QAAA,CAAA6F,QAAA,WAAAM,uBAAAhU,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,SAAA,CAAA,EAAA,SAAA,CAAA,KAAA,KAAAC,SAAA,SAAAC,EAAAC,sCAJpCC,EAAAA,eAAAA,EAAAA,OAAAA,GAAMqM,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,YAAAA,GAAS0D,KAAAtD,MAAuCxO,EAAAA,OAAAA,GAAcgC,EAAAA,eAEpEC,EAAAA,UAAAA,EAAAA,kBAAAA,EAAAA,SAFsDE,EAAAA,UAAAA,GAAAqR,EAAAA,mBAAAA,OAAAA,EAAAA,MAAAA,KAErCrR,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,gBAAAA,EAAAA,EAAAA,EAAAA,yEEKlB,IAAAwT,GAAA,SAAAlG,GAgJE,SAAAkG,EACyB1I,EAChBC,GAFT,IAAA5G,EAGImJ,EAAAjD,KAAApM,KAAO6M,EAAOC,IAAW9M,YADpBkG,EAAA4G,UAAAA,EA9IT5G,EAAAsP,eAAiBjT,EAAAA,YAiJb2D,EAAKuP,iBAAmB,GAExBvP,EAAKwP,kBAAoB,CACvB,IAAIC,GAAgBC,GAAmBzM,KAAM,aAAc,QAC3D,IAAIwM,GAAgBC,GAAmB3M,KAAM,kBAAmBhE,EAAWE,eAC3E,IAAIwQ,GAAgBC,GAAmBC,MAAO,QAAS,IACvD,IAAIF,GAAgBC,GAAmBE,OAAQ,SAAU,IAC7D,IAAIH,GAAgBC,GAAmBG,QAAS,gCA5JRvK,EAAA+J,EAAAlG,GAM1CpO,OAAAC,eAAIqU,EAAApU,UAAA,QAAK,KAAT,WACA,OAAOnB,KAAKsN,MAAM5D,WAGnB,SAAWsM,GACRhW,KAAKsN,MAAM5D,MAAQsM,EAEdA,GACHhW,KAAK0N,+CAITzM,OAAAC,eAAIqU,EAAApU,UAAA,SAAM,KAAV,WACA,OAAOnB,KAAKsN,MAAM3D,YAGnB,SAAYqM,GACThW,KAAKsN,MAAM3D,OAASqM,EAEfA,GACHhW,KAAK0N,+CAIVzM,OAAAC,eAAIqU,EAAApU,UAAA,OAAI,KAAR,WACC,OAAOnB,KAAKyC,QAAQwF,MAAM,SAAA3B,GAAK,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAcuG,yCAGxDhI,OAAAC,eAAIqU,EAAApU,UAAA,YAAS,KAAb,WACC,OAAOnB,KAAK6F,KAAKb,OAAQ,QAGzB,SAAewL,GACb,GAAIA,GAAKxQ,KAAK+M,OAAQ,CACpB,IAAMtD,EAAQzJ,KACXyC,QACAwT,WAAW,SAAA3P,GAAI,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAcuG,SAErC,IAAMQ,GACTzJ,KAAKyC,QAAQ2R,OAAQ3K,EAAO,QAGjCzJ,KAAK6F,KAAKb,OAAS,CAAEwL,GAGpBxQ,KAAK0N,+CAGRzM,OAAAC,eAAIqU,EAAApU,UAAA,OAAI,KAAR,WACC,OAAOnB,KAAKsN,MAAM7K,QAAQ4D,QAAQ,SAAAC,GAAK,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAc2G,wCAGhEpI,OAAAC,eAAIqU,EAAApU,UAAA,OAAI,KAAR,WACC,OAAOnB,KAAKyC,QAAQwF,MAAM,SAAA3B,GAAK,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAcyG,yCAGxDlI,OAAAC,eAAIqU,EAAApU,UAAA,YAAS,KAAb,WACC,OAAOnB,KAAKkW,KAAKlR,OAAQ,QAG1B,SAAewL,GACZ,GAAIA,GAAKxQ,KAAK+M,OAAQ,CACpB,IAAMtD,EAAQzJ,KACXyC,QACAwT,WAAW,SAAA3P,GAAI,OAAAA,EAAEvB,MAAQrC,EAAAA,cAAcyG,SAErC,IAAMM,GACTzJ,KAAKyC,QAAQ2R,OAAQ3K,EAAO,QAGjCzJ,KAAKkW,KAAKlR,OAAS,CAAEwL,GAGpBxQ,KAAK0N,+CAGPzM,OAAAC,eAAIqU,EAAApU,UAAA,eAAY,KAAhB,WACE,OAAO+F,EAAAA,GAAEuF,EAAA,CAAGzM,KAAK+M,QAAW9L,OAAOwO,OAAO9M,EAAAA,uDAG7C1B,OAAAC,eAAIqU,EAAApU,UAAA,eAAY,KAAhB,WACC,OAAO+F,EAAAA,GAAEuF,EAAA,CAAGzM,KAAK+M,QAAW9L,OAAOwO,OAAO7M,EAAAA,uDAG1C3B,OAAAC,eAAIqU,EAAApU,UAAA,kBAAe,KAAnB,WAAA,IAAA+E,EAAAlG,KACImW,EAAU,GAETnW,KAAKkW,MACTC,EAAQrP,KAAM9G,KAAK0V,kBAAmB,GAAI3O,MAGtC/G,KAAK6F,MACTsQ,EAAQrP,KAAM9G,KAAK0V,kBAAmB,GAAI3O,MAGtC/G,KAAKsN,MAAM5D,OACfyM,EAAQrP,KAAM9G,KAAK0V,kBAAmB,GAAI3O,MAGtC/G,KAAKsN,MAAM3D,QACfwM,EAAQrP,KAAM9G,KAAK0V,kBAAmB,GAAI3O,MAGvC/G,KAAKsN,MAAMhL,OAASC,EAAAA,YAAY6T,MACnCD,EAAQrP,KAAM9G,KAAK0V,kBAAmB,GAAI3O,MAG3C,IAAMkJ,EAAKjQ,KAAKsN,MAAiB,YAChC,sBAAsBtN,KAAKsN,MAAM9E,YACjC,gBAED,OAAOxI,KACLuN,MAAM0C,GACNV,KACAC,EAAAA,KAAI,SAAAlJ,GACH,IAAMnE,EAASmE,EAAEmB,OACXnB,EAAE,GAAGmJ,OAAOE,QAAO,SAACC,EAAKrK,GAAU,OAAAqK,EAAIjD,OAAOpH,KAAQ,IAA3D,GAEDW,EAAKwP,kBAAoBxP,EACvBwP,kBACArP,QAAQ,SAAAC,GAAK,OAAAA,EAAEvB,MAAQ6Q,GAAmBvM,OAE5ClH,EAAKqE,SAAS,SAAAgD,GAAK,OAAAtD,EAAKwP,kBAAkB5O,KACzC,IAAI6O,GAAgBC,GAAmBvM,IAAK,OAAOG,EAAC,IAAKA,OAE1D,IAAM6M,EAAcnQ,EAClBwP,kBACArP,QAAQ,SAAAiQ,GAAK,OAAAA,EAAEvR,MAAQ6Q,GAAmBvM,OAC1ChD,QAAQ,SAAAiQ,GAAK,OAACpQ,EAAKoH,MAAM7K,QAAQwF,MAAM,SAAA3B,GACvC,OAAAA,EAAEvB,MAAQ6Q,GAAmBvM,KAAO/C,EAAEtB,OAAQ,IAAOsR,EAAE/Q,YACvDiK,KAAK,SAAA8G,GAAK,OAAAA,EAAEvP,QAEd,OAAA0F,EAAY0J,EAAYE,wCAqB5Bd,EAAApU,UAAAoV,aAAA,SAAc/M,GACX,IAAIgE,EAAUxN,KACX0V,kBACAzN,MAAM,SAAA3B,GAAK,OAAAA,EAAES,MAAQyC,KAExB,GAAKgE,EAAL,CAMF,OAFExN,KAAKyV,iBAAiB3O,KAAM0G,GAEtBA,EAAQzI,MACZ,KAAK6Q,GAAmB3M,KAC1BjJ,KAAKyC,QAAQqE,KAAM,IAAI0P,EAAe9T,EAAAA,cAAcuG,KAAM,CAACuE,EAAQjI,SAC/D,MAEL,KAAKqQ,GAAmBzM,KACvBnJ,KAAKyC,QAAQqE,KAAM,IAAI0P,EAAe9T,EAAAA,cAAcyG,KAAM,CAACqE,EAAQjI,SACnE,MAED,KAAKqQ,GAAmBC,MACvB7V,KAAKsN,MAAM5D,MAAQ8D,EAAQjI,MAC3B,MAEA,KAAKqQ,GAAmBE,OACxB9V,KAAKsN,MAAM3D,OAAS6D,EAAQjI,MAC5B,MAED,KAAKqQ,GAAmBG,QACvB/V,KAAKsN,MAAMhL,MAAQC,EAAAA,YAAY6T,KAC/B,MAED,KAAKR,GAAmBvM,IACvBrJ,KAAKyC,QAAQqE,KAAM,IAAI0P,EAAe9T,EAAAA,cAAc2G,IAAK,CAACmE,EAAQjI,SAIlEvF,KAAK0N,gBAGP6H,EAAApU,UAAAsV,YAAA,SAAahQ,GACXzG,KAAKsN,MAAM7K,QAAUzC,KAClByC,QACA4D,QAAQ,SAAAC,GAAK,QAAGA,EAAEvB,MAAQrC,EAAAA,cAAc2G,KAAO/C,EAAEtB,OAAQ,IAAOyB,MAEnEzG,KAAK0N,iBA5MT,CAA4Cd,qCAA/B2I,IAAsBpO,EAAAC,kBAiJtB4H,EAAAA,aAAW7H,EAAAC,kBAAAC,EAAA4H,uDAjJXsG,GAAsBlU,UAAA,CAAA,CAAA,oBAAAuP,SAAA,CAAAzJ,EAAA0J,4BAAAvP,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,gBAAA,WAAA,CAAA,eAAA,YAAA,EAAA,UAAA,UAAA,gBAAA,EAAA,QAAA,CAAA,YAAA,GAAA,QAAA,kBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,WAAA,CAAA,eAAA,YAAA,EAAA,UAAA,UAAA,gBAAA,EAAA,QAAA,CAAA,cAAA,aAAA,WAAA,OAAA,EAAA,UAAA,QAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,gBAAA,uBAAA,CAAA,QAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,UAAA,gBAAA,CAAA,OAAA,OAAA,aAAA,QAAA,cAAA,iBAAA,EAAA,gBAAA,EAAA,UAAA,iBAAA,CAAA,eAAA,YAAA,EAAA,UAAA,UAAA,iBAAA,CAAA,YAAA,GAAA,EAAA,UAAA,UAAA,EAAA,QAAA,WAAA,CAAA,eAAA,YAAA,EAAA,UAAA,UAAA,iBAAA,CAAA,EAAA,gBAAA,UAAA,EAAA,SAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,KAAA,YAAA,QAAA,CAAA,OAAA,OAAA,aAAA,QAAA,cAAA,WAAA,EAAA,gBAAA,UAAA,EAAA,UAAA,gBAAA,WAAAC,SAAA,SAAAC,EAAAC,SDbnCC,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,QAAAA,GACEA,EAAAA,eAAAA,EAAAA,QAAM/B,EAAAA,OAAAA,EAAAA,YAAQgC,EAAAA,eAChBA,EAAAA,eACFA,EAAAA,eAEA/B,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,yBAAAA,GAOAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAIAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,yBAAAA,GAMA8B,EAAAA,eAAAA,EAAAA,yBAAAA,GAIEqM,EAAAA,WAAAA,QAAAA,SAAAA,GAAAA,OAAQtM,EAAA4U,aAAAlI,MACVxM,EAAAA,eAEAD,EAAAA,eAAAA,EAAAA,MAAAA,GACEE,EAAAA,UAAAA,GAAAA,MAAAA,GACFD,EAAAA,eACFA,EAAAA,eAEA/B,EAAAA,WAAAA,GAAAA,GAAAA,GAAAA,EAAAA,MAAAA,GAiBAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAYAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAYA8B,EAAAA,eAAAA,GAAAA,MAAAA,GACEA,EAAAA,eAAAA,GAAAA,MAAAA,IACEA,EAAAA,eAAAA,GAAAA,QAAAA,GAAmD/B,EAAAA,OAAAA,GAAAA,YAAQgC,EAAAA,eAC3DD,EAAAA,eAAAA,GAAAA,QAAAA,IAAyCqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,MAAAA,KAAzCpM,EAAAA,eAEFA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,MAAAA,GACEE,EAAAA,UAAAA,GAAAA,MAAAA,GACFD,EAAAA,eACFA,EAAAA,sBA9EIG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,MAMGC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,MAImBC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,MAStBC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,iBASwBC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,MAAAA,OAAAA,EAAAA,eAAAA,MAiBAC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,MAAAA,OAYAC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,MAAAA,QAeiBC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,6IC6I7C,IASK6T,GATLD,GACC,SACQ5Q,EACAgC,EACAxB,QAAA,IAAAA,IAAAA,OAAAO,GAFA9F,KAAA+E,KAAAA,EACA/E,KAAA+G,KAAAA,EACA/G,KAAAuF,MAAAA,yBC5NCzD,EAAAA,UAAAA,EAAAA,IAAAA,0BACAA,EAAAA,UAAAA,EAAAA,IAAAA,wDASTF,EAAAA,eAAAA,EAAAA,MAAAA,IACCA,EAAAA,eAAAA,EAAAA,MAAAA,IACCA,EAAAA,eAAAA,EAAAA,QAAAA,IAAyDqM,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,gBAAAA,OAAAA,EAAAA,QAAAA,EAAAA,UACxDpO,EAAAA,OAAAA,GACDgC,EAAAA,eACDA,EAAAA,eACDA,EAAAA,+CAHGG,EAAAA,UAAAA,GAAAqR,EAAAA,mBAAAA,IAAAA,EAAAA,cAAAA,0DAOFrF,EAAAA,wBAAAA,GACCpM,EAAAA,eAAAA,EAAAA,qBAAAA,IAAoCqM,EAAAA,WAAAA,WAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,WAAoBpM,EAAAA,eAExDD,EAAAA,eAAAA,EAAAA,gBAAAA,IAA+BqM,EAAAA,WAAAA,WAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,WAAoBpM,EAAAA,eAEnDD,EAAAA,eAAAA,EAAAA,kBAAAA,IAAiCqM,EAAAA,WAAAA,WAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,WAAoBpM,EAAAA,eACtD6M,EAAAA,yDALqB1M,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,OAELC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,OAEEC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,4DAIjBH,EAAAA,eAAAA,EAAAA,MAAAA,IACCA,EAAAA,eAAAA,EAAAA,WAAAA,IAAyCqM,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,cAAAA,KAGzCpO,EAAAA,OAAAA,EAAAA,YAAAgC,EAAAA,eACDA,EAAAA,gDAJ0CG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,UAAAA,EAAAA,0CAZ5CH,EAAAA,eAAAA,EAAAA,MAAAA,IAEC9B,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,IAQAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,wBASD+B,EAAAA,gEAjBeG,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,QAAAA,CAAgC,WAAA2U,KD6MhD,SAAKd,GACJA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,IAAA,GAAA,MACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,QAAA,GAAA,UAND,CAAKA,KAAAA,GAAkB,sDE9NvBe,GAAA,SAAAtH,GAaE,SAAAsH,EACyB9J,EAChBC,EACAjH,GAHT,IAAAK,EAIImJ,EAAAjD,KAAApM,KAAO6M,EAAOC,IAAW9M,YAFpBkG,EAAA4G,UAAAA,EACA5G,EAAAL,KAAAA,EAdTK,EAAA0Q,iBAAmB,GAEnB1Q,EAAA2Q,QAAkB,EAClB3Q,EAAA4Q,SAAmB,EAET5Q,EAAAkM,OAAS,IAAIlF,EAAAA,aACbhH,EAAA6Q,OAAS,IAAI7J,EAAAA,aACbhH,EAAA8Q,SAAW,IAAI9J,EAAAA,aACfhH,EAAA+Q,UAAY,IAAI/J,EAAAA,sBAVc1B,EAAAmL,EAAAtH,GAoBxCsH,EAAAxV,UAAAiP,SAAA,WAAA,IAAAlK,EAAAlG,KACEA,KAAK4W,iBAAmB,CACtB,CACE1F,MAAO,mBACP1D,QAAS,SAAAiF,GAAK,OAAAvM,EAAK4Q,SAAW5Q,EAAK4Q,UAGrC,CACE5F,MAAO,YACP1D,QAAS,SAAAiF,GAAK,OAAAvM,EAAK+Q,UAAUtJ,SAG/B,CACEuD,MAAO,UACP1D,QAAS,SAAAiF,GAAK,OAAAvM,EAAK6Q,OAAOpJ,SAG5B,CACEuD,MAAO,YACP1D,QAAS,SAAAiF,GAAK,OAAAvM,EAAK8Q,SAASrJ,UAIhC3N,KAAK+F,OAAO,IAKd4Q,EAAAxV,UAAA4M,UAAA,WACE/N,KAAKmN,QAAQQ,UAjDjB,CAA0Cf,uDCR1ChL,EAAAA,eAAAA,EAAAA,eAAAA,GAEEqM,EAAAA,WAAAA,UAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,gBAAAA,SAAAA,KAAAA,CAAsB,aAAA,WAAA9G,EAAA+G,cAAAoG,GAAA,IAAA4C,EAAAvV,EAAA4M,UAAA,OAAApH,EAAAiH,gBAAA+I,YAAAD,KAAtBjJ,CAAsB,UAAA,WAAA9G,EAAA+G,cAAAoG,GAAA,IAAA4C,EAAAvV,EAAA4M,UAAA,OAAApH,EAAAiH,gBAAAgJ,SAAAF,KAAtBjJ,CAAsB,YAAA,WAAA9G,EAAA+G,cAAAoG,GAAA,IAAA4C,EAAAvV,EAAA4M,UAAA,OAAApH,EAAAiH,gBAAAiJ,WAAAH,KAAtBjJ,CAAsB,WAAA,WAAA,OAAA9G,EAAA+G,cAAAoG,GAAAnN,EAAAiH,gBAAAjB,aAKxBtL,EAAAA,yCANEE,EAAAA,WAAAA,QAAAA,sCDOW4U,IAAoBxP,EAAAC,kBAcpB4H,EAAAA,aAAW7H,EAAAC,kBAAAC,EAAA4H,mBAAA9H,EAAAC,kBAAAC,EAAAC,oDAdXqP,GAAoBtV,UAAA,CAAA,CAAA,iBAAA8N,QAAA,CAAAiD,OAAA,SAAA2E,OAAA,SAAAC,SAAA,WAAAC,UAAA,aAAArG,SAAA,CAAAzJ,EAAA0J,4BAAAvP,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,WAAA,CAAA,EAAA,UAAA,4BAAA,EAAA,SAAA,CAAA,EAAA,iBAAA,CAAA,WAAA,IAAA,EAAA,WAAA,CAAA,WAAA,6BAAA,EAAA,oCAAA,CAAA,QAAA,mBAAA,EAAA,QAAA,CAAA,QAAA,oBAAA,EAAA,QAAA,CAAA,EAAA,oCAAA,CAAA,QAAA,8DAAA,EAAA,QAAA,CAAA,QAAA,wBAAA,EAAA,QAAA,CAAA,EAAA,UAAA,MAAA,CAAA,EAAA,gBAAA,EAAA,SAAA,CAAA,cAAA,WAAA,WAAA,IAAA,EAAA,UAAA,mBAAA,CAAA,EAAA,KAAA,WAAA,CAAA,WAAA,yBAAA,OAAA,YAAA,CAAA,EAAA,KAAA,UAAA,CAAA,WAAA,IAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,KAAA,YAAA,CAAA,EAAA,SAAA,CAAA,KAAA,IAAA,CAAA,EAAA,KAAA,iBAAA,CAAA,EAAA,KAAA,kBAAA,CAAA,EAAA,wBAAA,mCAAA,QAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,UAAA,sBAAA,EAAA,SAAA,CAAA,EAAA,yBAAA,CAAA,EAAA,OAAA,YAAA,CAAA,YAAA,IAAA,CAAA,EAAA,QAAA,WAAA,CAAA,OAAA,IAAA,aAAA,QAAA,cAAA,iBAAA,kBAAA,GAAA,YAAA,iBAAA,EAAA,gBAAA,EAAA,UAAA,kBAAAC,SAAA,SAAAC,EAAAC,sCDRjCC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,MAAAA,GAAgDqM,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,QAAAA,EAAAA,UAC/CrM,EAAAA,eAAAA,EAAAA,QAAAA,GACCA,EAAAA,eAAAA,EAAAA,IAAAA,GACKA,EAAAA,eAAAA,EAAAA,OAAAA,GACE9B,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,IAAAA,GACAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,IAAAA,GACF+B,EAAAA,eACAD,EAAAA,eAAAA,EAAAA,OAAAA,GAA+C/B,EAAAA,OAAAA,GAAegC,EAAAA,eAEhEA,EAAAA,eACJA,EAAAA,eACDA,EAAAA,eAGA/B,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAQAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAqBA8B,EAAAA,eAAAA,GAAAA,MAAAA,IACCA,EAAAA,eAAAA,GAAAA,QAAAA,IAA6BqM,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,YAAAA,IAAS0D,KAAAtD,MACrCzM,EAAAA,eAAAA,GAAAA,IAAAA,IACCE,EAAAA,UAAAA,GAAAA,IAAAA,IACDD,EAAAA,eACDA,EAAAA,eACED,EAAAA,eAAAA,GAAAA,QAAAA,IAA6BqM,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,MAAAA,QAAAA,EAAAA,MAAAA,OAAqCtM,EAAA+L,iBACnE9L,EAAAA,eAAAA,GAAAA,IAAAA,IACCE,EAAAA,UAAAA,GAAAA,IAAAA,IACDD,EAAAA,eACDA,EAAAA,eACAD,EAAAA,eAAAA,GAAAA,QAAAA,GACCA,EAAAA,eAAAA,GAAAA,IAAAA,IAAgCqM,EAAAA,WAAAA,SAAAA,WAAAA,OAAStM,EAAAyQ,OAAAzE,UACxC7L,EAAAA,UAAAA,GAAAA,IAAAA,IACDD,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eAEDA,EAAAA,eAIAC,EAAAA,UAAAA,GAAAA,kBAAAA,GAAAA,UAlE2BC,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,GAAAA,EAAAA,MAAAA,SAKWC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,QACCC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,QAEgBC,EAAAA,UAAAA,GAAA4P,EAAAA,kBAAAA,EAAAA,MAAAA,OAOmB5P,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,QAAAA,EAAAA,QAQtCC,EAAAA,UAAAA,GAAAD,EAAAA,WAAAA,OAAAA,EAAAA,QA2CfC,EAAAA,UAAAA,IAAAD,EAAAA,WAAAA,QAAAA,EAAAA,uKGrBnB,SAAAuV,EACgCzK,EACtBhH,GADsB7F,KAAA6M,MAAAA,EACtB7M,KAAA6F,KAAAA,SAnCV5E,OAAAC,eAAIoW,EAAAnW,UAAA,UAAO,KAAX,WACE,OAAOnB,KACJ6M,MACAO,OACApH,yCAGL/E,OAAAC,eAAIoW,EAAAnW,UAAA,UAAO,KAAX,WACE,OAAOnB,KAAKgG,QAAQI,yCAGtBnF,OAAAC,eAAIoW,EAAAnW,UAAA,YAAS,KAAb,WAGE,IAFA,IAAIsI,EAAQ,eAGV,IAAI8N,EAAYC,OACbC,aAAa,GAAKhO,KAClBiO,cAECtP,EAAIvD,KAAK8S,MAAOlO,EAAQ,IAQ5B,GANIrB,EAAI,IACNmP,GAAanP,IAGCwP,EAAKxR,QAAQ6B,MAAM,SAAA3B,GAAK,OAAAiR,GAAajR,EAAEuR,sBAG9CN,aAdA,kFAyBbD,EAAAnW,UAAAiP,SAAA,kBACmB,QAAbD,EAACnQ,KAAKoG,eAAO,IAAA+J,OAAA,EAAAA,EAAE1I,SACjBzH,KAAK8X,cAITR,EAAAnW,UAAA2W,WAAA,WACE,IAAM7H,EAAI,IAAI8H,EACd9H,EAAE4H,MAAQ7X,KAAKgY,UACf/H,EAAExN,QAAQqE,KAAM,IAAI0P,EAAe9T,EAAAA,cAAcuG,KAAM,CAAChE,EAAWE,iBAEnEnF,KAAKoG,QAAQU,KAAMmJ,IAGrBqH,EAAAnW,UAAAyT,SAAA,SAAUnO,GACR,IAAMgD,EAAQzJ,KAAKoG,QAAQqN,QAAShN,IAE/B,IAAMgD,IACTzJ,KAAKoG,QAAQgO,OAAQ3K,EAAO,GAC5BzJ,KAAKmN,YAITmK,EAAAnW,UAAAgW,YAAA,SAAa1Q,GACX,IAAMwR,EAAO3G,EAAAA,UAAa7K,GAC1BwR,EAAKJ,MAAQ7X,KAAKgY,UAClBhY,KAAKoG,QAAQU,KAAMmR,IAGrBX,EAAAnW,UAAAiW,SAAA,SAAU3Q,GACR,IAAMgD,EAAQzJ,KAAKoG,QAAQqN,QAAShN,GAEhCgD,GAAS,IAIfzJ,KAAKoG,QAAQgO,OAAQ3K,EAAO,GAC5BzJ,KAAKoG,QAAQgO,OAAQ3K,EAAQ,EAAG,EAAGhD,KAGnC6Q,EAAAnW,UAAAkW,WAAA,SAAY5Q,GACV,IAAMgD,EAAQzJ,KAAKoG,QAAQqN,QAAShN,IAE/B,GAAKgD,GAASA,GAASzJ,KAAKoG,QAAQqB,OAAS,IAIlDzH,KAAKoG,QAAQgO,OAAQ3K,EAAO,GAC9BzJ,KAAKoG,QAAQgO,OAAQ3K,EAAQ,EAAG,EAAGhD,KAGnC6Q,EAAAnW,UAAAgM,QAAA,WACEnN,KAAK6F,KAAKqS,+CA7FDZ,IAA8BnQ,EAAAC,kBAoC9B4H,EAAAA,aAAW7H,EAAAC,kBAAAC,EAAAC,oDApCXgQ,GAA8BjW,UAAA,CAAA,CAAA,qBAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,QAAA,SAAA,YAAA,SAAA,WAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,UAAA,6BAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,oCAAA,CAAA,EAAA,KAAA,iBAAA,CAAA,EAAA,oCAAA,CAAA,EAAA,MAAA,gBAAA,cAAA,EAAA,SAAA,CAAA,EAAA,QAAA,SAAA,YAAA,SAAA,WAAA,YAAAC,SAAA,SAAAC,EAAAC,SDV3C7B,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GASA8B,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,QAAAA,GACEA,EAAAA,eAAAA,EAAAA,OAAAA,GACEE,EAAAA,UAAAA,EAAAA,IAAAA,GACFD,EAAAA,eACAD,EAAAA,eAAAA,EAAAA,OAAAA,GAA+C/B,EAAAA,OAAAA,GAAagC,EAAAA,eAC9DA,EAAAA,eACAD,EAAAA,eAAAA,EAAAA,SAAAA,GAA8CqM,EAAAA,WAAAA,SAAAA,WAAAA,OAAStM,EAAAmW,gBACrDjY,EAAAA,OAAAA,EAAAA,eACFgC,EAAAA,eACFA,EAAAA,eACFA,EAAAA,sBArBcE,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,SAeuCC,EAAAA,UAAAA,GAAA4P,EAAAA,kBAAAA,EAAAA,gEEkCrD,8CAAauG,mEAAAA,KAAYC,QAAA,CAdd,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBAEAC,EAAAA,eACAC,EAAAA,mFAQSN,GAAY,CAAAO,aAAA,CA5BrB3Y,EACA6F,EAEA0R,GACAX,GACAvH,EACAsF,EACApB,EACAnB,EACAd,EAEAkE,GACAR,IAAwBqD,QAAA,CAGxBC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBAEAC,EAAAA,eACAC,EAAAA,eAAaE,QAAA,CAGb5Y,EACA6F,EACA0R","sourcesContent":["<div [formGroup]=\"form\">\r\n\r\n\t<h3 class=\"page-heading\">HTTP</h3>\t\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"URL\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\thint=\"Specify a complete HTTP URL (for example http://your_server:8080)\"\r\n\t\t\tformControlName=\"url\"\t>\r\n\t\t\t<ng-template edValidationTemplate *ngIf=\"url.hasError( 'required' ) && url.touched\">\r\n\t\t\t\tplease enter url\r\n\t\t\t</ng-template>\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"Whitelisted Cookies\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\tformControlName=\"whitelistedCookies\"\t>\r\n\t\t</ed-textbox>\r\n\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">Auth</h3>\r\n\t<div class=\"gf-form-group\">\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Basic Auth\"\r\n\t\t\t\tformControlName=\"basicAuthentication\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With Credentials\"\r\n\t\t\t\thint=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\r\n\t\t\t\tformControlName=\"withCredentials\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"TLS Client Auth\"\r\n\t\t\t\tformControlName=\"tlsClientAuth\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With CA Cert\"\r\n\t\t\t\thint=\"Needed for verifing self-signed TLS Certs\"\r\n\t\t\t\tformControlName=\"withCaCert\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Skip TLS Verify\"\r\n\t\t\t\tformControlName=\"skipTlsVerification\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">InfluxDB Details</h3>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Database'\"\r\n\t\t\t[labelWidth]=\"10\"\r\n\t\t\tformControlName=\"database\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'User'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\tformControlName=\"user\">\r\n\t\t\t</ed-textbox>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'Password'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tformControlName=\"password\">\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-info-box>\r\n\t\t\t<h5>Database Access</h5>\r\n\t\t\t<p>\r\n\t\t\t\tSetting the database for this datasource does not deny access to other databases.  The InfluxDB query syntax allows\r\n\t\t\t\tswitching the database in the query.  For example:\r\n\t\t\t\t<code>SHOW MEASUREMENTS ON _internal</code> or <code>SELECT * FROM \"_internal\"..\"database\" LIMIT 10</code>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\tTo support data isolation and security, make sure appropriate permissions are configured in InfluxDB.\r\n\t\t\t</p>\r\n\t\t</ed-info-box>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Min time interval'\"\r\n\t\t\t[labelWidth]=\"11\"\r\n\t\t\t[width]=\"5\"\r\n\t\t\t[placeholder]=\"'10s'\"\r\n\t\t\thint=\"'A lower limit for the auto group by time interval. Recommended to be set to write frequency,\r\n\t\t\t\tfor example 1m if your data is written every minute.'\"\r\n\t\t\ttype=\"password\"\r\n\t\t\tformControlName=\"minTimeInterval\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IDataSourceSettingsEditor } from 'common';\r\n\r\n@Component({\r\n  selector: 'ds-settings-editor',\r\n  templateUrl: './settings.html'\r\n})\r\nexport class InfluxSettingsEditorComponent implements IDataSourceSettingsEditor {\r\n\tform: FormGroup;\r\n\r\n\tget url(){\r\n\t\treturn this.form.get('url');\r\n\t}\r\n\t\r\n\tconstructor(){\r\n\t\tthis.form = new FormGroup({\r\n\t\t\t'url': new FormControl( null, Validators.required ),\r\n\t\t\t'whitelistedCookies': new FormControl( null ),\r\n\r\n\t\t\t'basicAuthentication': new FormControl( false ),\r\n\t\t\t'withCredentials': new FormControl( false ),\r\n\t\t\t'tlsClientAuth': new FormControl( false ),\r\n\t\t\t'withCaCert': new FormControl( false ),\r\n\t\t\t'skipTlsVerification': new FormControl( false ),\r\n\t\t\t\r\n\t\t\t'database': new FormControl( null, Validators.required ),\r\n\t\t\t'user': new FormControl( null ),\r\n\t\t\t'password': new FormControl( null ),\r\n\t\t\t'minTimeInterval': new FormControl( null )\r\n\t\t});\r\n\t}\r\n}","import {MetricQuery} from \"common\";\n\nexport class InfluxQuery implements MetricQuery {\n  measurement: string;\n  policy: string;\n  refId: string;\n  tags = new Array<Tag>();\n\tfields = new Array<Field>();\n\t\n\tlimit: number;\n\tslimit: number;\n\n\torder = OrderByTime.Asc;\n\talias: string;\n\n  groupBy = new Array<GroupByObject>();\n  \n  hidden: boolean;\n}\n\nexport class Field {\n  key: string;\n  functions: FuncObject[];\n}\n\nexport class FuncObject {\n  name: string;\n  param?: any;\n}\n\nexport enum AggrFunc {\n  Count = 'count',\n  Distinct = 'distinct',\n  Integral = 'integral',\n  Mean = 'mean',\n  Median = 'median',\n  Mode = 'mode',\n  Sum = 'sum',\n\n  Bottom = 'bottom',\n  First = 'first',\n  Last = 'last',\n  Max = 'max',\n  Min = 'min',\n  Percentile = 'percentile',\n  Top = 'top',\n\n  Derivative = 'derivative',\n  Spread = 'spread',\n  NonNegativeDerivative = 'non_negative_derivative',\n  Difference = 'difference',\n  NonNegativeDifference = 'non_negative_difference',\n  MovingAverage = 'moving_average',\n  CumulativeSum = 'cumulative_sum',\n  Stddev = 'stddev',\n  Elapsed = 'elapsed',\n\n  HoltWinters = 'holt_winters',\n  HoltWintersWithFit = 'holt_winters_with_fit',\n\n  Math = 'math',\n  Alias = 'alias',\n}\n\nexport enum AggrFuncGroup {\n  Aggregations,\n  Selectors,\n  Transformations,\n  Predictors,\n  Math,\n  Alias\n}\n\n\nexport class AggrFuncHelper {\n  static getGroup(f: AggrFunc|string) {\n    switch (f) {\n      case AggrFunc.Count:\n      case AggrFunc.Distinct:\n      case AggrFunc.Integral:\n      case AggrFunc.Mean:\n      case AggrFunc.Median:\n      case AggrFunc.Mode:\n      case AggrFunc.Sum:\n        return AggrFuncGroup.Aggregations;\n\n      case AggrFunc.Bottom:\n      case AggrFunc.First:\n      case AggrFunc.Last:\n      case AggrFunc.Max:\n      case AggrFunc.Min:\n      case AggrFunc.Percentile:\n      case AggrFunc.Top:\n        return AggrFuncGroup.Selectors;\n\n      case AggrFunc.Derivative:\n      case AggrFunc.Spread:\n      case AggrFunc.NonNegativeDerivative:\n      case AggrFunc.Difference:\n      case AggrFunc.NonNegativeDifference:\n      case AggrFunc.MovingAverage:\n      case AggrFunc.CumulativeSum:\n      case AggrFunc.Stddev:\n      case AggrFunc.Elapsed:\n        return AggrFuncGroup.Transformations;\n\n      case AggrFunc.HoltWinters:\n      case AggrFunc.HoltWintersWithFit:\n        return AggrFuncGroup.Predictors;\n\n      case AggrFunc.Math:\n        return AggrFuncGroup.Math;\n\n      case AggrFunc.Alias:\n        return AggrFuncGroup.Alias;\n\n    }\n  }\n}\n\nexport class GroupByObject{\n\n\tconstructor( public type, public params = [] ){}\n}\n\nexport enum GroupByOption{\n\tTime,\n\tFill,\n\tTag\n}\n\nexport enum GroupByTimeOptions{\n  Dynamic = '$__interval',\n  S1 = '1s',\n  S10 = '10s',\n  M1 = '1m',\n  M5 = '5m',\n  M10 = '10m',\n  M15 = '15m',\n  H1 = '1h',\n}\n\nexport enum GroupByFillOptions{\n\tNone = 'none',\n\tNull = 'null',\n\tZero = '0',\n\tPrev = 'previous',\n\tLinear = 'linear'\n}\n\nexport enum OrderByTime{\n\tAsc = \"asc\",\n\tDesc = \"desc\"\n}\n\nexport class MetricVars{\n\tstatic readonly TIME_FILTER = \"$timeFilter\";\n\tstatic readonly TIME_INTERVAL = \"$__interval\";\n}\n\nexport class Tag{\n  key: string = '';\n  value: string = '';\n  operator: TagOperator = TagOperator.Eq;\n  condition: TagCondition = TagCondition.And\n}\n\nexport enum TagOperator{\n  Eq = '=',\n  Neq = '<>',\n  Less = '<',\n  Greater = '>',\n  RegExEq = '=~',\n  RegExNeq = '!~'\n}\n\nexport enum TagCondition{\n  And = 'AND',\n  Or = 'OR'\n}\n\n\n","import { Component } from '@angular/core';\nimport { TimeRange, TimeRangeParser, TimeRangeStore,\n  Timezone, MetricsBuilder, Metrics } from 'common';\nimport { AggrFuncGroup, AggrFuncHelper,\n\tField, OrderByTime, GroupByOption, MetricVars, InfluxQuery } from './metrics.m';\nimport * as _ from 'lodash';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n\tselector: 'metrics-builder',\n\ttemplate: ''\n})\nexport class InfluxMetricsBuilder implements MetricsBuilder {\n\n\tconstructor( private time: TimeRangeStore = undefined/* for timezone */ ){\n\t\t\n  }\n\n\tbuild( metrics: Metrics, range?: TimeRange ) : Observable<string> {\n\t\tconst array = [];\n\n\t\tmetrics\n      .targets\n      .filter( x => !(<InfluxQuery>x).hidden )\n\t\t\t.forEach(t => {\n\t\t\t\tconst gen = new Builder( this.time, t, range );\n\n\t\t\t\tif (!gen.invalid && !(<any>t).virgin) {\n\t\t\t\t\tarray.push(gen.text);\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet request = array.join(';');\n\n\t\treturn of( request );\n\t}\n}\n\nclass Builder{\n\tget invalid(){\n    const invalidQuery = \n      (!this.target) ||\n      (!this.target.fields || 0 === this.target.fields.length );\n\n    return invalidQuery;\n\t}\n\t\n\tget text() {\n    return `SELECT ${this.getFieldsText()} FROM ${this.getMeasurementText()}`\n  }\n\n\tconstructor( \n\t\tprivate time: TimeRangeStore,\n\t\tprivate target: any,\n\t\tprivate range?: TimeRange ){\n\n\t}\n\n\tgetFieldsText() {\n\t\tlet result = '';\n\t\t\n    if (!this.target.fields) {\n      return result;\n    }\n\n    this.target.fields.forEach(x => {\n      if (result.length > 0) {\n        result += ', ';\n      }\n\n      result += this.getFieldText( x );\n    })\n\n    return result;\n\t}\n\t\n\t\n  getFieldText(field: Field) {\n\t\t let result = '';\n    let key = (!field.key) ? 'field' : field.key;\n\n    const aggr = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Aggregations ||\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Selectors);\n\n    if (aggr) {\n      result += aggr.name + ((aggr.param && aggr.param.value) ?\n        `(\"${key}\", ${aggr.param.value})` : `(\"${key}\")`);\n    } else {\n      result = `\"${key}\"`;\n    }\n\n    const trans = field.functions.filter(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Transformations);\n\n    trans.forEach(x => {\n      const p = (x.param && x.param.value) ? `, ${x.param.value}` : ``;\n      result = `${x.name}(${result}${p})`;\n    })\n\n    const math = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Math);\n\n    if (math) {\n      result = `${result} ${math.param.value}`;\n    }\n\n    const alias = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Alias);\n\n    if (alias) {\n      result = `${result} AS \"${alias.param.value}\"`;\n    }\n\n\t\treturn result;\n\t}\n\t\n  getMeasurementText() {\n    const meas = (!this.target.measurement) ? 'measurement' : this.target.measurement;\n\n    let rp = (this.target.policy && this.target.policy.length > 0 && this.target.policy !== 'default') ?\n      `\"${this.target.policy}\".` : '';\n\n    let root = `${rp}\"${meas}\"`;\n    let cond = '';\n\n    let tagIndex = 0;\n\n    if (this.target.tags) {\n      this\n        .target\n        .tags\n        .filter(x => x.key && x.value)\n        .forEach(x => {\n          if (tagIndex > 0) {\n            cond += ` ${x.condition} `;\n          }\n\n          const value = isRegex( x.value ) ? x.value : `'${x.value}'`;\n          cond += ` \"${x.key}\" ${x.operator} ${value}`;\n          ++tagIndex;\n        });\n    }\n\n    const timeFilter = ( this.range ) ?\n      this.getTimeFilter() : MetricVars.TIME_FILTER;\n\n    if (cond.length > 0) {\n      root = `${root} WHERE (${cond}) and ${timeFilter}`\n    }\n    else{\n      // TODO\n      root = `${root} WHERE ${timeFilter}`\n\t\t}\n\n\t\tconst groupBy = this.target.groupBy;\n\t\tconst groupByTime = groupBy.find( x => x.type == GroupByOption.Time );\n\t\tconst groupByFill = groupBy.find( x => x.type == GroupByOption.Fill );\n    const groupByTag = groupBy.filter( x => x.type == GroupByOption.Tag );\n    \n    //console.log( groupBy );\n\n\t\tif( groupByTime ){\n      const gb = ( this.range && groupByTime.params[ 0 ] == MetricVars.TIME_INTERVAL ) ?\n        this.getOptimalAutoGroupBy() : groupByTime.params[ 0 ];\n        \n\t\t\troot = `${root} GROUP BY time(${gb})`\n\t\t}\n\n\t\tif( groupByTag.length > 0 ){\n\t\t\troot = ( !groupByTime ) ? `${root} GROUP BY` : `${root},`; \n\n\t\t\tgroupByTag.forEach( (e,index) => {\n\t\t\t\troot = `${root}${index >0 ? ', ' : ' '} \"${e.params[ 0 ]}\"`\n\t\t\t} )\n\t\t}\n\t\t\n\t\tif( groupByFill ){\n\t\t\troot = `${root} FILL(${groupByFill.params[ 0 ]})`\n\t\t}\n\n\t\tif( this.target.order != OrderByTime.Asc ){\n\t\t\troot = `${root} ORDER BY time DESC`; \n\t\t}\n\t\t\n\t\tif( this.target.limit > 0 ){\n\t\t\troot = `${root} LIMIT ${this.target.limit}`;\n\t\t}\n\n\t\tif( this.target.slimit > 0 ){\n\t\t\troot = `${root} SLIMIT ${this.target.slimit}`;\n\t\t}\n\n    return root;\n\t}\n\t\n  getOptimalAutoGroupBy() : string {\n    const f = TimeRangeParser.toDateTime( this.range.from, false );\n    const t = TimeRangeParser.toDateTime( this.range.to, true );\n\n\t\tif (5 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"200ms\";\n\n\t\tif (15 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"1s\";\n\n\t\tif (30 > t.diff( f, \"minutes\" ))\n\t\t\treturn \"2s\";\n\n\t\tif (1 > t.diff( f, \"hours\" ))\n\t\t\treturn \"5s\";\t\t\n\n\t\tif (3 > t.diff( f, \"hours\" ))\n\t\t\treturn \"10s\";\t\t\n\n\t\tif (6 > t.diff( f, \"hours\" ))\n\t\t\treturn \"20s\";\t\t\n\n\t\tif (12 > t.diff( f, \"hours\" ))\n\t\t\treturn \"1m\";\t\t\n\n\t\tif (24 > t.diff( f, \"hours\" ))\n\t\t\treturn \"2m\";\t\t\n\n\t\tif (7 > t.diff( f, \"days\" ))\n\t\t\treturn \"10m\";\t\t\n\n\t\tif (31 > t.diff( f, \"days\" ))\n\t\t\treturn \"1h\";\t\t\n\n\t\tif (365 > t.diff( f, \"days\" ))\n\t\t\treturn \"12h\";\t\t\n\n\t\t return \"24h\";\n\t}\n\n  getTimeFilter() {\n    const range = this.range;\n    const tz = this.time.converter.timezone; //this.range.timezone;\n\n    let from = this.getInfluxTime( range.from, false, tz);\n    let to = this.getInfluxTime( range.to, true, tz);\n\n    const fromIsAbsolute = from[from.length - 1] === 'ms';\n\n    if (to === 'now()' && !fromIsAbsolute) {\n      return 'time >= ' + from;\n    }\n\n    return 'time >= ' + from + ' and time <= ' + to;\n\t}\n\t\n  getInfluxTime(date: any, roundUp: any, timezone: Timezone) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now()';\n      }\n\n      const parts = /^now-(\\d+)([dhms])$/.exec(date);\n\n      if (parts) {\n        const amount = parseInt(parts[1], 10);\n        const unit = parts[2];\n        return 'now() - ' + amount + unit;\n      }\n\n      date = TimeRangeParser.toDateTime(date, roundUp, timezone);\n    }\n\n    return date.valueOf() + 'ms';\n  }\n\n}\n\nexport function isRegex(expr) {\n  let isValid = true;\n  try {\n    new RegExp(expr);\n\n    isValid = ( expr.startsWith( '/' ) && expr.endsWith( '/' )  )\n  } catch (e) {\n    isValid = false;\n  }\n\n  return isValid;\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive, EventEmitter, Inject, Input, Output } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN, Series, Metrics } from 'common';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { InfluxMetricsBuilder } from '../../builder';\r\n\r\nimport { InfluxQuery, Tag, Field, GroupByObject } from '../../metrics.m';\r\n\r\n@Directive()\r\nexport class BaseQueryComponent {\r\n  readonly REMOVE = '--remove--';\r\n\treadonly ADD = '--add--';\r\n  \r\n  @Input() query : InfluxQuery;\r\n  @Output() change = new EventEmitter();\r\n  @Output() rebuild = new EventEmitter();\r\n  queryAsString: string;\r\n\r\n  get metrics(): Metrics{\r\n    return this\r\n      .panel\r\n      .widget\r\n      .metrics;\r\n  }\r\n\r\n  get dataSourceId(): number{\r\n    return this.metrics.dataSource;\r\n  }\r\n\r\n  get fields(): Field[]{\r\n    return this.query.fields;\r\n  }\r\n\r\n  get groupBy(): GroupByObject[]{\r\n    return this.query.groupBy;\r\n  }\r\n\r\n  constructor(\r\n    @Inject( PANEL_TOKEN ) public panel: Panel,\r\n    public dsService: DataSourceService){\r\n  }\r\n\r\n  proxy( command: string ) : Observable<Series[] > {\r\n    return this\r\n      .dsService\r\n      .proxy( this.dataSourceId, command)\r\n  }\r\n\r\n  needRebuild(){\r\n    this.rebuild.emit();\r\n  }\r\n\r\n  build( fireRebuild: boolean = true ){\r\n    new InfluxMetricsBuilder()\r\n      .build( {targets: [this.query], dataSource: 0 }  )\r\n      .subscribe( x =>{\r\n        this.queryAsString = x\r\n\r\n        if( fireRebuild ){\r\n          this.onRebuild();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRebuild(){\r\n\r\n  }\r\n}","<div class=\"gf-form-inline\">\r\n\r\n\t<div class=\"gf-form\"  >\r\n\t\t<label class=\"gf-form-label  query-keyword width-7\" >\r\n\t\t\tFROM\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<ed-autocomplete-picker \r\n\t\t[(ngModel)]=\"query.policy\"\r\n\t\t[request]=\"retentionPolicies$\"\r\n\t\t(pick)=\"needRebuild()\" >\r\n\t</ed-autocomplete-picker>\r\n\t\r\n\t<ed-autocomplete-picker \r\n\t\tplaceholder=\"select measurement\"\r\n\t\t[(ngModel)]='query.measurement'\r\n\t\t[request]=\"measurements$\"\r\n\t\t(pick)=\"needRebuild()\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<div class=\"gf-form\"  >\r\n\t\t<label class=\"gf-form-label query-keyword\" >\r\n\t\t\tWHERE\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<ng-container *ngFor=\"let t of query.tags;let i = index\" >\r\n\r\n\t\t<ed-autocomplete-picker \r\n\t\t\t[hidden]=\"!(i > 0 && t.key)\"\r\n\t\t\t[(ngModel)]=\"t.condition\"\r\n\t\t\t[request]=\"conditions$\" \r\n\t\t\tvalueClass=\"query-keyword\"\r\n\t\t\t(pick)=\"needRebuild()\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t\t<ed-autocomplete-picker\r\n\t\t\t[(ngModel)]=\"t.key\"\r\n\t\t\t[request]=\"tagEditKeys$\"\r\n\t\t\t(pick)=\"onTagKeyEditPick( $event, t );needRebuild()\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t\t<ed-autocomplete-picker \r\n\t\t\t[(ngModel)]=\"t.operator\"\r\n\t\t\t[request]=\"tagOperators$( t )\"\r\n\t\t\tvalueClass=\"query-segment-operator\"\r\n\t\t\t(pick)=\"needRebuild()\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n    <ed-autocomplete-picker \r\n      placeholder=\"select tag value\" \r\n      [value]='t.value'\r\n\t\t\t[request]=\"tagValues$( t )\"\r\n\t\t\t[forceSelection]=\"false\"\r\n\t\t\t(pick)=\"onTagValuePick( t, $event );\" >\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t</ng-container>\r\n\r\n\t<ed-autocomplete-picker *ngIf=\"canAddTag\"\r\n\t\tplaceholder=\"fa fa-plus\" \r\n\t\t[request]=\"tagAddKeys$\"\r\n\t\t[readonly]=\"true\"\r\n\t\t(pick)=\"onTagAddKeyPick( $event );\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { isRegex } from '../../../builder';\r\nimport { Tag, TagCondition, TagOperator } from '../../../metrics.m';\r\nimport { BaseQueryComponent } from '../query-base';\r\n\r\n@Component({\r\n  selector: 'measurement-editor',\r\n  templateUrl: './measurement.html'\r\n})\r\nexport class MeasurementEditorComponent extends BaseQueryComponent  {\r\n\r\n  readonly DEFAULT_POLICY = 'default';\r\n\r\n  get retentionPolicies$() {\r\n    return this\r\n      .proxy( `SHOW RETENTION POLICIES`)\r\n      .pipe(\r\n        map(x => ['default', ...x[0].values.map(y => y[0])]));\r\n  }\r\n\r\n  get measurements$() {\r\n    return this\r\n      .proxy( `SHOW MEASUREMENTS`)\r\n      .pipe(\r\n        map(x => [...x[0].values].reduce((acc, value) => acc.concat(value), [])))\r\n  }\r\n\r\n  tagOperators$( tag:Tag ) {\r\n    const isRegexValue = isRegex( tag.value );\r\n    const allOperators = Object.values(TagOperator);\r\n\r\n    let result = isRegexValue ? allOperators.slice( 4, 6 ) : allOperators.slice( 0, 4 )\r\n\r\n    return of( result );\r\n  }\r\n\r\n  get tagAddKeys$() {\r\n    const q = (this.query.measurement) ?\r\n      `SHOW TAG KEYS from ${this.query.measurement}` :\r\n      `SHOW TAG KEYS`;\r\n\r\n    return this\r\n      .proxy( q )\r\n      .pipe(\r\n        map(x => (!x.length) ? [] : [...x[0].values.reduce((acc, value) => acc.concat(value), [])]));\r\n  }\r\n\r\n  get tagEditKeys$() {\r\n    return this\r\n      .tagAddKeys$\r\n      .pipe( \r\n        map( x => [this.REMOVE, ...x ] ));\r\n  }\r\n\r\n  tagValues$( tag: Tag ) {\r\n    const q = `SHOW TAG VALUES WITH KEY=${tag.key}`;\r\n\r\n    return this\r\n      .proxy( q )\r\n      .pipe(\r\n        map(x => x[0]?.values.map(y => y[1])));\r\n  }\r\n\r\n  get conditions$() {\r\n    return of(Object.values(TagCondition));\r\n  }\r\n\r\n  get canAddTag(){\r\n    const tags = this.query.tags;\r\n    return ( !tags?.length ) || ( tags[ tags.length - 1 ] ).value;\r\n  }\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.query.policy) {\r\n      this.query.policy = this.DEFAULT_POLICY;\r\n    }\r\n  }\r\n \r\n  onTagAddKeyPick( k: string ) {\r\n    var tag = new Tag();\r\n    tag.key = k;\r\n    this.query.tags.push( tag );\r\n  }\r\n\r\n  onTagKeyEditPick( k: string, t: Tag ) {\r\n    if( k == this.REMOVE ){\r\n      this.query.tags = this.query.tags.filter( x => x != t );\r\n    }\r\n  }\r\n\r\n  onTagValuePick(t: Tag, v: string) {\r\n    if( v === t.value ){\r\n      return;\r\n    }\r\n\r\n    let oldValueIsRegEx = isRegex( t.value );\r\n    t.value = v;\r\n    let newValueIsRegEx = isRegex( t.value );\r\n\r\n    const regExChanged = ( oldValueIsRegEx != newValueIsRegEx );\r\n\r\n    if( regExChanged ){\r\n      t.operator = ( newValueIsRegEx ) ? TagOperator.RegExEq : TagOperator.Eq;\r\n    } \r\n\r\n    this.needRebuild()\r\n  }\r\n}","import { AggrFunc, AggrFuncGroup } from '../../../../../metrics.m';\r\n\r\nconst timeSuggestions = ['1s', '10s', '1m', '5m', '10m', '15m', '1h']\r\n\r\nexport const menuItems: any[] = [\r\n  { label: AggrFuncGroup[ 0 ], items: [ \r\n     { label: AggrFunc.Count },\r\n     { label: AggrFunc.Distinct },\r\n     { label: AggrFunc.Integral },\r\n     { label: AggrFunc.Mean },\r\n     { label: AggrFunc.Median },\r\n     { label: AggrFunc.Mode },\r\n     { label: AggrFunc.Sum },\r\n     ] },\r\n  { label: AggrFuncGroup[ 1 ], items: [ \r\n    { label: AggrFunc.Bottom, param: { value: '3' } },\r\n    { label: AggrFunc.First },\r\n    { label: AggrFunc.Last },\r\n    { label: AggrFunc.Max },\r\n    { label: AggrFunc.Min },\r\n    { label: AggrFunc.Percentile, param: { value: '95' }  },\r\n    { label: AggrFunc.Top, param: { value: '3' } },\r\n    ] },\r\n  { label: AggrFuncGroup[ 2 ], items: [ \r\n    { label: AggrFunc.Derivative,\r\n      param: { value: timeSuggestions[ 1 ], suggestions: [...timeSuggestions] } },\r\n    { label: AggrFunc.Spread  },\r\n    { label: AggrFunc.NonNegativeDerivative,\r\n       param: { value: timeSuggestions[ 1 ], suggestions: [...timeSuggestions] } },\r\n    { label: AggrFunc.Difference },\r\n    { label: AggrFunc.NonNegativeDifference },\r\n    { label: AggrFunc.MovingAverage, param: { value: '10', suggestions: ['5', '10', '20', '30', '40'] } },\r\n    { label: AggrFunc.CumulativeSum },\r\n    { label: AggrFunc.Stddev },\r\n    { label: AggrFunc.Elapsed, \r\n      param: { value: timeSuggestions[ 1 ], suggestions: [...timeSuggestions] } },\r\n    ] },\r\n//  { label: AggrFuncGroup[ 3 ], items: [ \r\n//     { label: AggrFunc.HoltWinters },\r\n//     { label: AggrFunc.HoltWintersWithFit }\r\n//     ] },\r\n  { label: AggrFuncGroup[ 4 ], items: [\r\n    { label: AggrFunc.Math, param: { value: ' / 100' } }\r\n  ]  },\r\n  { label: AggrFuncGroup[ 5 ], items: [\r\n    { label: AggrFunc.Alias, param: { value: 'alias' } }\r\n  ]  },\r\n  { label: 'Field', items: [ { label: 'field' }] }\r\n];\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { menuItems } from './func-items';\r\nimport * as _ from 'lodash';\r\nimport { ContextMenuComponent } from 'uilib';\r\n\r\n@Component({\r\n  selector: 'field-function-picker',\r\n  template: `\r\n    <div class=\"gf-form\" >\r\n      <a class=\"gf-form-label pointer\" (click)=\"cm.show( $event )\" >\r\n        <i class=\"fa fa-plus\" ></i>\r\n      </a>\r\n    </div>\r\n\r\n    <ed-context-menu [items]=\"items\" #cm></ed-context-menu>\r\n  `\r\n})\r\nexport class FieldFunctionPickerComponent   {\r\n  items =\t_.cloneDeep( menuItems ); \r\n\r\n  @Output() pick = new EventEmitter<any>();\r\n\r\n  ngOnInit(){\r\n    ContextMenuComponent.wrapItems( this.items, x => this.pick.emit( x.item ) )\r\n  }\r\n}","<div class=\"gf-form\">\r\n\t<label class=\"gf-form-label\">\r\n\t\t<a (click)=\"cmRemove.show( $event )\" class=\"pointer\">{{func.name}} (</a>\r\n\r\n\t\t<a *ngIf=\"param\">\r\n\t\t\t<span [hidden]=\"isEditorVisible\" (click)=\"onShowEditor( $event )\">{{paramValue}}</span>\r\n\t\t</a>\r\n\r\n\t\t<input *ngIf=\"isEditorVisible\" type=\"text\"\r\n\t\t\tclass=\"ff__editor \"\r\n\t\t\t[ngStyle]=\"{width: ((textValue.length + 1) * 8) + 'px' }\"\r\n\t\t\t[(ngModel)]=\"textValue\"\r\n\t\t\t(focusout)=\"onEditorFocusOut()\"\r\n\t\t\t(keydown)=\"onEditorKeyDown()\"\r\n\t\t\t(keyup.enter)=\"onEditorKeyUpEnter()\"\r\n\t\t\t(keyup.escape)=\"onEditorKeyUpEnter()\"\r\n\t\t\tspellcheck=\"false\" \r\n\t\t\t#editor >\r\n\r\n\t\t<a (click)=\"onShowEditor( $event )\">)</a>\r\n\t</label>\r\n</div>\r\n\r\n<ed-context-menu [items]=\"[deleteMenuItem]\" #cmRemove ></ed-context-menu>\r\n\r\n<ed-context-menu [items]=\"suggestionItems\" #suggestions ></ed-context-menu>","import { Component, ElementRef, EventEmitter,\r\n  Input, Output, ViewChild } from '@angular/core';\r\nimport { ContextMenuComponent } from 'uilib';\r\nimport { FuncObject } from '../../../../../metrics.m';\r\n\r\n@Component({\r\n  selector: 'field-function-editor',\r\n  templateUrl: './func-editor.html',\r\n  styleUrls: ['./func-editor.scss']\r\n})\r\nexport class FieldFunctionEditorComponent   {\r\n\r\n  @Input() func: FuncObject;\r\n  @Output() remove = new EventEmitter();\r\n  @Output() rebuild = new EventEmitter();\r\n\r\n  textValue: string;\r\n\r\n  isEditorVisible = false;\r\n  isSuggestionsMenuOpen = false;\r\n  suggestionItems = [];\r\n  deleteMenuItem = { label: 'Remove', command: _ => this.remove.emit()}\r\n\r\n  @ViewChild('editor') editorElement: ElementRef;\r\n  @ViewChild(\"suggestions\") suggestions: ContextMenuComponent;\r\n\r\n  get param(){\r\n    return this.func.param;\r\n  }\r\n\r\n  get paramValue(){\r\n    return this.param.value\r\n  }\r\n\r\n  get hasSuggestions(){\r\n    return ( this.param && this.param.suggestions );\r\n  }\r\n\r\n  ngOnInit(){\r\n    if( this.param ){\r\n      this.textValue = this.paramValue;\r\n    }\r\n    \r\n    if( this.hasSuggestions ){\r\n      this\r\n        .param\r\n        .suggestions\r\n        .forEach(e => this.suggestionItems.push({\r\n          label: e,\r\n          command: (x) => {\r\n\r\n            const same = this.paramValue == x.item.label;\r\n\r\n            if( !same ){\r\n              this.param.value = this.textValue = x.item.label;\r\n              this.isEditorVisible = false;\r\n              this.rebuild.emit()\r\n            }\r\n          }\r\n         }));\r\n    }\r\n  }\r\n\r\n  onShowEditor(e){\r\n    if( !this.param ){\r\n      return;\r\n    }\r\n\r\n    if (this.hasSuggestions) {\r\n      this.isSuggestionsMenuOpen = true;\r\n      this.suggestions.show(e);\r\n    }\r\n\r\n    setTimeout(() => { \r\n      this.isEditorVisible = true;\r\n\r\n      setTimeout( () => this.editorElement.nativeElement.focus(), 0 )\r\n    }, 0);\r\n  }\r\n\r\n  onEditorFocusOut(){\r\n    if( !this.isSuggestionsMenuOpen ){\r\n      this.isEditorVisible = false;\r\n\r\n      const same = this.paramValue == this.textValue;\r\n\r\n      if( !same ){\r\n        this.param.value = this.textValue\r\n        this.rebuild.emit()\r\n      }\r\n    }\r\n  }\r\n\r\n  onEditorKeyDown(){\r\n    this.isSuggestionsMenuOpen = false;\r\n    this.suggestions.hide()\r\n  }\r\n\r\n  onEditorKeyUpEnter(){\r\n    this.isEditorVisible = false;\r\n\r\n    const same = this.paramValue == this.textValue;\r\n\r\n    if( !same ){\r\n      this.param.value = this.textValue\r\n      this.rebuild.emit()\r\n    }\r\n  }\r\n\r\n\r\n}","<div class=\"gf-form-inline\">\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label query-keyword width-7\">\r\n\t\t\t<span *ngIf=\"index === 0\">SELECT</span>&nbsp;\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<ed-autocomplete-picker \r\n\t\t[(ngModel)]=\"field.key\"\r\n\t\tplaceholder=\"field(value)\" \r\n\t\tformatString=\"field({0})\" \r\n\t\t[request]=\"fields$\"\r\n\t\t(pick)=\"onFieldPick($event);needRebuild()\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<field-function-editor *ngFor=\"let f of field.functions\"\r\n\t\t[func] =\"f\" \r\n\t\t(remove)=\"onFuncRemove( f ); needRebuild()\"\r\n\t\t(rebuild)=\"needRebuild()\">\r\n\t</field-function-editor>\r\n\r\n\t<field-function-picker (pick)=\"onFuncPick($event); needRebuild()\" ></field-function-picker>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n\t\r\n</div>\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { map } from 'rxjs/operators';\r\nimport { AggrFuncGroup, AggrFuncHelper, FuncObject } from '../../../metrics.m';\r\nimport { BaseQueryComponent } from '../query-base';\r\nimport * as _ from 'lodash';\r\nimport { menuItems } from './func/picker/func-items';\r\n\r\n@Component({\r\n  selector: 'field-editor',\r\n  templateUrl: './field.html'\r\n})\r\nexport class FieldEditorComponent extends BaseQueryComponent  {\r\n\r\n  index: number;\r\n  fieldFuncItems = menuItems; \r\n\r\n  @Input() field: any;\r\n\r\n  @Output() remove = new EventEmitter();\r\n  @Output() add = new EventEmitter();\r\n\r\n  get functions(): FuncObject[]{\r\n    return this.field.functions;\r\n  }\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.index = this\r\n      .query\r\n      .fields\r\n      .indexOf( this.field );\r\n\r\n    const flatFieldFuncItems = this\r\n      .fieldFuncItems\r\n      .map( p => p.items )\r\n      .reduce( (a, b) => a.concat(b));\r\n\r\n    this\r\n      .field\r\n      .functions\r\n      .forEach( f => {\r\n        if( f.param ){\r\n          let s = flatFieldFuncItems.find( x => x.text === f.name );\r\n          \r\n          if( s && s.param && s.param.suggestions ){\r\n            f.param.suggestions = [...s.param.suggestions];\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  get fields$() {\r\n    return this\r\n      .proxy(`SHOW FIELD KEYS FROM \\\"${this.query.measurement}\\\"`)\r\n      .pipe(\r\n        map(x => {\r\n          if( !x || 0 == x.length ){\r\n            return null;\r\n          }\r\n\r\n          const fields = [...x[0].values.map(y => y[0])];\r\n          return ( this.query.fields.length > 1 ) ? [ this.REMOVE, ...fields ] : fields;\r\n        } ));\r\n  }\r\n\r\n  onFieldPick( field: string ){\r\n    if( field === this.REMOVE ){\r\n      this.remove.emit();\r\n    } else{\r\n      this.field.key = field; \r\n    }\r\n  }\r\n \r\n  onFuncPick( arg ){\r\n    const fo = new FuncObject();\r\n    fo.name = arg.label;\r\n\r\n    if( arg.label == \"field\" ){\r\n      this.add.emit();\r\n      return;\r\n    }\r\n\r\n    if( arg.param )  {\r\n      fo.param = _.cloneDeep( arg.param );\r\n    }\r\n\r\n    const alias = this.functions.find( x => \r\n      AggrFuncHelper.getGroup( x.name ) ==  AggrFuncGroup.Alias )\r\n\r\n    const math = this.functions.find( x => \r\n      AggrFuncHelper.getGroup( x.name ) == AggrFuncGroup.Math )\r\n\r\n    const len = this.functions.length;\r\n\t\tconst funcs = this.functions\r\n\r\n    switch( AggrFuncHelper.getGroup( arg.label ) ){\r\n      case AggrFuncGroup.Aggregations:\r\n      case AggrFuncGroup.Selectors:\r\n        const duplicate = this\r\n          .field\r\n          .functions\r\n          .find( x => \r\n            AggrFuncHelper.getGroup( x.name ) == AggrFuncGroup.Aggregations ||\r\n            AggrFuncHelper.getGroup( x.name ) == AggrFuncGroup.Selectors );\r\n\r\n        if( duplicate ){\r\n          funcs[ 0 ] = fo;\r\n        } else{\r\n          funcs.splice( 0, 0, fo);\r\n        }\r\n        break;\r\n\r\n        case AggrFuncGroup.Transformations:\r\n          if( !alias ){\r\n            funcs.push( fo );\r\n          } else{\r\n            funcs.splice( len - 1, 0, fo);\r\n          }\r\n          break;\r\n\r\n        case AggrFuncGroup.Math:\r\n          if( math && !alias ){\r\n            funcs[ len -1 ] = fo;\r\n          } else if( !math && alias ) {\r\n            funcs.splice( len - 1, 0, fo);\r\n          } else {\r\n            funcs.push( fo );\r\n          }\r\n          break;\r\n\r\n        case AggrFuncGroup.Alias:\r\n          if( alias ){\r\n            this.functions[ len -1 ] = fo;\r\n          } else {\r\n            this.functions.push( fo );\r\n          }\r\n          break;\r\n    }\r\n  }\r\n\r\n  onFuncRemove( f: FuncObject ){\r\n    const index = this.functions.indexOf( f );\r\n\r\n    if( -1 !== index ){\r\n      this.functions.splice( index, 1 );\r\n    }\r\n  }\r\n}","import { Component, Inject } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { AggrFunc, Field, FuncObject } from '../../../metrics.m';\r\nimport { BaseQueryComponent } from '../query-base';\r\n\r\n@Component({\r\n  selector: 'fields-editor',\r\n  template: `\r\n    <field-editor *ngFor=\"let f of query.fields\" \r\n      [query]=\"query\" \r\n      [field]=\"f\"\r\n      (remove)=\"onRemove(f)\"\r\n      (add)=\"onAdd()\"\r\n      (rebuild)=\"needRebuild()\" >\r\n    </field-editor> `\r\n})\r\nexport class FieldsEditorComponent extends BaseQueryComponent  {\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.fields?.length) {\r\n      this.query.fields = [this.createEmpyField()];\r\n    }\r\n  }\r\n\r\n  onRemove(f: Field) {\r\n    const fields = this.query.fields;\r\n\r\n    if (1 < fields.length) {\r\n\r\n      const index = fields.indexOf( f );\r\n\r\n      if( -1 !== index ){\r\n        this.query.fields.splice( index, 1 );\r\n      }\r\n    }\r\n  }\r\n\r\n  onAdd() {\r\n    this\r\n      .query\r\n      .fields\r\n      .push(this.createEmpyField());\r\n  }\r\n\r\n  createEmpyField() {\r\n    const def = new FuncObject();\r\n    def.name = AggrFunc.Mean;\r\n\r\n    const field = new Field();\r\n    field.functions = [ def ];\r\n\r\n    return field;\r\n  }\r\n}","import { Component, Input, Output } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '[tag-label]',\r\n\ttemplate: `\r\n\t<span (click)=\"cm.show($event)\" class=\"gf-form-label\">tag({{value}})</span>\r\n\r\n\t<ed-context-menu [items]=\"[deleteMenuItem]\" #cm>`,\r\n})\r\nexport class GroupByTagLabelComponent {\r\n\t@Input()value:string;\r\n\t@Output() removed = new EventEmitter();\r\n\r\n\tdeleteMenuItem = {\r\n\t\tlabel: 'Remove',\r\n\t\tcommand: _ => this.removed.emit( this.value )\r\n\t}\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"gf-form-inline\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">\r\n      <span>GROUP BY</span>\r\n    </label>\r\n  </div>\r\n\r\n  <ed-autocomplete-picker   \r\n    *ngIf=\"time\" \r\n    [(ngModel)]=\"timeValue\"\r\n    formatString=\"time({0})\"\r\n    [request]=\"timeOptions$\">\r\n  </ed-autocomplete-picker >\r\n\r\n  <div *ngFor=\"let t of tags\" [value]=\"t.params[ 0 ]\" tag-label \r\n    class=\"gf-form pointer\" (removed)=\"onRemoveTag( $event )\"\t>\r\n  </div>\r\n\r\n  <ed-autocomplete-picker *ngIf=\"fill\" \r\n    formatString=\"fill({0})\" \r\n    [(ngModel)]=\"fillValue\"\r\n    [request]=\"fillOptions$\" >\r\n  </ed-autocomplete-picker>\r\n\r\n  <ed-autocomplete-picker   \r\n    placeholder=\"fa fa-plus\"\r\n    readonly=\"true\"\r\n    [request]=\"groupByOptions$\"\r\n    (pick)=\"onOptionPick( $event );\">\r\n  </ed-autocomplete-picker>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"gf-form-inline\" *ngIf=\"query.order == OrderByTimeRef.Desc;\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">\r\n      ORDER BY\r\n    </label>\r\n\r\n    <label class=\"gf-form-label pointer\" (click)=\"query.order=OrderByTimeRef.Asc; needRebuild()\">\r\n      time <span class=\"query-keyword\">DESC</span> <i class=\"fa fa-remove ml-1\"></i>\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"gf-form-inline\" *ngIf=\"query.limit\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">LIMIT</label>\r\n    <input type=\"text\" class=\"gf-form-input width-9\" [(ngModel)]=\"limit\"\r\n      spellcheck='false' placeholder=\"No Limit\" (change)=\"needRebuild()\" >\r\n  </div>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"gf-form-inline\" *ngIf=\"query.slimit\">\r\n  <div class=\"gf-form\">\r\n    <label class=\"gf-form-label query-keyword width-7\">SLIMIT</label>\r\n    <input type=\"text\" class=\"gf-form-input width-9\" [(ngModel)]=\"slimit\"\r\n      spellcheck='false' placeholder=\"No Limit\" (change)=\"needRebuild()\">\r\n  </div>\r\n\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"gf-form-inline\">\r\n  <div class=\"gf-form max-width-30\">\r\n    <label class=\"gf-form-label query-keyword width-7\">ALIAS BY</label>\r\n    <input type=\"text\" class=\"gf-form-input\" [(ngModel)]=\"query.alias\" spellcheck='false'\r\n      placeholder=\"Naming pattern\">\r\n  </div>\r\n  <div class=\"gf-form gf-form--grow\">\r\n    <div class=\"gf-form-label gf-form-label--grow\"></div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN } from 'common';\r\nimport { BaseQueryComponent } from '../query-base';\r\nimport * as _ from 'lodash';\r\nimport { GroupByFillOptions, GroupByObject, \r\n  GroupByOption, GroupByTimeOptions, MetricVars, OrderByTime } from '../../../metrics.m';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'group-by-editor',\r\n  templateUrl: './group-by.html'\r\n})\r\nexport class GroupByEditorComponent extends BaseQueryComponent  {\r\n\r\n  availableCommands : Array<GroupByCommand>;\r\n  selectedCommands : Array<GroupByCommand>;\r\n  OrderByTimeRef = OrderByTime;\r\n\r\n  get limit() : number {\r\n\t\treturn this.query.limit;\r\n\t}\r\n\r\n\tset limit( l: number ){\r\n    this.query.limit = l;\r\n    \r\n    if( !l ){\r\n      this.needRebuild();\r\n    }\r\n  }\r\n  \r\n  get slimit() : number {\r\n\t\treturn this.query.slimit;\r\n\t}\r\n\r\n\tset slimit( l: number ){\r\n    this.query.slimit = l;\r\n    \r\n    if( !l ){\r\n      this.needRebuild();\r\n    }\r\n\t}\r\n\r\n\tget time() {\r\n\t\treturn this.groupBy.find( x => x.type == GroupByOption.Time );\r\n\t}\r\n\r\n\tget timeValue() {\r\n\t\treturn this.time.params[ 0 ];\r\n  }\r\n  \r\n  set timeValue( v: string ){\r\n    if( v == this.REMOVE ){\r\n      const index = this\r\n        .groupBy\r\n        .findIndex( x=> x.type == GroupByOption.Time );\r\n\r\n      if( -1 !== index ){\r\n        this.groupBy.splice( index, 1 );\r\n      }\r\n\t\t} else{\r\n\t\t\tthis.time.params = [ v ];\r\n    }\r\n    \r\n    this.needRebuild();\r\n  }\r\n\r\n\tget tags() {\r\n\t\treturn this.query.groupBy.filter( x => x.type == GroupByOption.Tag );\r\n\t}\r\n\r\n\tget fill() {\r\n\t\treturn this.groupBy.find( x => x.type == GroupByOption.Fill );\r\n\t}\r\n\r\n\tget fillValue() {\r\n\t\treturn this.fill.params[ 0 ];\r\n\t}\r\n\r\n\tset fillValue( v: string ){\r\n    if( v == this.REMOVE ){\r\n      const index = this\r\n        .groupBy\r\n        .findIndex( x=> x.type == GroupByOption.Fill );\r\n\r\n      if( -1 !== index ){\r\n        this.groupBy.splice( index, 1 );\r\n      }\r\n\t\t} else{\r\n\t\t\tthis.fill.params = [ v ];\r\n    }\r\n    \r\n    this.needRebuild();\r\n  }\r\n  \t\r\n  get timeOptions$() {\r\n    return of( [this.REMOVE, ...Object.values(GroupByTimeOptions)] );\r\n\t}\r\n\r\n\tget fillOptions$(){\r\n\t\treturn of( [this.REMOVE, ...Object.values(GroupByFillOptions)] );\r\n  }\r\n  \r\n  get groupByOptions$(){\r\n\t\tvar options = [];\r\n\r\n\t\tif( !this.fill ){\r\n\t\t\toptions.push( this.availableCommands[ 0 ].text );\r\n\t\t}\r\n\r\n\t\tif( !this.time ){\r\n\t\t\toptions.push( this.availableCommands[ 1 ].text );\r\n\t\t}\r\n\r\n\t\tif( !this.query.limit ){\r\n\t\t\toptions.push( this.availableCommands[ 2 ].text );\r\n\t\t}\r\n\r\n\t\tif( !this.query.slimit ){\r\n\t\t\toptions.push( this.availableCommands[ 3 ].text );\r\n\t\t}\r\n\r\n\t\tif( this.query.order != OrderByTime.Desc ){\r\n\t\t\toptions.push( this.availableCommands[ 4 ].text );\r\n\t\t}\r\n\r\n\t\tconst q = (this.query.measurement) ?\r\n\t\t\t`SHOW TAG KEYS from ${this.query.measurement}` :\r\n\t\t\t`SHOW TAG KEYS`;\r\n\r\n\t\treturn this\r\n\t\t\t.proxy(q)\r\n\t\t\t.pipe(\r\n\t\t\t\tmap(x => {\r\n\t\t\t\t\tconst tags = (!x.length) ?\r\n\t\t\t\t\t\t[] : x[0].values.reduce((acc, value) => acc.concat(value), []);\r\n\r\n\t\t\t\t\tthis.availableCommands = this\r\n\t\t\t\t\t\t.availableCommands\r\n\t\t\t\t\t\t.filter( x => x.type != GroupByCommandType.Tag )\r\n\t\t\t\t\t\t\r\n\t\t\t\t\ttags.forEach( e => this.availableCommands.push( \r\n\t\t\t\t\t\tnew GroupByCommand( GroupByCommandType.Tag, `tag(${e})`, e )));\r\n\r\n\t\t\t\t\tconst tagCommands = this\r\n\t\t\t\t\t\t.availableCommands\r\n\t\t\t\t\t\t.filter( c => c.type == GroupByCommandType.Tag )\r\n\t\t\t\t\t\t.filter( c => !this.query.groupBy.find( x =>\r\n\t\t\t\t\t\t\tx.type == GroupByCommandType.Tag &&\tx.params[ 0 ] == c.value ) )\r\n\t\t\t\t\t\t.map( c => c.text )\r\n\r\n\t\t\t\t\treturn [ ...options, ...tagCommands\t];\r\n\t\t\t\t}))\r\n\r\n\t}\r\n\r\n\r\n  constructor( \r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService ){\r\n      super( panel, dsService );\r\n\r\n      this.selectedCommands = [];\r\n\r\n      this.availableCommands = [\r\n        new GroupByCommand( GroupByCommandType.Fill, \"fill(null)\", \"null\" ),\r\n        new GroupByCommand( GroupByCommandType.Time, \"time($interval)\", MetricVars.TIME_INTERVAL ),\r\n        new GroupByCommand( GroupByCommandType.Limit, \"LIMIT\", 10 ),\r\n        new GroupByCommand( GroupByCommandType.SLimit, \"SLIMIT\", 10 ),\r\n\t\t\t\tnew GroupByCommand( GroupByCommandType.OrderBy, \"ORDER BY time DESC\" )]\r\n\t}\r\n  \r\n\tonOptionPick( e: string ){\r\n    var command = this\r\n      .availableCommands\r\n      .find( x => x.text == e );\r\n\r\n    if( !command ){\r\n      return \r\n    }\r\n\r\n    this.selectedCommands.push( command );\r\n    \r\n\t\tswitch( command.type ){\r\n      case GroupByCommandType.Time:\r\n\t\t\t\tthis.groupBy.push( new GroupByObject( GroupByOption.Time, [command.value] ) );\r\n        break;\r\n        \r\n\t\t\tcase GroupByCommandType.Fill:\r\n\t\t\t\tthis.groupBy.push( new GroupByObject( GroupByOption.Fill, [command.value] ) );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase GroupByCommandType.Limit:\r\n\t\t\t\tthis.query.limit = command.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase GroupByCommandType.SLimit:\r\n\t\t\t\tthis.query.slimit = command.value;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase GroupByCommandType.OrderBy:\r\n\t\t\t\tthis.query.order = OrderByTime.Desc;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase GroupByCommandType.Tag:\r\n\t\t\t\tthis.groupBy.push( new GroupByObject( GroupByOption.Tag, [command.value] ) );\r\n\t\t\t\tbreak;\r\n    }\r\n    \r\n    this.needRebuild()\r\n  }\r\n\r\n  onRemoveTag( t: string ){\r\n    this.query.groupBy = this\r\n      .groupBy\r\n      .filter( x => !( x.type == GroupByOption.Tag && x.params[ 0 ] == t ) );\r\n\r\n    this.needRebuild();\r\n\t}\r\n}\r\n\r\nclass GroupByCommand{\r\n\tconstructor( \r\n\t\tpublic type:GroupByCommandType,\r\n\t\tpublic text: string,\r\n\t\tpublic value: any = undefined ){\r\n\r\n\t}\r\n}\r\n\r\nenum GroupByCommandType{\r\n\tFill,\r\n\tTime,\r\n\tTag,\r\n\tLimit,\r\n\tSLimit,\r\n\tOrderBy\r\n}","<div class=\"gf-form-query\" [ngClass]=\"{'gf-form-disabled': query.hidden}\" >\r\n\t<div class=\"gf-form gf-form-query-letter-cell \" (click)=\"opened=!opened\"> \r\n\t\t<label class=\"gf-form-label\"  >\r\n\t\t\t<a class=\"pointer\" tabindex=\"1\" >\r\n        <span  ng-class=\"{muted: !ctrl.canCollapse}\" class=\"gf-form-query-letter-cell-carret\">\r\n          <i class=\"fa fa-caret-down\" *ngIf=\"opened\"></i>\r\n          <i class=\"fa fa-caret-right\" *ngIf=\"!opened\"></i>\r\n        </span>\r\n        <span class=\"gf-form-query-letter-cell-letter\">{{query.refId}}</span>\r\n        \r\n      </a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t\r\n\t<div class=\"gf-form-query-content gf-form-query-content--collapsed mr-1\" *ngIf=\"!opened\">\r\n\t\t<div class=\"gf-form\">\r\n\t\t\t<label class=\"gf-form-label pointer gf-form-label--grow\" (click)=\"opened=!opened\">\r\n\t\t\t\t{{queryAsString}}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-query-content\" *ngIf=\"opened\">\r\n\r\n\t\t<ng-container *ngIf=\"!rawMode; else rawEditor\">\r\n\t\t\t<measurement-editor [query]=\"query\" (rebuild)=\"build()\"></measurement-editor>\r\n\r\n\t\t\t<fields-editor [query]=\"query\" (rebuild)=\"build()\"></fields-editor>\r\n\t\r\n\t\t\t<group-by-editor [query]=\"query\" (rebuild)=\"build()\"></group-by-editor>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-template #rawEditor>\r\n\t\t\t<div class=\"gf-form\">\r\n\t\t\t\t<textarea rows=\"3\" class=\"gf-form-input\" [(ngModel)]=\"queryAsString\"\r\n\t\t\t\t\tspellcheck=\"false\" placeholder=\"InfluxDB Query\"\r\n\t\t\t\t\tng-model-onblur ng-change=\"ctrl.refresh()\">\r\n\t\t\t\t</textarea>\r\n\t\t\t</div>\r\n\t\t</ng-template>\r\n\r\n\t</div>\r\n\r\n\t<div class=\"gf-form ed\">\r\n\t\t<label class=\"gf-form-label\" (click)=\"cm.show( $event )\">\r\n\t\t\t<a class=\"pointer dropdown-toggle\" data-toggle=\"dropdown\" tabindex=\"1\">\r\n\t\t\t\t<i class=\"fa fa-bars\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n    <label class=\"gf-form-label\" (click)=\"query.hidden=!query.hidden; needRebuild()\">\r\n\t\t\t<a ng-click=\"ctrl.toggleHideQuery()\" role=\"menuitem\">\r\n\t\t\t\t<i class=\"fa fa-eye\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t\t<label class=\"gf-form-label\">\r\n\t\t\t<a class=\"pointer\" tabindex=\"1\" (click)=\"remove.emit();\">\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<ed-context-menu #cm [items]=\"contextMenuItems\">\r\n</ed-context-menu>","import { Component, EventEmitter, Inject, Output } from '@angular/core';\r\nimport { DataSourceService, Panel, PANEL_TOKEN, TimeRangeStore  } from 'common';\r\nimport { BaseQueryComponent } from './query-base';\r\n\r\n@Component({\r\n  selector: 'query-editor',\r\n  templateUrl: './query.html'\r\n})\r\nexport class QueryEditorComponent extends BaseQueryComponent {\r\n\r\n  contextMenuItems = [];\r\n\r\n  opened: boolean = true;\r\n  rawMode: boolean = false;\r\n\r\n  @Output() remove = new EventEmitter();\r\n  @Output() moveUp = new EventEmitter();\r\n  @Output() moveDown = new EventEmitter();\r\n  @Output() duplicate = new EventEmitter();\r\n  \r\n\r\n  constructor(\r\n    @Inject( PANEL_TOKEN ) panel: Panel,\r\n    public dsService: DataSourceService,\r\n    public time :TimeRangeStore ){\r\n      super( panel, dsService );\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.contextMenuItems = [\r\n      {\r\n        label: 'Toggle edit mode',\r\n        command: _ => this.rawMode = !this.rawMode\r\n      },\r\n\r\n      {\r\n        label: 'Duplicate',\r\n        command: _ => this.duplicate.emit()\r\n      },\r\n\r\n      {\r\n        label: 'Move up',\r\n        command: _ => this.moveUp.emit()\r\n      },\r\n\r\n      {\r\n        label: 'Move down',\r\n        command: _ => this.moveDown.emit()\r\n      },\r\n    ]\r\n\r\n    this.build( false );\r\n  }\r\n\r\n  \r\n\r\n  onRebuild(){\r\n    this.rebuild.emit();\r\n  }\r\n}","<query-editor *ngFor=\"let t of metrics.targets\"\r\n  [query]=\"t\"\r\n  (remove)=\"onRemove(t)\"\r\n  (duplicate)=\"onDuplicate(t)\"\r\n  (moveUp)=\"onMoveUp(t)\"\r\n  (moveDown)=\"onMoveDown(t)\"\r\n  (rebuild)=\"rebuild()\">\r\n</query-editor>\r\n\r\n<div class=\"gf-form-query\">\r\n  <div class=\"gf-form gf-form-query-letter-cell\">\r\n    <label class=\"gf-form-label\">\r\n      <span class=\"gf-form-query-letter-cell-carret\">\r\n        <i class=\"fa fa-caret-down\"></i>\r\n      </span>\r\n      <span class=\"gf-form-query-letter-cell-letter\">{{nextRefId}}</span>\r\n    </label>\r\n    <button class=\"btn btn-secondary gf-form-btn\" (click)=\"onAddQuery()\" >\r\n      Add Query\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Panel, PANEL_TOKEN, TimeRangeStore } from 'common';\r\nimport { InfluxQuery, GroupByObject, GroupByOption, MetricVars } from '../metrics.m';\r\n\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'metrics-designer',\r\n  templateUrl: `./designer.html`\r\n})\r\nexport class InfluxMetricsDesignerComponent {\r\n\r\n  get metrics():any{\r\n    return this\r\n      .panel\r\n      .widget\r\n      .metrics;\r\n  }\r\n\r\n  get targets(): InfluxQuery[] {\r\n    return this.metrics.targets;\r\n  }\r\n\r\n  get nextRefId(){\r\n    let index = 0;\r\n\r\n    while( true ){\r\n      let candidate = String\r\n        .fromCharCode(65 + index++)\r\n        .toUpperCase();\r\n\r\n      let p = Math.round( index / 25 );\r\n\r\n      if( p > 0 ){\r\n        candidate += p;\r\n      }\r\n\r\n      let duplicate = this.targets.find( x => candidate == x.refId );\r\n\r\n      if( !duplicate ){\r\n        return candidate;\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    @Inject( PANEL_TOKEN ) public panel: Panel,\r\n    private time: TimeRangeStore){\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n    if( !this.targets?.length ){\r\n      this.onAddQuery();\r\n    }\r\n  }\r\n\r\n  onAddQuery(){\r\n    const q = new InfluxQuery();\r\n    q.refId = this.nextRefId;\r\n    q.groupBy.push( new GroupByObject( GroupByOption.Time, [MetricVars.TIME_INTERVAL] ) );\r\n\r\n    this.targets.push( q );\r\n  }\r\n\r\n  onRemove( t: InfluxQuery,  ){\r\n    const index = this.targets.indexOf( t );\r\n\r\n    if( -1 !== index ){\r\n      this.targets.splice( index, 1 );\r\n      this.rebuild();\r\n    }\r\n  }\r\n\r\n  onDuplicate( t: InfluxQuery ){\r\n    const copy = _.cloneDeep( t )\r\n    copy.refId = this.nextRefId;\r\n    this.targets.push( copy );\r\n  }\r\n\r\n  onMoveUp( t: InfluxQuery ){\r\n    const index = this.targets.indexOf( t );\r\n\r\n    if( index <= 0 ){\r\n      return;\r\n    }\r\n    \r\n\t\tthis.targets.splice( index, 1);\r\n\t\tthis.targets.splice( index - 1, 0, t )\r\n  }\r\n\r\n  onMoveDown( t: InfluxQuery ){\r\n    const index = this.targets.indexOf( t );\r\n\r\n    if( -1 == index || index == this.targets.length - 1 ){\r\n      return;\r\n    }\r\n\r\n    this.targets.splice( index, 1);\r\n\t\tthis.targets.splice( index + 1, 0, t )\r\n  }\r\n\r\n  rebuild(){\r\n    this.time.tick();\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { InfluxSettingsEditorComponent } from './settings/settings';\n\n\nimport { EdCommonModule } from 'common';\nimport { EdUilibModule } from 'uilib';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { InfluxMetricsBuilder } from './metrics/builder';\nimport { InfluxMetricsDesignerComponent } from './metrics/designer/designer';\nimport { QueryEditorComponent } from './metrics/designer/query/query';\nimport { MeasurementEditorComponent } from './metrics/designer/query/measurement/measurement';\nimport { FieldsEditorComponent } from './metrics/designer/query/fields/fields';\nimport { FieldEditorComponent } from './metrics/designer/query/fields/field';\nimport { FieldFunctionEditorComponent } from './metrics/designer/query/fields/func/editor/func-editor';\nimport { FieldFunctionPickerComponent } from './metrics/designer/query/fields/func/picker/func-picker';\nimport { GroupByEditorComponent } from './metrics/designer/query/group-by/group-by';\nimport { GroupByTagLabelComponent } from './metrics/designer/query/group-by/tag-label.c';\n\n@NgModule({\n  declarations: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n\n    InfluxMetricsDesignerComponent,\n    QueryEditorComponent,\n    MeasurementEditorComponent,\n    FieldsEditorComponent,\n    FieldEditorComponent,\n    FieldFunctionEditorComponent,\n    FieldFunctionPickerComponent,\n\n    GroupByEditorComponent,\n    GroupByTagLabelComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    EdCommonModule,\n    EdUilibModule\n  ],\n  exports: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n    InfluxMetricsDesignerComponent\n  ]\n})\nexport class InfluxModule { }\n"]}