{"version":3,"file":"influx.js","sources":["../../../../app/plugins/datasources/influx/src/settings/settings.html","../../../../app/plugins/datasources/influx/src/settings/settings.ts","../../../../app/plugins/datasources/influx/src/metrics/metrics.m.ts","../../../../app/plugins/datasources/influx/src/metrics/builder.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query-base.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/measurement/measurement.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/measurement/measurement.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query.html","../../../../app/plugins/datasources/influx/src/metrics/designer/query/query.ts","../../../../app/plugins/datasources/influx/src/metrics/designer/designer.html","../../../../app/plugins/datasources/influx/src/metrics/designer/designer.ts","../../../../app/plugins/datasources/influx/src/influx.mod.ts","../../../../app/plugins/datasources/influx/src/public-api.ts","../../../../app/plugins/datasources/influx/src/influx.ts"],"sourcesContent":["<div [formGroup]=\"form\">\r\n\r\n\t<h3 class=\"page-heading\">HTTP</h3>\t\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"URL\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\thint=\"Specify a complete HTTP URL (for example http://your_server:8080)\"\r\n\t\t\tformControlName=\"url\"\t>\r\n\t\t\t<ng-template edValidationTemplate *ngIf=\"url.hasError( 'required' ) && url.touched\">\r\n\t\t\t\tplease enter url\r\n\t\t\t</ng-template>\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox\r\n\t\t\tlabel=\"Whitelisted Cookies\"\r\n\t\t\tlabelWidth=\"10\"\r\n\t\t\tformControlName=\"whitelistedCookies\"\t>\r\n\t\t</ed-textbox>\r\n\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">Auth</h3>\r\n\t<div class=\"gf-form-group\">\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Basic Auth\"\r\n\t\t\t\tformControlName=\"basicAuthentication\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With Credentials\"\r\n\t\t\t\thint=\"Whether credentials such as cookies or auth headers should be sent with cross-site requests.\"\r\n\t\t\t\tformControlName=\"withCredentials\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"TLS Client Auth\"\r\n\t\t\t\tformControlName=\"tlsClientAuth\">\r\n\t\t\t</ed-checkbox>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"With CA Cert\"\r\n\t\t\t\thint=\"Needed for verifing self-signed TLS Certs\"\r\n\t\t\t\tformControlName=\"withCaCert\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"10\"\r\n\t\t\t\tlabel=\"Skip TLS Verify\"\r\n\t\t\t\tformControlName=\"skipTlsVerification\">\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n\t<h3 class=\"page-heading\">InfluxDB Details</h3>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Database'\"\r\n\t\t\t[labelWidth]=\"10\"\r\n\t\t\tformControlName=\"database\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'User'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\tformControlName=\"user\">\r\n\t\t\t</ed-textbox>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\t[label]=\"'Password'\"\r\n\t\t\t\t[labelWidth]=\"10\"\r\n\t\t\t\t[width]=\"5\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tformControlName=\"password\">\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-info-box>\r\n\t\t\t<h5>Database Access</h5>\r\n\t\t\t<p>\r\n\t\t\t\tSetting the database for this datasource does not deny access to other databases.  The InfluxDB query syntax allows\r\n\t\t\t\tswitching the database in the query.  For example:\r\n\t\t\t\t<code>SHOW MEASUREMENTS ON _internal</code> or <code>SELECT * FROM \"_internal\"..\"database\" LIMIT 10</code>\r\n\t\t\t\t<br/><br/>\r\n\t\t\t\tTo support data isolation and security, make sure appropriate permissions are configured in InfluxDB.\r\n\t\t\t</p>\r\n\t\t</ed-info-box>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-group\">\r\n\t\t<ed-textbox \r\n\t\t\t[label]=\"'Min time interval'\"\r\n\t\t\t[labelWidth]=\"11\"\r\n\t\t\t[width]=\"5\"\r\n\t\t\t[placeholder]=\"'10s'\"\r\n\t\t\thint=\"'A lower limit for the auto group by time interval. Recommended to be set to write frequency,\r\n\t\t\t\tfor example 1m if your data is written every minute.'\"\r\n\t\t\ttype=\"password\"\r\n\t\t\tformControlName=\"minTimeInterval\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t\r\n</div>","import { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { IDataSourceSettingsEditor } from 'common';\r\n\r\n@Component({\r\n  selector: 'ds-settings-editor',\r\n  templateUrl: './settings.html'\r\n})\r\nexport class InfluxSettingsEditorComponent implements IDataSourceSettingsEditor {\r\n\tform: FormGroup;\r\n\r\n\tget url(){\r\n\t\treturn this.form.get('url');\r\n\t}\r\n\t\r\n\tconstructor(){\r\n\t\tthis.form = new FormGroup({\r\n\t\t\t'url': new FormControl( null, Validators.required ),\r\n\t\t\t'whitelistedCookies': new FormControl( null ),\r\n\r\n\t\t\t'basicAuthentication': new FormControl( false ),\r\n\t\t\t'withCredentials': new FormControl( false ),\r\n\t\t\t'tlsClientAuth': new FormControl( false ),\r\n\t\t\t'withCaCert': new FormControl( false ),\r\n\t\t\t'skipTlsVerification': new FormControl( false ),\r\n\t\t\t\r\n\t\t\t'database': new FormControl( null, Validators.required ),\r\n\t\t\t'user': new FormControl( null ),\r\n\t\t\t'password': new FormControl( null ),\r\n\t\t\t'minTimeInterval': new FormControl( null )\r\n\t\t});\r\n\t}\r\n}","export class InfluxQuery {\n  measurement: string = '';\n  policy: string = '';\n  refId: string = '';\n  tags = new Array<Tag>();\n\tfields = new Array<Field>();\n\t\n\tlimit: number = undefined;\n\tslimit: number = undefined;\n\n\t// order = OrderByTime.Asc;\n\t// alias: string =  '';\n\n\t// groupBy = new Array<GroupByObject>();\n\n  // virgin: boolean = false;\n}\n\nexport interface Field {\n  key: string;\n  functions: FuncObject[];\n}\n\nexport interface FuncObject {\n  name: string;\n  param: any;\n}\n\nexport enum AggrFunc {\n  Count = 'count',\n  Distinct = 'distinct',\n  Integral = 'integral',\n  Mean = 'mean',\n  Median = 'median',\n  Mode = 'mode',\n  Sum = 'sum',\n\n  Bottom = 'bottom',\n  First = 'first',\n  Last = 'last',\n  Max = 'max',\n  Min = 'min',\n  Percentile = 'percentile',\n  Top = 'top',\n\n  Derivative = 'derivative',\n  Spread = 'spread',\n  NonNegativeDerivative = 'non_negative_derivative',\n  Difference = 'difference',\n  NonNegativeDifference = 'non_negative_difference',\n  MovingAverage = 'moving_average',\n  CumulativeSum = 'cumulative_sum',\n  Stddev = 'stddev',\n  Elapsed = 'elapsed',\n\n  HoltWinters = 'holt_winters',\n  HoltWintersWithFit = 'holt_winters_with_fit',\n\n  Math = 'math',\n  Alias = 'alias',\n}\n\nexport enum AggrFuncGroup {\n  Aggregations,\n  Selectors,\n  Transformations,\n  Predictors,\n  Math,\n  Alias\n}\n\n\nexport class AggrFuncHelper {\n  static getGroup(f: AggrFunc|string) {\n    switch (f) {\n      case AggrFunc.Count:\n      case AggrFunc.Distinct:\n      case AggrFunc.Integral:\n      case AggrFunc.Mean:\n      case AggrFunc.Median:\n      case AggrFunc.Mode:\n      case AggrFunc.Sum:\n        return AggrFuncGroup.Aggregations;\n\n      case AggrFunc.Bottom:\n      case AggrFunc.First:\n      case AggrFunc.Last:\n      case AggrFunc.Max:\n      case AggrFunc.Min:\n      case AggrFunc.Percentile:\n      case AggrFunc.Top:\n        return AggrFuncGroup.Selectors;\n\n      case AggrFunc.Derivative:\n      case AggrFunc.Spread:\n      case AggrFunc.NonNegativeDerivative:\n      case AggrFunc.Difference:\n      case AggrFunc.NonNegativeDifference:\n      case AggrFunc.MovingAverage:\n      case AggrFunc.CumulativeSum:\n      case AggrFunc.Stddev:\n      case AggrFunc.Elapsed:\n        return AggrFuncGroup.Transformations;\n\n      case AggrFunc.HoltWinters:\n      case AggrFunc.HoltWintersWithFit:\n        return AggrFuncGroup.Predictors;\n\n      case AggrFunc.Math:\n        return AggrFuncGroup.Math;\n\n      case AggrFunc.Alias:\n        return AggrFuncGroup.Alias;\n\n    }\n  }\n}\n\nexport enum GroupByOption{\n\tTime,\n\tFill,\n\tTag\n}\n\nexport enum GroupByTimeOptions{\n  Dynamic = '$__interval',\n  S1 = '1s',\n  S10 = '10s',\n  M1 = '1m',\n  M5 = '5m',\n  M10 = '10m',\n  M15 = '15m',\n  H1 = '1h',\n}\n\nexport enum GroupByFillOptions{\n\tNone = 'none',\n\tNull = 'null',\n\tZero = '0',\n\tPrev = 'previous',\n\tLinear = 'linear'\n}\n\nexport enum OrderByTime{\n\tAsc,\n\tDesc\n}\n\nexport class MetricVars{\n\tstatic readonly TIME_FILTER = \"$timeFilter\";\n\tstatic readonly TIME_INTERVAL = \"$__interval\";\n}\n\nexport class Tag{\n  key: string = '';\n  value: string = '';\n  index: number = 0;\n  operator: TagOperator = TagOperator.Eq;\n  condition: TagCondition = TagCondition.And\n}\n\nexport enum TagOperator{\n  Eq = '=',\n  Neq = '<>',\n  Less = '<',\n  Greater = '>',\n  RegExEq = '=~',\n  RegExNeq = '!~'\n}\n\nexport enum TagCondition{\n  And = 'AND',\n  Or = 'OR'\n}\n\n\n","import { Component } from '@angular/core';\nimport { TimeRange, TimeRangeParser, TimeRangeStore, Timezone, MetricsBuilder } from 'common';\nimport { AggrFuncGroup, AggrFuncHelper,\n\tField, OrderByTime, GroupByOption, MetricVars } from './metrics.m';\nimport * as _ from 'lodash';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n\tselector: 'metrics-builder',\n\ttemplate: ''\n})\nexport class InfluxMetricsBuilder implements MetricsBuilder {\n\n\tconstructor( private time: TimeRangeStore ){\n\t\t\n\t}\n\n\tbuild( query: any, range?: TimeRange ) : Observable<string> {\n\t\t//console.log( query );\n\n\t\tconst array = [];\n\n\t\tquery\n\t\t\t.targets\n\t\t\t.forEach(t => {\n\t\t\t\t// const modifiedRange = this\n\t\t\t\t// \t.timeManager\n\t\t\t\t// \t.getModifiedRange( this.widget.time )\n\n\t\t\t\tconst gen = new Builder( this.time, t, range );\n\n\t\t\t\tif (!gen.invalid && !t.virgin) {\n\t\t\t\t\tarray.push(gen.text);\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet request = array.join(';');\n\n\t\treturn of( request );\n\t}\n}\n\nclass Builder{\n\tget invalid(){\n    const invalidQuery = \n      (!this.target) ||\n      (!this.target.fields || 0 === this.target.fields.length );\n\n    return invalidQuery;\n\t}\n\t\n\tget text() {\n    return `SELECT ${this.getFieldsText()} FROM ${this.getMeasurementText()}`\n  }\n\n\tconstructor( \n\t\tprivate time: TimeRangeStore,\n\t\tprivate target: any,\n\t\tprivate range?: TimeRange ){\n\n\t}\n\n\tgetFieldsText() {\n\t\tlet result = '';\n\t\t\n    if (!this.target.fields) {\n      return result;\n    }\n\n    this.target.fields.forEach(x => {\n      if (result.length > 0) {\n        result += ', ';\n      }\n\n      result += this.getFieldText( x );\n    })\n\n    return result;\n\t}\n\t\n\t\n  getFieldText(field: Field) {\n\t\t let result = '';\n    let key = (!field.key) ? 'field' : field.key;\n\n    const aggr = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Aggregations ||\n      AggrFuncHelper.getGroup(x.name) == AggrFuncGroup.Selectors);\n\n    if (aggr) {\n      result += aggr.name + ((aggr.param && aggr.param.value) ?\n        `(\"${key}\", ${aggr.param.value})` : `(\"${key}\")`);\n    } else {\n      result = `\"${key}\"`;\n    }\n\n    const trans = field.functions.filter(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Transformations);\n\n    trans.forEach(x => {\n      const p = (x.param && x.param.value) ? `, ${x.param.value}` : ``;\n      result = `${x.name}(${result}${p})`;\n    })\n\n    const math = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Math);\n\n    if (math) {\n      result = `${result} ${math.param.value}`;\n    }\n\n    const alias = field.functions.find(x =>\n      AggrFuncHelper.getGroup(x.name) === AggrFuncGroup.Alias);\n\n    if (alias) {\n      result = `${result} AS \"${alias.param.value}\"`;\n    }\n\n\t\treturn result;\n\t}\n\t\n  getMeasurementText() {\n    const meas = (!this.target.measurement) ? 'measurement' : this.target.measurement;\n\n    let rp = (this.target.policy && this.target.policy.length > 0 && this.target.policy !== 'default') ?\n      `\"${this.target.policy}\".` : '';\n\n    let root = `${rp}\"${meas}\"`;\n    let cond = '';\n\n    let tagIndex = 0;\n\n    if (this.target.tags) {\n      this\n        .target\n        .tags\n        .filter(x => x.key && x.value)\n        .forEach(x => {\n          if (tagIndex > 0) {\n            cond += ` ${x.condition} `;\n          }\n\n          cond += ` \"${x.key}\" ${x.operator} '${x.value}'`;\n          ++tagIndex;\n        });\n    }\n\n    const timeFilter = ( this.range ) ?\n      this.getTimeFilter() : MetricVars.TIME_FILTER;\n\n    if (cond.length > 0) {\n      root = `${root} WHERE (${cond}) and ${timeFilter}`\n    }\n    else{\n      // TODO\n      root = `${root} WHERE ${timeFilter}`\n\t\t}\n\n\t\tconst groupBy = this.target.groupBy;\n\t\tconst groupByTime = groupBy.find( x => x.type == GroupByOption.Time );\n\t\tconst groupByFill = groupBy.find( x => x.type == GroupByOption.Fill );\n\t\tconst groupByTag = groupBy.filter( x => x.type == GroupByOption.Tag );\n\n\t\tif( groupByTime ){\n      const gb = ( this.range ) ? this.getOptimalAutoGroupBy() : groupByTime.params[ 0 ];\n\t\t\troot = `${root} GROUP BY time(${gb})`\n\t\t}\n\n\t\tif( groupByTag.length > 0 ){\n\t\t\troot = ( !groupByTime ) ? `${root} GROUP BY` : `${root},`; \n\n\t\t\tgroupByTag.forEach( (e,index) => {\n\t\t\t\troot = `${root}${index >0 ? ', ' : ' '} \"${e.params[ 0 ]}\"`\n\t\t\t} )\n\t\t}\n\t\t\n\t\tif( groupByFill ){\n\t\t\troot = `${root} FILL(${groupByFill.params[ 0 ]})`\n\t\t}\n\n\t\tif( this.target.order != OrderByTime.Asc ){\n\t\t\troot = `${root} ORDER BY time DESC`; \n\t\t}\n\t\t\n\t\tif( this.target.limit > 0 ){\n\t\t\troot = `${root} LIMIT ${this.target.limit}`;\n\t\t}\n\n\t\tif( this.target.slimit > 0 ){\n\t\t\troot = `${root} SLIMIT ${this.target.slimit}`;\n\t\t}\n\n    return root;\n\t}\n\t\n  getOptimalAutoGroupBy() : string {\n    const f = TimeRangeParser.toDateTime( this.range.from, false );\n    const t = TimeRangeParser.toDateTime( this.range.to, true );\n\n\t\tif (5 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"200ms\";\n\n\t\tif (15 > +t.diff( f, \"minutes\" ))\n\t\t\treturn \"1s\";\n\n\t\tif (30 > t.diff( f, \"minutes\" ))\n\t\t\treturn \"2s\";\n\n\t\tif (1 > t.diff( f, \"hours\" ))\n\t\t\treturn \"5s\";\t\t\n\n\t\tif (3 > t.diff( f, \"hours\" ))\n\t\t\treturn \"10s\";\t\t\n\n\t\tif (6 > t.diff( f, \"hours\" ))\n\t\t\treturn \"20s\";\t\t\n\n\t\tif (12 > t.diff( f, \"hours\" ))\n\t\t\treturn \"1m\";\t\t\n\n\t\tif (24 > t.diff( f, \"hours\" ))\n\t\t\treturn \"2m\";\t\t\n\n\t\tif (7 > t.diff( f, \"days\" ))\n\t\t\treturn \"10m\";\t\t\n\n\t\tif (31 > t.diff( f, \"days\" ))\n\t\t\treturn \"1h\";\t\t\n\n\t\tif (365 > t.diff( f, \"days\" ))\n\t\t\treturn \"12h\";\t\t\n\n\t\t return \"24h\";\n\t}\n\n  getTimeFilter() {\n    const range = this.range;\n    const tz = this.time.converter.timezone; //this.range.timezone;\n\n    let from = this.getInfluxTime( range.from, false, tz);\n    let to = this.getInfluxTime( range.to, true, tz);\n\n    const fromIsAbsolute = from[from.length - 1] === 'ms';\n\n    if (to === 'now()' && !fromIsAbsolute) {\n      return 'time >= ' + from;\n    }\n\n    return 'time >= ' + from + ' and time <= ' + to;\n\t}\n\t\n  getInfluxTime(date: any, roundUp: any, timezone: Timezone) {\n    if (_.isString(date)) {\n      if (date === 'now') {\n        return 'now()';\n      }\n\n      const parts = /^now-(\\d+)([dhms])$/.exec(date);\n\n      if (parts) {\n        const amount = parseInt(parts[1], 10);\n        const unit = parts[2];\n        return 'now() - ' + amount + unit;\n      }\n\n      date = TimeRangeParser.toDateTime(date, roundUp, timezone);\n    }\n\n    return date.valueOf() + 'ms';\n  }\n}","import { Component, Directive, Input } from '@angular/core';\r\n\r\nimport { InfluxQuery } from '../../metrics.m';\r\n\r\n@Directive()\r\nexport class BaseQueryComponent {\r\n\r\n  @Input() query : InfluxQuery;\r\n  \r\n  \r\n}","<div class=\"gf-form-inline\">\r\n\r\n\t<label class=\"gf-form gf-form-label query-keyword width-7\">FROM</label>\r\n\r\n\t<ed-autocomplete-picker \r\n\t\t[(ngModel)]='query.policy'\r\n\t\t[request]=\"showRetentionPolicies()\" >\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<ed-autocomplete-picker \r\n\t\tplaceholder=\"select measurement\"\r\n\t\t[(ngModel)]='query.measurement'\r\n\t\t[request]=\"showMeasurementsRequest()\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label query-keyword\">WHERE</label>\r\n\t</div>\r\n\r\n\t<ng-container *ngFor=\"let t of query.tags;let i = index\" >\r\n\r\n\t\t<ed-autocomplete-picker \r\n\t\t\t[hidden]=\"!(i > 0 && t.key)\"\r\n\t\t\t[(ngModel)]=\"t.condition\"\r\n\t\t\t[valueStyle]=\"{color: '#33b5e5 '}\"\r\n      [request]=\"andOrRequest()\" >\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t\t<ed-autocomplete-picker\r\n      placeholder=\"fa fa-plus\" \r\n      [(ngModel)]=\"t.key\"\r\n      [request]=\"showTagKeysRequest()\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t\t<ed-autocomplete-picker *ngIf=\"t.key\"\r\n\t\t\t[(ngModel)]=\"t.operator\"\r\n\t\t\t[valueStyle]=\"{color: '#eb7b18'}\"\r\n\t\t\t[request]=\"tagOperatorsRequest( t )\">\r\n\t\t</ed-autocomplete-picker>\r\n\r\n    <ed-autocomplete-picker *ngIf=\"t.key\"\r\n      [placeholder]=\"'select tag value'\" \r\n      [(ngModel)]='t.value'\r\n      [request]=\"showTagValuesRequest( t )\" >\r\n\t\t</ed-autocomplete-picker>\r\n\r\n\t</ng-container>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { DataSourceService } from 'common';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Tag, TagCondition, TagOperator } from '../../../metrics.m';\r\nimport { BaseQueryComponent } from '../query-base';\r\n\r\n@Component({\r\n  selector: 'measurement-editor',\r\n  templateUrl: './measurement.html'\r\n})\r\nexport class MeasurementEditorComponent extends BaseQueryComponent  {\r\n\r\n  readonly DEFAULT_POLICY = 'default';\r\n\r\n  constructor( private dsService: DataSourceService ){\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.resetTags();\r\n\r\n    if( !this.query.tags?.length ){\r\n      this.query.tags.push(new Tag());\r\n    }\r\n\r\n    if (!this.query.policy) {\r\n      this.query.policy = this.DEFAULT_POLICY;\r\n    }\r\n  }\r\n\r\n  showRetentionPolicies() {\r\n    return this\r\n      .dsService\r\n      .proxy( 1, `SHOW RETENTION POLICIES`)\r\n      .pipe(\r\n        map(x => ['default', ...x[0].values.map(y => y[0])]));\r\n  }\r\n\r\n  showMeasurementsRequest() {\r\n    return this\r\n      .dsService\r\n      .proxy( 1, `SHOW MEASUREMENTS`)\r\n      .pipe(\r\n        map(x => [...x[0].values].reduce((acc, value) => acc.concat(value), [])))\r\n  }\r\n\r\n  tagOperatorsRequest( tag:Tag ) {\r\n    const isRegexValue = this.isRegex( tag.value );\r\n    const allOperators = Object.values(TagOperator);\r\n\r\n    let result = isRegexValue ? allOperators.slice( 4, 6 ) : allOperators.slice( 0, 4 )\r\n\r\n    return of( result );\r\n  }\r\n\r\n  showTagValuesRequest(tag: Tag) {\r\n    const q = `SHOW TAG VALUES  WITH KEY=${tag.key}`;\r\n\r\n    return this\r\n      .dsService\r\n      .proxy(1, q)\r\n      .pipe(\r\n        map(x => x[0].values.map(y => y[1])));\r\n  }\r\n\r\n  showTagKeysRequest() {\r\n    const q = (this.query.measurement) ?\r\n      `SHOW TAG KEYS from ${this.query.measurement}` :\r\n      `SHOW TAG KEYS`;\r\n\r\n    return this\r\n      .dsService\r\n      .proxy(1, q)\r\n      .pipe(\r\n        map(x => [...x[0].values.reduce((acc, value) => acc.concat(value), []), '--remove--']))\r\n  }\r\n\r\n  isRegex(expr) {\r\n    let isValid = true;\r\n    try {\r\n      new RegExp(expr);\r\n\r\n      isValid = ( expr.startsWith( '/' ) && expr.endsWith( '/' )  )\r\n    } catch (e) {\r\n      isValid = false;\r\n    }\r\n\r\n    return isValid;\r\n  }\r\n\r\n  andOrRequest() {\r\n    return of(Object.values(TagCondition));\r\n  }\r\n}","<div class=\"gf-form-query\">\r\n\t<div class=\"gf-form gf-form-query-letter-cell \" (click)=\"opened=!opened\"> \r\n\t\t<label class=\"gf-form-label\"  >\r\n\t\t\t<a class=\"pointer\" tabindex=\"1\" >\r\n        <span  ng-class=\"{muted: !ctrl.canCollapse}\" class=\"gf-form-query-letter-cell-carret\">\r\n          <i class=\"fa fa-caret-down\" *ngIf=\"opened\"></i>\r\n          <i class=\"fa fa-caret-right\" *ngIf=\"!opened\"></i>\r\n        </span>\r\n        <span class=\"gf-form-query-letter-cell-letter\">{{query.refId}}</span>\r\n        \r\n      </a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t\r\n\t<div class=\"gf-form-query-content gf-form-query-content--collapsed mr-1\" *ngIf=\"!opened\">\r\n\t\t<div class=\"gf-form\">\r\n\t\t\t<label class=\"gf-form-label pointer gf-form-label--grow\" (click)=\"opened=!opened\">\r\n\t\t\t\tquery content will be here\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div ng-transclude class=\"gf-form-query-content\" *ngIf=\"opened\">\r\n\r\n\t\t<measurement-editor [query]=\"query\"></measurement-editor>\r\n\r\n\t</div>\r\n\r\n\t<div class=\"gf-form ed\">\r\n\t\t<label class=\"gf-form-label\" (click)=\"cm.show( $event )\">\r\n\t\t\t<a class=\"pointer dropdown-toggle\" data-toggle=\"dropdown\" tabindex=\"1\">\r\n\t\t\t\t<i class=\"fa fa-bars\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n    <label class=\"gf-form-label\">\r\n\t\t\t<a ng-click=\"ctrl.toggleHideQuery()\" role=\"menuitem\">\r\n\t\t\t\t<i class=\"fa fa-eye\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t\t<label class=\"gf-form-label\">\r\n\t\t\t<a class=\"pointer\" tabindex=\"1\" (click)=\"remove.emit()\">\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<ed-context-menu #cm [items]=\"contextMenuItems\">\r\n</ed-context-menu>","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { BaseQueryComponent } from './query-base';\r\n\r\n@Component({\r\n  selector: 'query-editor',\r\n  templateUrl: './query.html'\r\n})\r\nexport class QueryEditorComponent extends BaseQueryComponent {\r\n\r\n  contextMenuItems = [];\r\n\r\n  opened: boolean = true;\r\n  editMode: boolean = false;\r\n\r\n  @Output() remove = new EventEmitter();\r\n  @Output() moveUp = new EventEmitter();\r\n  @Output() moveDown = new EventEmitter();\r\n  @Output() duplicate = new EventEmitter();\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n  \r\n\r\n  ngOnInit(){\r\n    this.contextMenuItems = [\r\n      {\r\n        label: 'Toggle edit mode',\r\n        command: ( _ ) => this.editMode != this.editMode\r\n      },\r\n\r\n      {\r\n        label: 'Duplicate',\r\n        command: ( _ ) => this.duplicate.emit()\r\n      },\r\n\r\n      {\r\n        label: 'Move up',\r\n        command: ( _ ) => this.moveUp.emit()\r\n      },\r\n\r\n      {\r\n        label: 'Move down',\r\n        command: ( _ ) => this.moveDown.emit()\r\n      },\r\n    ]\r\n  }\r\n}","<query-editor *ngFor=\"let t of metrics.targets\"\r\n  [query]=\"t\"\r\n  (remove)=\"onRemove(t)\"\r\n  (duplicate)=\"onDuplicate(t)\"\r\n  (moveUp)=\"onMoveUp(t)\"\r\n  (moveDown)=\"onMoveDown(t)\">\r\n</query-editor>\r\n\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Panel, PANEL_TOKEN } from 'common';\r\nimport { InfluxQuery } from '../metrics.m';\r\n\r\n@Component({\r\n  selector: 'metrics-designer',\r\n  templateUrl: `./designer.html`\r\n})\r\nexport class InfluxMetricsDesignerComponent {\r\n\r\n  get metrics():any{\r\n    return this\r\n      .panel\r\n      .widget\r\n      .metrics;\r\n  }\r\n\r\n  constructor(@Inject( PANEL_TOKEN ) public panel: Panel){\r\n  }\r\n\r\n  onRemove( t: InfluxQuery ){\r\n    const index = this.metrics.targets.indexOf( t );\r\n\r\n    if( -1 !== index ){\r\n      this.metrics.targets.splice( index, 1 );\r\n    }\r\n  }\r\n\r\n  onMoveUp( t: InfluxQuery ){\r\n    console.log( 'onMoveUp' );\r\n  }\r\n\r\n  onMoveDown( t: InfluxQuery ){\r\n    console.log( 'onMoveDown' );\r\n  }\r\n\r\n  onDuplicate( t: InfluxQuery ){\r\n    console.log( 'duplicate' );\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { InfluxSettingsEditorComponent } from './settings/settings';\n\n\nimport { EdCommonModule } from 'common';\nimport { EdUilibModule } from 'uilib';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { InfluxMetricsBuilder } from './metrics/builder';\nimport { InfluxMetricsDesignerComponent } from './metrics/designer/designer';\nimport { QueryEditorComponent } from './metrics/designer/query/query';\nimport { MeasurementEditorComponent } from './metrics/designer/query/measurement/measurement';\n\n\n\n@NgModule({\n  declarations: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n\n    InfluxMetricsDesignerComponent,\n    QueryEditorComponent,\n    MeasurementEditorComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    EdCommonModule,\n    EdUilibModule\n  ],\n  exports: [\n    InfluxSettingsEditorComponent,\n    InfluxMetricsBuilder,\n    InfluxMetricsDesignerComponent\n  ]\n})\nexport class InfluxModule { }\n","/*\n * Public API Surface of influx\n */\n\nexport * from './influx.mod';\n\nexport * from './settings/settings';\nexport * from './metrics/builder';\nexport * from './metrics/designer/designer';\nexport * from './metrics/metrics.m';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵtext","i0.ɵɵtemplate","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵadvance","_.isString","i0.ɵɵlistener","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate"],"mappings":"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"}