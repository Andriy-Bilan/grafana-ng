{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","../../../../app/plugins/widgets/chart/src/base/chart-base-editor.ts","../../../../app/plugins/widgets/chart/src/chart.m.ts","../../../../app/plugins/widgets/chart/src/view/helpers/unit-helper.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/units.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/y-axis.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/y-axis.html","../../../../app/plugins/widgets/chart/src/edit/axes/x-axis/x-axis.ts","../../../../app/plugins/widgets/chart/src/edit/axes/x-axis/x-axis.html","../../../../app/plugins/widgets/chart/src/edit/axes/axes.ts","../../../../app/plugins/widgets/chart/src/edit/legend/legend.ts","../../../../app/plugins/widgets/chart/src/edit/legend/legend.html","../../../../app/plugins/widgets/chart/src/edit/display/draw-options/options.ts","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/override.html","../../../../app/plugins/widgets/chart/src/edit/display/draw-options/options.html","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/override.ts","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/overrides.ts","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/threshold.html","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/threshold.ts","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/thresholds.ts","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-region.html","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-region.ts","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-regions.ts","../../../../app/plugins/widgets/chart/src/edit/display/display.html","../../../../app/plugins/widgets/chart/src/edit/display/display.ts","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/query/param/param.html","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/query/param/param.ts","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/query/query.ts","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/cond.html","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/query/query.html","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/cond.ts","../../../../app/plugins/widgets/chart/src/edit/alert/config/alert-config.html","../../../../app/plugins/widgets/chart/src/edit/alert/config/alert-config.ts","../../../../app/plugins/widgets/chart/src/edit/alert/notifications/alert-nots.ts","../../../../app/plugins/widgets/chart/src/edit/alert/notifications/alert-nots.html","../../../../app/plugins/widgets/chart/src/edit/alert/history/alert-history.ts","../../../../app/plugins/widgets/chart/src/edit/alert/alert.html","../../../../app/plugins/widgets/chart/src/edit/alert/history/alert-history.html","../../../../app/plugins/widgets/chart/src/edit/alert/alert.ts","../../../../app/plugins/widgets/chart/src/edit/time/time.ts","../../../../app/plugins/widgets/chart/src/edit/editor.html","../../../../app/plugins/widgets/chart/src/edit/time/time.html","../../../../app/plugins/widgets/chart/src/edit/editor.ts","../../../../app/plugins/widgets/chart/src/view/drawers/tooltip.ts","../../../../app/plugins/widgets/chart/src/view/options-provider.ts","../../../../app/plugins/widgets/chart/src/view/display-manager.ts","../../../../app/plugins/widgets/chart/src/data/data-converter.ts","../../../../app/plugins/widgets/chart/src/data/data-provider.ts","../../../../app/plugins/widgets/chart/src/base/chart.store.ts","../../../../app/plugins/widgets/chart/src/base/chart-base.ts","../../../../app/plugins/widgets/chart/src/base/chart-base-extension.ts","../../../../app/plugins/widgets/chart/src/view/drawers/thresholds.ts","../../../../app/plugins/widgets/chart/src/view/drawers/trackball.ts","../../../../app/plugins/widgets/chart/src/view/helpers/pixel-helper.ts","../../../../app/plugins/widgets/chart/src/view/drawers/time-regions.ts","../../../../app/plugins/widgets/chart/src/view/drawers/alert.ts","../../../../app/plugins/widgets/chart/src/view/drawers/extensions-manager.ts","../../../../app/plugins/widgets/chart/src/chart.html","../../../../app/plugins/widgets/chart/src/chart.c.ts","../../../../app/plugins/widgets/chart/src/edit/alert/handle/handle.html","../../../../app/plugins/widgets/chart/src/edit/alert/handle/handle.ts","../../../../app/plugins/widgets/chart/src/view/legend/legend.html","../../../../app/plugins/widgets/chart/src/view/legend/legend.ts","../../../../app/plugins/widgets/chart/src/chart.mod.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","BaseChartEditorComponent","panel","defineProperty","widget","_a","axes","legend","display","thresholds","timeRegions","overrides","time","TimeRangeMod","alert","component","control","chart","chartControl","options","refresh","_b","update","comp","datasets","forEach","x","setup","pull","store","dataProvider","toggleAlertHandle","v","_this","setTimeout","showAlertHandle","ScaleType","AXIS_X","AXIS_Y_LEFT","AXIS_Y_RIGHT","TooltipMode","TooltipSortOrder","DataPointNullValueOption","ThresholdOperator","ThresholdColor","ThresholdAxis","Threshold","operator","Gt","colorType","Critical","fill","line","axis","Left","TimeRegionColor","TimeRegionDay","TimeRegion","Red","fromDay","Any","toDay","OverrideType","AxisUnitType","SeriesOverride","OverrideItem","type","AxisUnit","label","unit","command","AxisUnitHelper","getData","Common_Short","Common_Percent","Common_Percent01","Common_Humidity","Common_Decibel","Common_Hex0x","Common_Hex","Common_SciNotation","Common_LocaleString","Length_Millimetre","Length_Meter","Length_Feet","Length_Kilometer","Length_Mile","Area_SquareMeters","Area_SquareFeet","Area_SquareMiles","Mass_Milligram","Mass_Gram","Mass_Kilogram","Mass_MetricTon","None","getFormattedValue","decimals","toFixed","unitData","toString","toExponential","toLocaleString","getShortFormattedValue","dev","u","menuItems","items","AxisYEditorComponent","_super","left","units","_.cloneDeep","scales","DropDownComponent","wrapEnum","leftY","rightY","yAxes","show","chartAxis","scale","Linear","sl","scaleLabel","labelString","undefined","min","ticks","max","i0","ɵɵdirectiveInject","PANEL_TOKEN","selectors","inputs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","AxisXEditorComponent","xAxes","AxesEditorComponent","i0.ɵɵelement","LegendEditorComponent","DrawOptionsEditorComponent","availableWidth","wrapArray","availableTooltipModes","availableTooltipSortOrders","availableNullValueOptions","stack","stacked","i0.ɵɵtemplate","i0.ɵɵtextInterpolate1","_r5","showLines","showPoints","tooltipMode","tooltipSortOrder","SeriesOverrideEditorComponent","removed","EventEmitter","cmItems","showColorPicker","ngOnInit","createBoolItem","Lines","createNumberItem","LineFill","LineWidth","Staircase","Dashes","DashLength","DashSpace","Points","PointRadius","Stack","createColorItem","Color","YAxis","ZIndex","Legend","HideInTooltip","ContextMenuComponent","wrapItems","onOptionSelected","item","rebuildItems","prop","override","getOverrideType","header","from","to","event","stopPropagation","getPropertyName","onRemoveItem","getItemHeader","replace","toLowerCase","c","toUpperCase","onColorSelected","color","i_r2","index","outputs","$event","emit","_r1","SeriesOverridesEditorComponent","onAdd","onRemove","t","indexOf","splice","ɵɵrestoreView","_r3_1","ɵɵnextContext","_r6_1","ThresholdEditorComponent","availableOperatorValues","availableColorValues","availableAxisValues","threshold","isNaN","Custom","i0.ɵɵpropertyInterpolate1","ThresholdsEditorComponent","TimeRegionEditorComponent","availableColors","availableDays","timeRegion","showCustomColors","fromTime","toTime","TimeRegionsEditorComponent","DisplayEditorComponent","_r5_1","onEditorFocusOut","onEditorKeyDown","ctx_r8","isEditorVisible","ctx_r1","AlertQueryParamPickerComponent","backupValue","isSuggestionMenuOpen","pick","valueChange","_value","y","onPick","onShowEditor","ctrlSuggestions","ctrlEditorElement","nativeElement","focus","hide","viewQuery","AlertQueryEditorComponent","itemsTarget","itemsFrom","itemsTo","metrics","targets","map","refId","condition","query","AlertConditionEditorComponent","AlertEvalTypeRef","of","values","AlertReducer","evaluator","AlertOperator","evaluatorType","AlertEvalType","HasNoValue","IsOutsideRange","IsWithinRange","params","parseFloat","evalParamTo","showEvalParamTo","evalParamFrom","onEvaluatorPick","ev","IsAbove","IsBelow","_c","i_r4","reducers$","evaluators$","AlertConfigEditorComponent","availableNoDataOptions","AlertNoDataOption","availableErrorOptions","AlertErrorOption","onAddCondition","conditions","AlertCondition","onRemoveCondition","onTestRule","testing","pipe","delay","finalize","subscribe","explorer","content","Notes","message","ErrorMessages","BAD_ALERT_EVAL","JsonExplorerComponent","noDataOption","errorOption","AlertNotificationsEditorComponent","AlertHistoryEditorComponent","AlertEditorComponent","ngOnDestroy","onAddAlert","AlertRule","onClose","onDelete","TimeEditorComponent","form","FormGroup","FormControl","validateTime","bind","shift","valueChanges","valid","TimeRangeParser","isValid","invalidTime","ChartEditorComponent","router","activatedRoute","location","queryParamMap","get","Number","isInteger","onTabSelected","url","createUrlTree","relativeTo","queryParams","tab","queryParamsHandling","go","i1$2","Router","ActivatedRoute","i1$1","Location","TooltipBuilder","model","ID","TOOLTIP_SELECTOR","build","Chart","Tooltip","positioners","custom","_","mode","position","intersect","caretSize","xPadding","bodySpacing","titleAlign","enabled","tooltipEl","document","getElementById","createElement","id","innerHTML","body","appendChild","tooltipElement","root","opacity","classList","remove","yAlign","add","createBody","setPosition","style","canvas","getBoundingClientRect","elWidth","getElementsByClassName","width","negMargin","caretX","window","pageXOffset","top","pageYOffset","caretY","fontFamily","_bodyFontFamily","padding","yPadding","pointerEvents","w","titleLines","title","innerHtml","date","Date","parse","Moment","format","sort","seriesName","seriesNameEl","data","find","yAxisID","resValue","querySelector","bodyLines","bodyItem","lines","sortOrder","parsedBodyLines","colors","labelColors","ColorHelper","hexToRgbString","backgroundColor","lastIndexOf","substring","dataPoints","Increasing","a","Decreasing","filter","getOverrideByLabel","hideInTooltip","OptionsProvider","getOptions","defaults","global","defaultFontColor","defaultFontFamily","defaultFontSize","maintainAspectRatio","animation","tooltips","spanGaps","getAxisX","getAxisY","gridLines","autoSkip","autoSkipPadding","maxRotation","minRotation","displayFormats","second","minute","hour","day","week","month","year","wAxis","zeroLineWidth","userCallback","labels","DisplayManager","ds","setupLines","setupPoints","setupNullValue","getShowLines","lineWidth","getLineWidth","getFill","getLineColor","borderColor","borderWidth","steppedLine","getStaircase","getDashes","len","getDashLength","space","getDashSpace","borderDash","order","getZIndex","getLegend","getYAxis","getShowPoints","pointBorderColor","pointBackgroundColor","pointRadius","getPointRadius","nullValue","Connected","isNull","Null","NullAsZero","getOverride","overrideColor","defaultColor","useOverride","lineFill","staircase","dashes","dashLength","dashSpace","points","zIndex","yAxis","alias","RegExp","test","ɵɵinject","factory","ɵfac","DataConverter","dispay","toDataSets","dataSets","totalIndex","serie","arr","columns","slice","el","toDataSet","valueOf","filteredValues","avg","reduce","allNulls","every","allZeros","generateDataSetName","lineTension","Math","apply","current","name","tags","keyIndex","keys","key","DataProvider","pluginActivator","dsService","converter","data$","timeSubs","range$","mergeMap","createDataSourceMetricsBuilder","mb","range","onError","raw","mod","modify","destroy","unsubscribe","tick","request","console","log","loading","proxy","dataSource","onData","details","err","i1","PluginActivator","DataSourceService","TimeRangeStore","ChartStore","BehaviorSubject","widget$","asObservable","BaseChartComponent","dataSubs","widgetSubs","onWidgetReady","BaseChartExtension","ThresholdDrawerPlugin","afterDatasetsDraw","ThresholdDrawer","draw","scaleYA","scaleYB","scaleX","scaleY","Right","offset","getPixelForValue","gt","lineColor","getColor","renderLine","renderRectangle","context","beginPath","strokeStyle","moveTo","lineTo","right","stroke","fillStyle","topY","bottomY","h","bottom","fillRect","Ok","Warning","fillColor","TrackballDrawerPlugin","PixelHelper","alignPixel","pixel","devicePixelRatio","currentDevicePixelRatio","halfWidth","round","easing","getMousePos","evt","rect","clientX","clientY","TimeRegionsDrawerPlugin","TimeRegionDrawer","minX","maxX","getSpans","os","start","toDate","oe","end","renderRegion","borders","getSpanBorders","getTime","isSpecificDayOfWeek","getSpansDayOfWeek","getSpansAny","inputFromTime","inputToTime","timeFormat","tf","tt","clone","midnight","res","fromDayName","toDayName","isBefore","set","getHours","getMinutes","margin","subtract","startOf","endOf","offsetStart","offsetEnd","minY","maxY","Green","Blue","Yellow","Gray","AlertDrawerPlugin","AlertDrawer","offset1","offset2","renderRectangleBetween","LINE_COLOR","FILL_COLOR","ALERTING_COLOR","REGION_FILL_ALPHA","ExtensionsManager","trackball","alerts","list","ChartComponent","extensions","plugins","ngAfterViewInit","UIChart","AlertHandleComponent","conds","getPixel","evaluatorParam1","evaluatorParam2","handleMidHeight","onGripClick","preventDefault","wrapper","scrollY","offsetY","resizeFuncHandler","calculateValueForPixel","stopResizeFuncHandler","removeEventListener","addEventListener","pix","pricePixel","preciseValue","getValueForPixel","roundedValue","dec1","countDecimals","dec2","floor","split","i0.ɵɵstyleProp","ChartLegendComponent","hideOnlyZeroes","hideOnlyNulls","onSeriesClicked","ctrlKey","selected","toggleSeries","selected_1","hidden","FadeInOutAnimation","ChartWidgetModule","imports","CommonModule","FormsModule","ReactiveFormsModule","ChartModule","EdCommonModule","EdUilibModule","PerfectScrollbarModule","declarations","exports","NgClass","NgComponentOutlet","NgForOf","NgIf","NgTemplateOutlet","NgStyle","NgSwitch","NgSwitchCase","NgSwitchDefault","NgPlural","NgPluralCase","i2","ɵangular_packages_forms_forms_y","NgSelectOption","ɵangular_packages_forms_forms_x","DefaultValueAccessor","NumberValueAccessor","RangeValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","SelectMultipleControlValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinLengthValidator","MaxLengthValidator","PatternValidator","CheckboxRequiredValidator","EmailValidator","NgModel","NgModelGroup","NgForm","FormControlDirective","FormGroupDirective","FormControlName","FormGroupName","FormArrayName","i3","i4","DialogActionsComponent","DialogComponent","DropDownValueTemplate","DropDownSelectedValueTemplate","PopupComponent","HierarchicalDropDownComponent","HintComponent","ErrorHintComponent","AutoCompleteComponent","PreferencesComponent","EmptyListComponent","InfoBoxComponent","ProgressComponent","FilterBoxComponent","TextBoxComponent","TextBoxValidationTemplate","CheckBoxComponent","AutoFocusDirective","AvatarComponent","GridComponent","ColumnComponent","DeleteColumnComponent","SlideDownComponent","TabStripComponent","TabComponent","TabTitleTemplate","TabContentTemplate","SideTabStripComponent","LoadOrErrorComponent","ErrorPopupComponent","NoteComponent","ModuleLoaderComponent","UserPickerComponent","TeamPickerComponent","PermissionPickerComponent","PermissionRulePickerComponent","PermissionIconComponent","TagPickerComponent","TimeRangePickerComponent","PluginPickerComponent","ColorPickerComponent","AutoCompletePickerComponent","PaletteEditorComponent","ColorCircleComponent","IconComponent","LabelIconComponent","RemoveHostDirective","PageComponent","PageHeaderComponent","PageTitleComponent","PageTabsNavigationComponent","PageDropdownNavigationComponent","TagComponent","DashboardExplorerComponent","DashboardExplorerDeleterComponent","DashboardExplorerMoverComponent","CardsLayoutSwitcherComponent","GeneralEditorComponent","MetricsEditorComponent","MetricsDesignerAnchorDirective","MetricsInspectorComponent","i5","PerfectScrollbarComponent","PerfectScrollbarDirective","AsyncPipe","UpperCasePipe","LowerCasePipe","JsonPipe","SlicePipe","DecimalPipe","PercentPipe","TitleCasePipe","CurrencyPipe","DatePipe","I18nPluralPipe","I18nSelectPipe","KeyValuePipe"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive } from '@angular/core';\nimport { Panel, TimeRangeMod, AlertRule } from 'common';\nimport { Axes, Chart, Display, Legend,\n  SeriesOverride, Threshold, TimeRegion } from '../chart.m';\n\n@Directive() \nexport class BaseChartEditorComponent {\n\n  get widget() : Chart{\n    return this.panel.widget;\n  }\n\n  get axes() : Axes {\n    return this.widget?.axes;\n  }\n\n  get legend() : Legend{\n    return this.widget?.legend;\n  }\n\n  get display() : Display{\n    return this.widget?.display;\n  }\n\n  get thresholds(): Threshold[]{\n    return this.display.thresholds;\n  }\n\n  get timeRegions(): TimeRegion[]{\n    return this.display.timeRegions;\n  }\n\n  get overrides(): SeriesOverride[]{\n    return this.display.overrides;\n  }\n\n  get time(): TimeRangeMod{\n    this.widget.time = this.widget.time ?? new TimeRangeMod();\n    \n    return this.widget.time;\n  }\n\n  get alert(): AlertRule{\n    return this.widget.alert;\n  }\n\n  get chartControl(){\n    return this\n      .widget\n      .component\n      .control\n      .chart;\n  }\n\n  get options(){\n    return this.chartControl.options;\n  }\n\n  constructor( public panel: Panel){\n  }\n\n  refresh(){\n    this\n      .widget\n      .component\n      ?.control\n      ?.refresh();\n  }\n\n  update(){\n    const comp = this.widget.component;\n\n    comp\n      ?.datasets\n      .forEach( x => comp.display.setup( x ) );\n\n    this.refresh();\n  }\n\n  pull(){\n    this\n      .widget\n      .component\n      ?.store\n      .dataProvider\n      .update();\n  }\n\n  toggleAlertHandle( v: boolean ){\n    setTimeout( () => {\n      const comp = this.widget.component;\n\n      if( comp ){\n        comp.showAlertHandle = v\n      }\n    });\n  }\n}\n","import { TimeRangeMod, AlertRule, Metrics } from 'common';\r\n\r\nimport { ChartComponent } from './chart.c';\r\n\r\nexport const AXIS_X = \"xAxis\";\r\nexport const AXIS_Y_LEFT = \"yAxisL\";\r\nexport const AXIS_Y_RIGHT = \"yAxisR\";\r\n\r\nexport interface ChartData{\r\n\tdatasets: DataSet[];\r\n}\r\n\r\nexport interface DataSet{\r\n\tlabel: string;\r\n\tdata: DataPoint[];\r\n\r\n\tmin?: number;\r\n\tmax?: number\r\n\tavg?: number;\r\n\tcurrent?: number;\r\n\r\n\tallNulls?: boolean;\r\n\tallZeros?: boolean;\r\n\r\n\tindex: number;\r\n\r\n\t//display\r\n\tfill?: boolean;\r\n\tbackgroundColor?:string; \r\n\tborderColor?: string;\r\n\tborderWidth?: number;\r\n\r\n\tpointBorderColor?: string; \r\n\tpointBackgroundColor?: string; \r\n\tpointRadius?: number; \r\n\r\n\tsteppedLine?: boolean;\r\n\r\n\tborderDash?: number[]\r\n\r\n\torder?: number;\r\n\r\n\tlegend?: boolean;\r\n\thidden?: boolean;\r\n\tselected?: boolean;\r\n\r\n\tyAxisID?: string;\r\n}\r\n\r\nexport interface DataPoint{\r\n\tx?: number;\r\n\ty?: number;\r\n\tisNull: boolean;\r\n}\r\n\r\nexport interface Chart{\r\n\tlegend: Legend;\r\n\taxes: Axes;\r\n\tdisplay: Display;\r\n\ttime: TimeRangeMod;\r\n\talert: AlertRule;\r\n\tmetrics: Metrics;\r\n\r\n\tcomponent: ChartComponent;\r\n}\r\n\r\nexport interface Legend{\r\n\tshow: boolean;\r\n\ttable: boolean;\r\n\tright: boolean;\r\n\r\n\tmin: number;\r\n\tmax: number;\r\n\tavg: number;\r\n\tcurrent: number;\r\n\ttotal: number;\r\n\tdecimals? : number;\r\n\r\n\thideOnlyNulls: boolean;\r\n\thideOnlyZeroes: boolean;\r\n}\r\n\r\nexport interface Axes{\r\n\tleftY: Axis;\r\n\trightY?: Axis;\r\n\tx: any;\r\n}\r\n\r\nexport enum ScaleType {\r\n\tLinear = \"linear\",\r\n\tLog2 = \"log2\",\r\n\tLog10 = \"log10\",\r\n\tLog32 = \"log32\",\r\n\tLog1024 = \"log1024\"\r\n}\r\n\r\nexport interface Axis{\r\n\tshow: boolean;\r\n\tunit:any;\r\n\tscale: ScaleType;\r\n\tmin?: number;\r\n\tmax?: number;\r\n\tdecimals?: number;\r\n\tlabel?: string;\r\n}\r\n\r\nexport interface Display{\r\n\tshowLines: boolean;\r\n\tshowPoints: boolean;\r\n\tshowBars: boolean;\r\n\r\n\tfill: number;\r\n\tlineWidth: number;\r\n\tpointRadius: number;\r\n\r\n\tstaircase: boolean;\r\n\ttooltipMode: TooltipMode;\r\n\ttooltipSortOrder: TooltipSortOrder;\r\n\t\r\n\tstack: boolean;\r\n\tnullValue: DataPointNullValueOption;\r\n\r\n\tthresholds: Threshold[];\r\n\ttimeRegions: TimeRegion[];\r\n\toverrides: SeriesOverride[];\r\n}\r\n\r\nexport class Threshold{\r\n\toperator: ThresholdOperator = ThresholdOperator.Gt;\r\n\tvalue?: number;\r\n\r\n\tcolorType: ThresholdColor = ThresholdColor.Critical;\r\n\r\n\tfill: boolean = true;\r\n\tline: boolean = true;\r\n\tfillColor: any;\r\n\tlineColor: any;\r\n\r\n\taxis: ThresholdAxis = ThresholdAxis.Left;\r\n}\r\n\r\nexport enum TooltipMode {\r\n\tAll = \"all\",\r\n\tSingle = \"single\"\r\n}\r\n\r\nexport enum TooltipSortOrder {\r\n\tNone = \"none\",\r\n\tIncreasing = \"increasing\",\r\n\tDecreasing = \"decreasing\"\r\n}\r\n\r\nexport enum DataPointNullValueOption {\r\n\tConnected = \"connected\",\r\n\tNull = \"null\",\r\n\tNullAsZero = \"nullAsZero\"\r\n}\r\n\r\nexport enum ThresholdOperator {\r\n\tGt = \"gt\",\r\n\tLt = \"lt\",\r\n}\r\n\r\nexport enum ThresholdColor {\r\n\tCustom = \"custom\",\r\n\tCritical = \"critical\",\r\n\tWarning = \"warning\",\r\n\tOk = \"ok\"\r\n}\r\n\r\nexport enum ThresholdAxis {\r\n\tLeft = \"left\",\r\n\tRight = \"right\"\r\n}\r\n\r\nexport class TimeRegion{\r\n\tcolorType: TimeRegionColor = TimeRegionColor.Red;\r\n\r\n\tfill: boolean = true;\r\n\tline: boolean = true;\r\n\tfillColor: string;\r\n\tlineColor: string;\r\n\r\n\tfromDay: TimeRegionDay = TimeRegionDay.Any;\r\n\ttoDay: TimeRegionDay = TimeRegionDay.Any;\r\n\r\n\tfromTime?: string;\r\n\ttoTime?: string;\r\n}\r\n\r\nexport enum TimeRegionColor {\r\n\tGray = \"gray\",\r\n\tRed = \"red\",\r\n\tGreen = \"green\",\r\n\tBlue = \"blue\",\r\n\tYellow = \"yellow\",\r\n\tCustom = \"custom\"\r\n}\r\n\r\nexport enum TimeRegionDay {\r\n\tAny = \"any\",\r\n\tMon = \"mon\",\r\n\tTue = \"tue\",\r\n\tWed = \"wed\",\r\n\tThu = \"thu\",\r\n\tFri = \"fri\",\r\n\tSat = \"sat\",\r\n\tSun = \"sun\"\r\n}\r\n\r\nexport class SeriesOverride{\r\n\talias: string;\r\n\titems: OverrideItem[];\r\n}\r\n\r\nexport class OverrideItem{\r\n\tconstructor( public type: OverrideType | string, public value: any ){\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport enum OverrideType{\r\n\tLines,\r\n\tPoints,\r\n\tPointRadius,\r\n\tStack,\r\n\tLineFill,\r\n\tLineWidth,\r\n\tStaircase,\r\n\tDashes,\r\n\tDashLength,\r\n\tDashSpace,\r\n\tLegend,\r\n\tHideInTooltip,\r\n\tColor,\r\n\tYAxis,\r\n\tZIndex,\r\n}\r\n\r\n","export enum AxisUnitType {\r\n\tNone, \r\n\r\n\tCommon_Short,\r\n\tCommon_Percent,\r\n\tCommon_Percent01,\r\n\tCommon_Humidity,\r\n\tCommon_Decibel,\r\n\tCommon_Hex0x,\r\n\tCommon_Hex,\r\n\tCommon_SciNotation,\r\n\tCommon_LocaleString,\r\n\r\n\tLength_Millimetre,\r\n\tLength_Meter,\r\n\tLength_Feet,\r\n\tLength_Kilometer,\r\n\tLength_Mile,\r\n\r\n\tArea_SquareMeters,\r\n\tArea_SquareFeet,\r\n\tArea_SquareMiles,\r\n\r\n\tMass_Milligram,\r\n\tMass_Gram,\r\n\tMass_Kilogram,\r\n\tMass_MetricTon\r\n}\r\n\r\nexport class AxisUnit{\r\n\tconstructor( \r\n\t\tpublic type: AxisUnitType,\r\n\t\tpublic label: string,\r\n\t\tpublic unit: string,\r\n\t\tpublic command?: (event?: any) => void ){}\r\n}\r\n\r\nexport class AxisUnitHelper{\r\n\tstatic getData( unit: AxisUnitType ){\r\n\t\tswitch( +unit ){\r\n\r\n\t\t\tcase AxisUnitType.Common_Short:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Short, \"short\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Percent, \"percent (0-100)\", \"%\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent01:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Percent01, \"percent (0.0-1.0)\", \"%\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Humidity:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Humidity, \"humidity (%H)\", \"%H\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Decibel:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Decibel, \"decibel\", \"dB\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex0x:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Hex0x, \"hexadecimal (0x)\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Hex, \"hexadecimal\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_SciNotation:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_SciNotation, \"scientific notation\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_LocaleString:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_LocaleString, \"locale string\", \"\" );\r\n\r\n\r\n\r\n\t\t\tcase AxisUnitType.Length_Millimetre:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Millimetre, \"millimetre (mm)\", \"mm\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Meter:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Meter, \"meter (m)\", \"m\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Feet:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Feet, \"feet (ft)\", \"ft\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Kilometer:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Kilometer, \"kilometer (km)\", \"km\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Mile:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Mile, \"mile (mi)\", \"mi\" );\r\n\r\n\r\n\r\n\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareMeters:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareMeters, \"Square Meters (m²)\", \"m²\" );\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareFeet:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareFeet, \"Square Feet (ft²)\", \"ft²\" );\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareMiles:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareMiles, \"Square Miles (mi²)\", \"mi²\" );\r\n\r\n\r\n\t\t\tcase AxisUnitType.Mass_Milligram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Milligram, \"milligram (mg)\", \"mg\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_Gram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Gram, \"gram (g)\", \"g\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_Kilogram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Kilogram, \"kilogram (kg)\", \"kg\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_MetricTon:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_MetricTon, \"metric ton (t)\", \"t\" );\r\n\t\t}\r\n\r\n\t\treturn new AxisUnit( AxisUnitType.None, \"none\", \"\" );\r\n\t}\r\n\r\n\tstatic getFormattedValue( label, unit, decimals ){\r\n\t\tlet value = label.toFixed( decimals );\r\n\t\tconst unitData = AxisUnitHelper.getData( unit);\r\n\r\n\t\tswitch( unitData.type ){\r\n\t\t\tcase AxisUnitType.Common_Hex: \r\n\t\t\t\treturn label.toString( 16 );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex0x: \r\n\t\t\t\treturn `0x${label.toString( 16 )}`;\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent01: \r\n\t\t\t\treturn `${( 100 * label ).toFixed( decimals )} %`;\r\n\r\n\t\t\tcase AxisUnitType.Common_SciNotation: \r\n\t\t\t\treturn label.toExponential(decimals);\r\n\r\n\t\t\tcase AxisUnitType.Common_LocaleString:\r\n\t\t\t\treturn label.toLocaleString();\r\n\r\n\t\t\tcase AxisUnitType.Common_Short:\r\n\t\t\t\treturn AxisUnitHelper.getShortFormattedValue( label, unit, decimals );\r\n\r\n\t\t\tcase AxisUnitType.None:\r\n\t\t\t\treturn value;\r\n\r\n\r\n\r\n\t\t\tdefault: \r\n\t\t\t\treturn `${value} ${unitData.unit}`;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getShortFormattedValue( label, unit, decimals ){\r\n\t\t// if( label < 1000 ){\r\n\t\t// \treturn label;\r\n\t\t// }\r\n\t\t\r\n\t\tlet dev = 1;\r\n\t\tlet u = '';\r\n\r\n\t\tif( label >= 1000 && label < 1000000 ){\r\n\t\t\tu = 'K';\r\n\t\t\tdev = 1000;\r\n\t\t} else if( label >= 1000000 && label < 1000000000 ){\r\n\t\t\tu = 'Mil';\r\n\t\t\tdev = 1000000;\r\n\t\t}\r\n\t\telse if( label >= 1000000000 && label < 1000000000000 ){\r\n\t\t\tu = 'Bil';\r\n\t\t\tdev = 1000000000;\r\n\t\t} else if( label >= 1000000000000 && label < 1000000000000000 ){\r\n\t\t\tu = 'Tri';\r\n\t\t\tdev = 1000000000000;\r\n\t\t}\r\n\t\telse if( label >= 1000000000000000 && label < 1000000000000000000 ){\r\n\t\t\tu = 'Qdr';\r\n\t\t\tdev = 1000000000000000;\r\n\t\t}\r\n\r\n\t\treturn  `${( label / dev ).toFixed( decimals)} ${u}`;\r\n\t}\r\n} ","import { AxisUnitHelper, AxisUnitType } from '../../../view/helpers/unit-helper';\r\n\r\n\r\n\r\nexport const menuItems: any = [\r\n\r\n\t{\r\n\t\tlabel: \"none\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.None),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Short),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Percent),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Percent01),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Humidity),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Decibel),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Hex0x),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Hex),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_SciNotation),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_LocaleString)\r\n\t\t\t\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tlabel: \"length\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Millimetre),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Meter),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Feet),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Kilometer),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Mile)\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tlabel: \"area\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareMeters),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareFeet),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareMiles)\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tlabel: \"mass\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Milligram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Gram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Kilogram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_MetricTon)\r\n\t\t]\r\n\t},\r\n];","import { Component, Inject, Input } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { ScaleType } from '../../../chart.m';\nimport { menuItems } from './units';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'editor-axis-y',\n  templateUrl: './y-axis.html'\n})\nexport class AxisYEditorComponent extends BaseChartEditorComponent {\n \n  @Input() left: boolean = true;\n\n  units = _.cloneDeep( menuItems );\n  scales = DropDownComponent.wrapEnum( ScaleType );\n\n  get axis(){\n    return this.left ? this.axes.leftY : this.axes.rightY;\n  }\n\n  get chartAxis(){\n    return this.options.scales.yAxes[ this.left ? 0 : 1 ];\n  }\n\n  get show(): boolean{\n    return this.axis.show;\n  }\n\n  set show( v: boolean ){\n    this.axis.show = this.chartAxis.display = v;\n    this.refresh();\n  }\n\n  get unit(): boolean{\n    return this.axis.unit;\n  }\n\n  set unit( v: boolean ){\n    this.axis.unit = v;\n\n    this.refresh();\n  }\n\n  get scale(): ScaleType{\n    return this.axis.scale;\n  }\n\n  set scale( v: ScaleType ){\n    this.axis.scale = v;\n    this.chartAxis.type = ( v == ScaleType.Linear ) ? \"linear\" : \"logarithmic\";\n\n    this.refresh();\n  }\n\n  get label(): string{\n    return this.axis.label;\n  }\n\n  set label( v: string ){\n    this.axis.label = v;\n    const sl = this.chartAxis.scaleLabel;\n\n    if( v ){\n      sl.display = true;\n      sl.labelString = v;\n    } else{\n      sl.display = false;\n      sl.labelString = undefined;\n    }\n\n    this.refresh();\n  }\n\n  get decimals(): number{\n    return this.axis.decimals;\n  }\n\n  set decimals( v: number ){\n    this.axis.decimals = v ? +v : undefined;\n\n    this.refresh();\n  }\n\n  get min(): number{\n    return this.axis.min;\n  }\n\n  set min( v: number ){\n    this.axis.min = this.chartAxis.ticks.min = v ? +v : undefined;\n\n    this.refresh();\n  }\n\n  get max(): number{\n    return this.axis.max;\n  }\n\n  set max( v: number ){\n    this.axis.max = this.chartAxis.ticks.max = v ? +v : undefined;\n\n    this.refresh();\n  }\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n}\n","<div class=\"section gf-form-group\" >\r\n\t<h5 class=\"section-heading\">{{left ? 'Left Y' : 'Right Y'}}</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"show\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-hierarchical-dropdown\r\n\t\t[valueProperty]=\"'type'\"\r\n\t\t[(ngModel)]=\"unit\"\r\n\t\t[data]=\"units\"\r\n\t\tlabel=\"Unit\"\r\n\t\twidth=\"16\"\r\n\t\tlabelWidth=\"6\"  >\r\n\t</ed-hierarchical-dropdown>\r\n\r\n\t<ed-dropdown\r\n\t\t[(ngModel)]=\"scale\"\r\n\t\tlabel=\"Scale\"\r\n\t\t[data]=\"scales\"\r\n\t\tlabelWidth=\"6\"\r\n\t\twidth=\"16\"  >\r\n\t</ed-dropdown>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Y-Min\"\r\n\t\t\twidth=\"5\"\r\n\t\t\t[(ngModel)]=\"min\"\r\n\t\t\tplaceholder=\"auto\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Y-Max\"\r\n\t\t\twidth=\"5\"\r\n\t\t\t[(ngModel)]=\"max\"\r\n\t\t\tplaceholder=\"auto\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t<ed-textbox \r\n\t\ttype=\"text\"\r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Decimals\"\r\n\t\twidth=\"16\"\r\n\t\t[(ngModel)]=\"decimals\"\r\n\t\tplaceholder=\"auto\">\r\n\t</ed-textbox>\r\n\t<!-- <input type=\"text\" [(ngModel)]=\"decimals\" /> -->\r\n\r\n\t<ed-textbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Label\"\r\n\t\twidth=\"16\"\r\n\t\t[(ngModel)]=\"label\">\r\n\t</ed-textbox>\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-axis-x',\n  templateUrl: './x-axis.html'\n})\nexport class AxisXEditorComponent extends BaseChartEditorComponent {\n   \n  get axis(){\n    return this.axes.x;\n  }\n\n  get chartAxis(){\n    return this.options.scales.xAxes[ 0 ];\n  }\n\n  get show(): boolean{\n    return this.axis.show;\n  }\n\n  set show( v: boolean ){\n    this.axis.show = this.chartAxis.display = v;\n    this.refresh();\n  }\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n    \n  }\n}\n","<div class=\"section gf-form-group\" >\r\n\t<h5 class=\"section-heading\">X-Axis</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"show\">\r\n\t</ed-checkbox>\r\n\r\n\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-axes',\n  template: `\n    <editor-axis-y ></editor-axis-y>\n    <editor-axis-y [left]=\"false\" ></editor-axis-y>\n    <editor-axis-x></editor-axis-x>`\n})\nexport class AxesEditorComponent extends BaseChartEditorComponent {\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n    \n  }\n} \n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-legend',\n  templateUrl: './legend.html'\n})\nexport class LegendEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Options</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"legend.show\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"As Table\"\r\n\t\t[(ngModel)]=\"legend.table\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"To the right\"\r\n\t\t[(ngModel)]=\"legend.right\">\r\n\t</ed-checkbox>\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Values</h5>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Min\"\r\n\t\t\t[(ngModel)]=\"legend.min\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Min\"\r\n\t\t\t[(ngModel)]=\"legend.max\">\r\n\t\t</ed-checkbox>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Avg\"\r\n\t\t\t[(ngModel)]=\"legend.avg\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Current\"\r\n\t\t\t[(ngModel)]=\"legend.current\">\r\n\t\t</ed-checkbox>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Total\"\r\n\t\t\t[(ngModel)]=\"legend.total\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Decimals\"\r\n\t\t\twidth=\"4\"\r\n\t\t\tplaceholder=\"auto\"\r\n\t\t\t[(ngModel)]=\"legend.decimals\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Hide series</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"10\"\r\n\t\tlabel=\"With only nulls\"\r\n\t\t[(ngModel)]=\"legend.hideOnlyNulls\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"10\"\r\n\t\tlabel=\"With only zeros\"\r\n\t\t[(ngModel)]=\"legend.hideOnlyZeroes\">\r\n\t</ed-checkbox>\r\n\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { DataPointNullValueOption, TooltipMode, TooltipSortOrder } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-draw-options',\n  templateUrl: './options.html'\n})\nexport class DrawOptionsEditorComponent extends BaseChartEditorComponent {\n \n  availableWidth = DropDownComponent.wrapArray( [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] );\n\n  availableTooltipModes\t= DropDownComponent.wrapEnum( TooltipMode );\n\n  availableTooltipSortOrders = DropDownComponent.wrapEnum( TooltipSortOrder );\n\n  availableNullValueOptions = DropDownComponent.wrapEnum( DataPointNullValueOption );\n\n  get stack(): boolean{\n    return this.display.stack;\n  }\n\n  set stack( v: boolean ){\n    this.display.stack = v;\n    this.options.scales.yAxes[ 0 /*?*/ ].stacked = v\n\n    this.refresh();\n  }\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","<div class=\"ed-form-inline\">\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"override.alias\"\r\n\t\tlabel=\"alias or regex\"\r\n\t\twidth=\"15\">\r\n\t</ed-textbox>\r\n\r\n\t<div *ngFor=\"let i of items\" class=\"gf-form\"  >\r\n\r\n\t\t<div class=\"gf-form-label\">\r\n\t\t\t<span (click)=\"onRemoveItem( i )\">\r\n\t\t\t\t<i class=\"fa fa-times mr-2 pointer\" ></i>\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t\t{{getItemHeader( i )}}:\r\n\t\t\t<span class=\"ml-1\" *ngIf=\"i.type != 12;else color\" >{{i.value}}</span>\r\n\t\t\t<ng-template #color>\r\n\t\t\t\t<color-circle [value]=\"i.value\" class=\"ml-1\" [canBeActive]=false></color-circle>\r\n\t\t\t</ng-template>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form\" #menuTarget  (click)=\"cm.show( $event )\">\r\n\t\t<label class=\"gf-form-label pointer\">\r\n\t\t\t<i class=\"fa fa-plus\"></i>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n\t\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( override )\">\r\n\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\r\n</div>\r\n\r\n<ed-popup [(visible)]=\"showColorPicker\" [anchor]=\"menuTarget\">\r\n  <ed-palette-editor (selected)='onColorSelected( $event )'></ed-palette-editor>\r\n</ed-popup>\r\n\r\n<ed-context-menu [items]=\"cmItems\" #cm></ed-context-menu>\r\n\r\n","<div class=\"section gf-form-group\">\r\n\r\n\t<h5 class=\"section-heading\">Draw Modes</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Bars\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.showLines\"\r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Lines\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.showPoints\"\r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Points\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Mode Options</h5>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.fill\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Fill\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(selectionChange)=\"update()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.lineWidth\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Line Width\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t[disabled]=\"!display.showLines\"\r\n\t\t(selectionChange)=\"update()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.staircase\"\r\n\t\tlabel=\"Staircase\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.pointRadius\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Point Radius\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(selectionChange)=\"update()\"\r\n\t\t[disabled]=\"!display.showPoints\">\r\n\t</ed-dropdown>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Hover tooltip</h5>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableTooltipModes\"\r\n\t\t[(ngModel)]=\"display.tooltipMode\"\r\n\t\tlabel=\"Mode\"\r\n\t\tlabelWidth=\"9\"\r\n\t\twidth=\"9\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableTooltipSortOrders\"\r\n\t\t[(ngModel)]=\"display.tooltipSortOrder\" \r\n\t\tlabel=\"Sort Order\"\r\n\t\tlabelWidth=\"9\"\r\n\t\twidth=\"9\" >\r\n\t</ed-dropdown>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Stacking & Null value</h5>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"stack\"\r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"Stack\" >\r\n\t</ed-checkbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.nullValue\"\r\n\t\t[data]=\"availableNullValueOptions\" \r\n\t\tlabel=\"Null Value\"\r\n\t\t[labelWidth]=\"7\" >\r\n\t</ed-dropdown>\r\n</div>","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { ContextMenuComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { OverrideItem, SeriesOverride, OverrideType } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-series-override',\n  templateUrl: './override.html'\n})\nexport class SeriesOverrideEditorComponent extends BaseChartEditorComponent {\n\n  @Input() override: SeriesOverride;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<SeriesOverride>();\n\n  cmItems = [];\n  items = new Array<OverrideItem>();\n\tshowColorPicker = false;\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n  \n\tngOnInit() {\n\t\t\n\t\tthis.cmItems = [\n\t\t\tthis.createBoolItem(\"Lines\", OverrideType.Lines),\n\t\t\tthis.createNumberItem(\"Line fill\", OverrideType.LineFill),\n\t\t\tthis.createNumberItem(\"Line width\", OverrideType.LineWidth),\n\t\t\tthis.createBoolItem(\"Staircase\", OverrideType.Staircase),\n\t\t\tthis.createBoolItem(\"Dashes\", OverrideType.Dashes),\n\t\t\tthis.createNumberItem(\"Dash length\", OverrideType.DashLength),\n\t\t\tthis.createNumberItem(\"Dash space\", OverrideType.DashSpace),\n\t\t\tthis.createBoolItem(\"Points\", OverrideType.Points),\n\t\t\tthis.createNumberItem(\"Point radius\", OverrideType.PointRadius, 0, 5),\n\t\t\tthis.createBoolItem(\"Stack\", OverrideType.Stack),\n\t\t\tthis.createColorItem(\"Color\", OverrideType.Color),\n\n\t\t\tthis.createNumberItem(\"Y-axis\", OverrideType.YAxis, 1, 2),\n\t\t\tthis.createNumberItem(\"Z-index\", OverrideType.ZIndex, -3, 3),\n\t\t\tthis.createBoolItem(\"Legend\", OverrideType.Legend),\n\t\t\tthis.createBoolItem(\"Hide in tooltip\", OverrideType.HideInTooltip),\n\t\t]\n\n\t\tContextMenuComponent.wrapItems( this.cmItems, x => this.onOptionSelected( x.item ) )\n\n\t\tthis.rebuildItems();\n  }\n  \n  rebuildItems() {\n\t\tconst items = new Array<OverrideItem>();\n\n\t\tfor (var prop in this.override) {\n\t\t\tif (prop != 'alias') {\n\t\t\t\tvar type = this.getOverrideType(prop);\n\n\t\t\t\titems.push(new OverrideItem(type, this.override[prop]))\n\t\t\t}\n\t\t}\n\n    this.items = items;\n    this.update();\n  }\n\n\tcreateBoolItem(header: string, type: OverrideType) {\n\t\treturn {\n\t\t\tlabel: header, items: [\n\t\t\t\t{ label: 'true', value: true, type: type },\n\t\t\t\t{ label: 'false', value: false, type: type },\n\t\t\t]\n\t\t}\n\t}\n\n\tcreateNumberItem(header: string, type: OverrideType, from: number = 0, to: number = 10) {\n\t\tconst item = { label: header, items: [] };\n\n\t\tfor (var i = from; i <= to; ++i) {\n\t\t\titem.items.push({ label: i, value: i, type: type })\n\t\t}\n\n\t\treturn item;\n\t}\n\n\tcreateColorItem(header: string, type: OverrideType)  {\n\t\treturn {\n      label: header,\n      type: type,\n      items: [\n\t\t\t\t{ label: \"change\", type: type }\n\t\t\t]\n\t\t};\n\t}\n\n\n\tonOptionSelected(item) {\n\t\tif (item.type == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (OverrideType.Color == item.type) {\n\t\t\tthis.showColorPicker = true\n\t\t\tevent.stopPropagation();\n\t\t} else {\n\t\t\tthis.override[this.getPropertyName(item)] = item.value;\n\t\t\tthis.rebuildItems();\n\t\t}\n\t}\n\n\tonRemoveItem(item: OverrideItem) {\n\t\tdelete this.override[this.getPropertyName(item)];\n\t\tthis.rebuildItems();\n\t}\n\n\tgetItemHeader(item: OverrideItem) {\n\t\treturn OverrideType[item.type]\n\t\t\t.replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n\t\t\t.toLowerCase();\n\t}\n\n\tgetPropertyName(item) {\n\t\treturn OverrideType[item.type].replace(/^\\w/, c => c.toLowerCase())\n\t}\n\n\tgetOverrideType(prop) {\n\t\treturn OverrideType[prop.replace(/^\\w/, c => c.toUpperCase())];\n\t}\n\n\tonColorSelected(color) {\n\t\tvar item = this.createColorItem(\"Color\", OverrideType.Color);\n\n\t\tthis.override[this.getPropertyName(item)] = color;\n\t\tthis.rebuildItems();\n\t}\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { SeriesOverride } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-series-overrides',\n  template: `\n    <div class=\"gf-form-group\">\n      <h5>Series specific overrides </h5>\n\n      <div>\n\n        <editor-series-override *ngFor=\"let t of overrides; let i = index\"\n          [override]=\"t\" \n          [index]=\"i\"\n          (removed)=\"onRemove( $event )\">\n        </editor-series-override>\n\n        <div class=\"gf-form-button-row\">\n          <button class=\"btn btn-inverse\" (click)=\"onAdd()\">\n            <i class=\"fa fa-plus\"></i>&nbsp;Add Override\n          </button>\n        </div>\n        \n      </div>\n    </div>`\n})\nexport class SeriesOverridesEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n  }\n\n  onAdd(){\n    this.overrides.push( new SeriesOverride() );\n  }\n\n  onRemove( t: SeriesOverride ){\n    const index = this.overrides.indexOf( t )\n\n    if( -1 !== index ){\n      this.overrides.splice( index, 1 );\n    }\n\n    this.update();\n  }\n  \n  \n}\n","<div class=\"ed-form-inline\">\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableOperatorValues\"\r\n\t\t[(ngModel)]=\"threshold.operator\"\r\n\t\tlabel=\"T{{index+1}}\"\r\n\t\twidth=\"6\"\r\n\t\t(selectionChange)=\"refresh()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"value\"\r\n\t\tplaceholder=\"value\"\r\n\t\ttype=\"number\"\r\n\t\twidth=\"8\"\r\n\t\t(changed)=\"refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableColorValues\"\r\n\t\t[(ngModel)]=\"threshold.colorType\"\r\n\t\tlabel=\"Color\"\r\n\t\t(selectionChange)=\"refresh()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"threshold.fill\"\r\n\t\tlabel=\"Fill\"\r\n\t\t(checked)=\"refresh()\">\r\n\t </ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomColors\"\t\r\n\t\tlabel=\"Fill color\"\r\n\t\t[(ngModel)]=\"threshold.fillColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"threshold.line\"\r\n\t\tlabel=\"Line\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomColors\"\t\r\n\t\tlabel=\"Line color\"\r\n\t\t[(ngModel)]=\"threshold.lineColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableAxisValues\"\r\n\t\t[(ngModel)]=\"threshold.axis\"\r\n\t\tlabel=\"Y-Axis\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( threshold )\">\r\n\t\t\t<a>\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { ThresholdOperator, ThresholdColor, ThresholdAxis, Threshold } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-threshold',\n  templateUrl: './threshold.html'\n})\nexport class ThresholdEditorComponent extends BaseChartEditorComponent {\n\n  @Input() threshold: Threshold;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<Threshold>();\n\n  availableOperatorValues = DropDownComponent.wrapEnum( ThresholdOperator );\n\n  availableColorValues = DropDownComponent.wrapEnum( ThresholdColor );\n\n  availableAxisValues = DropDownComponent.wrapEnum( ThresholdAxis );\n  \n  get value(){\n    return this.threshold.value;\n  }\n\n  set value( value ){\n    const v = +value;\n    this.threshold.value = isNaN( v ) || !value ? undefined : v;\n  }\n\n  get showCustomColors(){\n\t\treturn ( ThresholdColor.Custom == this.threshold.colorType );\n\t}\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { Threshold } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-thresholds',\n  template: `\n    <div class=\"gf-form-group\">\n      <h5>Thresholds</h5>\n\n      <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n\n        <editor-threshold *ngFor=\"let t of thresholds; let i = index\"\n          [threshold]=\"t\" \n          [index]=\"i\"\n          (removed)=\"onRemove( $event )\">\n        </editor-threshold>\n\n        <div class=\"gf-form-button-row\">\n          <button class=\"btn btn-inverse\" (click)=\"onAdd()\" ng-disabled=\"ctrl.disabled\">\n            <i class=\"fa fa-plus\"></i>&nbsp;Add Threshold\n          </button>\n        </div>\n        \n      </div>\n    </div>`})\nexport class ThresholdsEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n  }\n  \n  onAdd(){\n    this.thresholds.push( new Threshold() );\n  }\n\n  onRemove( t: Threshold ){\n    const index = this.thresholds.indexOf( t )\n\n    if( -1 !== index ){\n      this.thresholds.splice( index, 1 );\n    }\n\n    this.refresh();\n  }\n}\n","<div class=\"ed-form-inline\">\r\n\t\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label\">T{{index+1}}</label>\r\n\t</div>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableDays\"\r\n\t\t[(ngModel)]=\"timeRegion.fromDay\"\r\n\t\tlabel=\"From\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"fromTime\"\r\n\t\tplaceholder=\"hh:mm\"\r\n\t\twidth=\"8\"\r\n\t\t(focusout)=\"timeRegion.fromTime=fromTime; refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableDays\"\r\n\t\t[(ngModel)]=\"timeRegion.toDay\"\r\n\t\tlabel=\"To\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"toTime\"\r\n\t\tplaceholder=\"hh:mm\"\r\n\t\twidth=\"8\"\r\n\t\t(focusout)=\"timeRegion.toTime=toTime; refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableColors\"\r\n\t\t[(ngModel)]=\"timeRegion.colorType\"\r\n\t\tlabel=\"Color\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"timeRegion.fill\" \r\n\t\tlabel=\"Fill\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomFillColor\"\t\r\n\t\tlabel=\"Fill color\"\r\n\t\t[(ngModel)]=\"timeRegion.fillColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"timeRegion.line\" \r\n\t\tlabel=\"Line\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomLineColor\"\t\r\n\t\tlabel=\"Line color\"\r\n\t\t[(ngModel)]=\"timeRegion.lineColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( timeRegion )\">\r\n\t\t\t<a  >\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { TimeRegion, TimeRegionColor, TimeRegionDay } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-time-region',\n  templateUrl: './time-region.html'\n})\nexport class TimeRegionEditorComponent extends BaseChartEditorComponent {\n\n  @Input() timeRegion: TimeRegion;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<TimeRegion>();\n\n  availableColors = DropDownComponent.wrapEnum( TimeRegionColor )\n  availableDays = DropDownComponent.wrapEnum( TimeRegionDay )\n\n  fromTime: string;\n\ttoTime: string;\n\n  get showCustomColors(){\n\t\treturn ( TimeRegionColor.Custom == this.timeRegion.colorType );\n\t}\n\n\tget showCustomFillColor(){\n\t\treturn ( this.showCustomColors && this.timeRegion.fill );\n\t}\n\n\tget showCustomLineColor(){\n\t\treturn ( this.showCustomColors && this.timeRegion.line );\n\t}\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  ngOnInit(){\n\t\tthis.fromTime = this.timeRegion.fromTime;\n\t\tthis.toTime = this.timeRegion.toTime;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { TimeRegion } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-time-regions',\n  template: `\n  <div class=\"gf-form-group\">\n    <h5>Time regions</h5>\n\n    <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n\n      <editor-time-region *ngFor=\"let t of timeRegions; let i = index\"\n        [timeRegion]=\"t\" \n        [index]=\"i\"\n        (removed)=\"onRemove( $event )\">\n      </editor-time-region>\n\n      <div class=\"gf-form-button-row\">\n        <button class=\"btn btn-inverse\" (click)=\"onAdd()\" ng-disabled=\"ctrl.disabled\">\n          <i class=\"fa fa-plus\"></i>&nbsp;Add Time Region\n        </button>\n      </div>\n      \n    </div>\n  </div>`\n})\nexport class TimeRegionsEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n  \n  onAdd(){\n    this.timeRegions.push( new TimeRegion() );\n  }\n\n  onRemove( t: TimeRegion  ){\n    const index = this.timeRegions.indexOf( t )\n\n    if( -1 !== index ){\n      this.timeRegions.splice( index, 1 );\n    }\n\n    this.refresh();\n  }\n}\n","<ed-side-tabstrip [(ngModel)]=\"index\">\r\n\t<ed-tab header=\"Draw options\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-draw-options></editor-draw-options>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tSeries overrides<span class=\"muted ml-1\" *ngIf=\"overrides.length\">({{overrides.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-series-overrides></editor-series-overrides>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tThresholds<span class=\"muted ml-1\" *ngIf=\"thresholds.length\">({{thresholds.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-thresholds></editor-thresholds>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tTime regions<span class=\"muted ml-1\" *ngIf=\"timeRegions.length\">({{timeRegions.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-time-regions></editor-time-regions>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-side-tabstrip>\r\n\r\n\r\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-display',\n  templateUrl: './display.html'\n})\nexport class DisplayEditorComponent extends BaseChartEditorComponent  {\n \n  index: number = 1;\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n  }\n}\n","<span (click)=\"onShowEditor( $event )\" class=\"pointer\" >\r\n\t<a *ngIf=\"!isEditorVisible\">{{value}}</a>\r\n\r\n\t<input *ngIf=\"isEditorVisible\" type=\"text\"\r\n\t\tclass=\"q__editor\"\r\n\t\t[ngStyle]=\"{width: ((value.length + 1) * 8) + 'px' }\"\r\n\t\t[(ngModel)]=\"value\"\r\n\t\t(focusout)=\"onEditorFocusOut()\"\r\n\t\t(keydown)=\"onEditorKeyDown()\"\r\n\t\t(keyup.enter)=\"isEditorVisible=false;onEditorFocusOut();\"\r\n\t\tspellcheck=\"false\" \r\n\t\t#editor >\r\n\r\n</span>\r\n\r\n <ed-context-menu [items]=\"items\" #suggestions ></ed-context-menu>","import { Component, Input, EventEmitter, Output, ViewChild, ElementRef } from '@angular/core';\r\nimport { ContextMenuComponent } from 'uilib';\r\n\r\n@Component({\r\n\tselector: 'query-param-picker',\r\n\ttemplateUrl: `./param.html`,\r\n\tstyleUrls: ['./param.scss']})\r\nexport class AlertQueryParamPickerComponent  {\r\n\t@Input() items : any[];\r\n\r\n\t_value: string;\r\n\tbackupValue: string = '';\r\n\r\n\t@ViewChild('editor') ctrlEditorElement: ElementRef;\r\n\t@ViewChild(\"suggestions\") public ctrlSuggestions: ContextMenuComponent;\r\n\tisEditorVisible = false;\r\n\tisSuggestionMenuOpen = false;\r\n\r\n\t@Output() pick = new EventEmitter<string>()\r\n\t@Output() valueChange = new EventEmitter<string>();\r\n\r\n\tget value(): string {\r\n    return this._value;\r\n\t};\r\n\t\r\n\t@Input() set value( v : string ){\r\n\t\tthis._value = v;\r\n\t\tthis.valueChange.emit( this._value );\r\n\t\tthis.pick.emit( this._value );\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tthis\r\n\t\t\t.items\r\n\t\t\t.forEach( x => x.command = ( y ) => this.onPick( y.item ) )\r\n\t}\r\n\t\r\n\tonShowEditor( e ){\r\n\t\tthis.backupValue = this.value;\r\n\r\n\t\tthis.isSuggestionMenuOpen = true;\r\n\t\tthis.ctrlSuggestions.show(/*this.ctrlEditorElement*/e);\r\n\r\n    setTimeout(() => { \r\n\t\t\tthis.isEditorVisible = true;\r\n\r\n\t\t\tsetTimeout( () => this.ctrlEditorElement.nativeElement.focus(), 0 )\r\n    }, 0);\r\n\t}\r\n\t\r\n\tonEditorFocusOut(){\r\n    if( !this.isSuggestionMenuOpen ){\r\n      this.isEditorVisible = false;\r\n\t\t\t\r\n\t\t\tif( !this.value ){\r\n\t\t\t\tthis.value = this.backupValue;\r\n\t\t\t}\r\n    }\r\n  }\r\n\r\n  onEditorKeyDown(){\r\n    this.isSuggestionMenuOpen = false;\r\n    this.ctrlSuggestions.hide()\r\n\t}\r\n\r\n\tonPick( e )  {\r\n\t\tthis.value = this.backupValue = e.label;\r\n\t\tthis.isEditorVisible = false;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n","import { Component, Inject, Input } from '@angular/core';\r\nimport { AlertQuery, Panel, PANEL_TOKEN } from 'common';\r\nimport { BaseChartEditorComponent } from '../../../../../base/chart-base-editor';\r\n\r\n\r\n@Component({\r\n\tselector: 'alert-query-editor',\r\n\ttemplateUrl: `./query.html`\r\n})\r\nexport class AlertQueryEditorComponent extends BaseChartEditorComponent  {\r\n\t@Input() query: AlertQuery;\r\n\r\n\titemsTarget = []\r\n\r\n\titemsFrom = [\r\n\t\t{label: '10s' },\r\n\t\t{label: '1m' },\r\n\t\t{label: '5m' },\r\n\t\t{label: '10m' },\r\n\t\t{label: '15m' },\r\n\t\t{label: '1h' },\r\n\t\t{label: '24h' },\r\n\t\t{label: '48h' }\r\n\t]\r\n\r\n\titemsTo = [\r\n\t\t{label: 'now' },\r\n\t\t{label: 'now-1m' },\r\n\t\t{label: 'now-5m' },\r\n\t\t{label: 'now-10m' },\r\n\t\t{label: 'now-1h' }\r\n\t]\r\n\r\n\tconstructor(@Inject( PANEL_TOKEN ) panel: Panel){\r\n\t\tsuper( panel );\r\n\t\t\r\n\t\tthis.itemsTarget = this\r\n\t\t\t.widget\r\n\t\t\t.metrics\r\n\t\t\t.targets\r\n\t\t\t.map( x => { return {label: (<any>x).refId } } )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<div class=\"gf-form-inline\">\r\n\r\n\t<div class=\"gf-form\"  >\r\n\t\t<label class=\"gf-form-label  query-keyword width-5\" *ngIf=\"index==0\" >\r\n\t\t\tWHEN\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<ed-autocomplete-picker *ngIf=\"index!=0\"\r\n\t\t[request]=\"operators$\"\r\n\t\t[value]=\"condition.operator.toUpperCase()\"\r\n\t\t[readonly]=\"true\"\r\n\t\tvalueClass=\"query-keyword\"\r\n\t\twidth=\"5\"\r\n\t\t(pick)=\"condition.operator=$event.toLowerCase()\"\t>\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<ed-autocomplete-picker\r\n\t\t[(ngModel)]=\"condition.reducer\"\r\n\t\t[formatString]=\"'{0}()'\"\r\n\t\t[request]=\"reducers$\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<div class=\"gf-form mr-1\"  >\r\n\t\t<label class=\"gf-form-label query-keyword\" >\r\n\t\t\tOF\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<alert-query-editor [query]=\"condition.query\"></alert-query-editor>\r\n\r\n\t<div class=\"gf-form mr-1\"  ></div>\r\n\r\n\t<ed-autocomplete-picker\r\n\t\t[value]=\"evaluator\" \r\n\t\t[request]=\"evaluators$\"\r\n\t\t(pick)=\"onEvaluatorPick( $event )\" \r\n\t\tvalueClass=\"query-keyword\">\r\n\t</ed-autocomplete-picker>\r\n\r\n\t<ed-textbox\t*ngIf=\"showEvalParamFrom\"\r\n\t\t[(ngModel)]=\"evalParamFrom\"\r\n\t\twidth=\"9\"\r\n\t\ttype=\"number\" >\r\n\t</ed-textbox>\r\n\r\n\t<ed-textbox\t*ngIf=\"showEvalParamTo\"\r\n\t\t[(ngModel)]=\"evalParamTo\"\r\n\t\tlabel=\"TO\"\r\n\t\tlabelClass=\"query-keyword\"\r\n\t\twidth=\"9\"\r\n\t\ttype=\"number\" >\r\n\t</ed-textbox>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit(condition)\">\r\n\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t</label>\r\n\t</div>\r\n</div>\r\n","<div class=\"gf-form\">\r\n\t<label class=\"gf-form-label\">\r\n\t\t<span>query(</span>\r\n\r\n\t\t<query-param-picker \r\n\t\t\t[(value)]=\"query.target\"\r\n\t\t\t[items]=\"itemsTarget\">\r\n\t\t</query-param-picker>\r\n\r\n\t\t<span>,&nbsp;</span>\r\n\r\n\t\t<query-param-picker \r\n\t\t\t[(value)]=\"query.from\"\r\n\t\t\t[items]=\"itemsFrom\">\r\n\t\t</query-param-picker>\r\n\r\n\t\t<span>,&nbsp;</span>\r\n\r\n\t\t<query-param-picker \r\n\t\t\t[(value)]=\"query.to\"\r\n\t\t\t[items]=\"itemsTo\">\r\n\t\t</query-param-picker>\r\n\r\n\t\t<span>)</span>\r\n\t</label>\r\n</div>","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { AlertCondition, AlertEvalType, AlertOperator, AlertReducer,\n\tPanel, PANEL_TOKEN } from 'common';\nimport { of } from 'rxjs';\n\nimport { BaseChartEditorComponent } from '../../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-condition',\n  templateUrl: './cond.html'\n})\nexport class AlertConditionEditorComponent extends BaseChartEditorComponent  {\n\n  @Input() condition: AlertCondition;\n  @Input() index: number = 0;\n\n  @Output() removed = new EventEmitter<AlertCondition>();\n\n\tAlertEvalTypeRef = [\n\t\t'is below',\n\t\t'is above',\n\t\t'is outside range',\n\t\t'is within range',\n\t\t'has no value'\n\t]\n  \n  get reducers$() {\n\t\treturn of( Object.values( AlertReducer ));\n\t}\n\t\n\tget evaluators$(){\n\t\treturn of( [...this.AlertEvalTypeRef].map( x => x.toUpperCase() ) );\n\t}\n\n\tget evaluator() : string {\n\t\treturn this.AlertEvalTypeRef[ this.condition.evaluator.type ].toUpperCase();\n\t}\n\n\tget operators$() {\n\t\treturn of( Object.values( AlertOperator ).map( x => x.toUpperCase() ) );\n\t}\n\n\tget evaluatorType() : AlertEvalType {\n\t\treturn this.condition.evaluator.type;\n\t}\n\n\tget showEvalParamFrom(): boolean{\n\t\treturn ( this.evaluatorType != AlertEvalType.HasNoValue );\n\t}\n\n\tget showEvalParamTo() : boolean{\n\t\treturn ( this.evaluatorType == AlertEvalType.IsOutsideRange ) || \n\t\t\t( this.evaluatorType == AlertEvalType.IsWithinRange ) ;\n\t}\n\n\tget evalParamFrom() :string {\n\t\treturn this\n\t\t\t.condition\n\t\t\t.evaluator\n\t\t\t.params[ 0 ]\n\t\t\t?.toString();\n\t}\n\n\tset evalParamFrom( p: string ){\n\t\tlet from: any = parseFloat( p );\n\t\tlet to: any = parseFloat( this.evalParamTo );\n\n\t\tfrom = isNaN( from ) ? '' : from;\n\t\tto = isNaN( to ) ? '' : to;\n\t\n\t\tthis.condition.evaluator.params = this.showEvalParamTo ? [ from, to ] : [ from ];\n\n\t\tthis.refresh();\n\t}\n\n\tget evalParamTo() :string {\n\t\treturn this\n\t\t\t.condition\n\t\t\t.evaluator\n\t\t\t.params[ 1 ]\n\t\t\t?.toString();\n\t}\n\n\tset evalParamTo( p: string ){\n\t\tlet from: any = parseFloat( this.evalParamFrom );\n\t\tlet to: any = parseFloat( p );\n\n\t\tfrom = isNaN( from ) ? '' : from;\n\t\tto = isNaN( to ) ? '' : to;\n\n\t\tthis.condition.evaluator.params = [ from, to ];\n\n\t\tthis.refresh();\n\t}\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\t}\n\n\tonEvaluatorPick( e: string ){\n\t\t\n\t\tconst index = this\n\t\t\t.AlertEvalTypeRef\n\t\t\t.indexOf( e.toLowerCase() );\n\n\t\tif( -1 == index || e == this.evaluator ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.condition.evaluator.type = index;\n\t\tconst ev = this.condition.evaluator;\n\t\tconst p = ev.params;\n\n\t\tswitch( ev.type ){\n\t\t\tcase AlertEvalType.IsAbove:\n\t\t\tcase AlertEvalType.IsBelow:\n\t\t\t\tev.params = [ p[ 0 ] ?? '' ];\n\t\t\t\tbreak;\n\n\t\t\tcase AlertEvalType.HasNoValue:\n\t\t\t\tev.params = [];\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tev.params = [ p[ 0 ] ?? '', p[ 1 ] ?? '' ];\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.refresh();\n\t}\n}\n","<div class=\"gf-form-group\">\r\n\r\n\t<h5 class=\"section-heading\">Alert Config</h5>\r\n\r\n\t<ed-textbox \r\n\t\tlabel=\"Name\"\r\n\t\tlabelWidth=\"6\"\r\n\t\twidth=\"20\"\r\n\t\t[(ngModel)]=\"alert.name\">\r\n\t</ed-textbox>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-textbox \r\n\t\t\tlabel=\"Evaluate every\"\r\n\t\t\tlabelWidth=\"9\"\r\n\t\t\twidth=\"6\"\r\n\t\t\t[(ngModel)]=\"alert.frequency\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\tlabel=\"For\"\r\n\t\t\tlabelWidth=\"5\"\r\n\t\t\twidth=\"6\"\r\n\t\t\tplaceholder=\"5m\"\r\n\t\t\thint=\"If an alert rule has a configured For and the query violates\r\n\t\t\t\tthe configured threshold it will first go from OK to Pending. \r\n\t\t\t\tGoing from OK to Pending Grafana will not send any notifications.\r\n\t\t\t\tOnce the alert rule has been firing for more than For duration,\r\n\t\t\t\tit will change to Alerting and send alert notifications. \"\r\n\t\t\t[(ngModel)]=\"alert.for\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"gf-form-group \">\r\n\t<h5 class=\"section-heading\">Conditions</h5>\r\n\r\n\t<div *ngFor=\"let c of alert.conditions;let i = index\" >\r\n\t\t<editor-alert-condition \r\n\t\t\t[condition]=\"c\" \r\n\t\t\t[index]=\"i\"\r\n\t\t\t(removed)=\"onRemoveCondition( $event )\">\r\n\t\t</editor-alert-condition>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"onAddCondition()\">\r\n\t\t\t<i class=\"fa fa-plus\"></i>\r\n\t\t</label>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"gf-form-group \">\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<div class=\"gf-form\">\r\n\t\t\t<span class=\"gf-form-label width-18\">If no data or all values are null</span>\r\n\t\t\t<span class=\"gf-form-label query-keyword\">SET STATE TO</span>\r\n\t\t</div>\r\n\r\n\t\t<ed-dropdown\r\n\t\t\twidth=\"11\"\r\n\t\t\t[data]=\"availableNoDataOptions\"\r\n\t\t\t[(ngModel)]=\"alert.noDataOption\" >\r\n\t\t</ed-dropdown>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<div class=\"gf-form\">\r\n\t\t\t<span class=\"gf-form-label width-18\">If execution error or timeout</span>\r\n\t\t\t<span class=\"gf-form-label query-keyword\">SET STATE TO</span>\r\n\t\t</div>\r\n\r\n\t\t<ed-dropdown\r\n\t\t\twidth=\"11\"\r\n\t\t\t[data]=\"availableErrorOptions\"\r\n\t\t\t[(ngModel)]=\"alert.errorOption\" >\r\n\t\t</ed-dropdown>\r\n\r\n\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-button-row ed-flex\">\r\n\t\t<button class=\"btn btn-inverse\" (click)=\"onTestRule()\" [disabled]=\"testing\">\r\n\t\t\tTest Rule\r\n\t\t</button>\r\n\r\n\t\t<ed-progress message=\"evaluating rule...\"\t*ngIf=\"testing\"></ed-progress>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<div class=\"gf-form-group\" ng-if=\"ctrl.testResult\">\r\n\t<ed-json-explorer #jsonExplorer></ed-json-explorer>\r\n</div>\r\n\r\n","import { Component, Inject, ViewChild } from '@angular/core';\nimport { Panel, PANEL_TOKEN, AlertNoDataOption, AlertErrorOption, AlertCondition } from 'common';\nimport { of } from 'rxjs';\nimport { delay, finalize } from 'rxjs/operators';\nimport { DropDownComponent, ErrorMessages, Notes, JsonExplorerComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-config',\n  templateUrl: './alert-config.html'\n})\nexport class AlertConfigEditorComponent extends BaseChartEditorComponent  {\n\n  @ViewChild(JsonExplorerComponent) explorer; \n  testing : boolean;\n\n  availableNoDataOptions = DropDownComponent.wrapEnum( AlertNoDataOption );\n\n  availableErrorOptions = DropDownComponent.wrapEnum( AlertErrorOption );\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  ngOnInit(){\n    //this.onAddCondition(); // for test  \n    //console.log( new AlertCondition() );\n  }\n\n  onAddCondition(){\n    this.alert.conditions = this.alert.conditions ?? [];\n    this.alert.conditions.push( new AlertCondition() );\n  }\n\n  onRemoveCondition( c: AlertCondition ){\n    const index = this.alert.conditions.indexOf( c );\n\n    if( -1 !== index ){\n      this.alert.conditions.splice( index, 1 );\n      this.refresh();\n    }\n  }\n\n  onTestRule(){\n    this.testing = true;\n\n    of( this.alert )\n      .pipe(\n        delay(2000),\n        finalize( () => this.testing = false ))\n        .subscribe( \n          x => {\n            this.explorer.content = x;\n            \n            // if( x.error ){\n            //   Notes.error( x.error );\n            // }\n          },\n          e => Notes.error( \n            e.error?.message ?? ErrorMessages.BAD_ALERT_EVAL ))\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-notifications',\n  templateUrl: './alert-nots.html'\n})\nexport class AlertNotificationsEditorComponent extends BaseChartEditorComponent  {\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    \n\n  }\n}\n","alert notifications will be here","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-history',\n  templateUrl: './alert-history.html'\n})\nexport class AlertHistoryEditorComponent extends BaseChartEditorComponent  {\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    \n\n  }\n}\n","<ed-side-tabstrip [(ngModel)]=\"index\" *ngIf=\"alert; else invitation\">\r\n\t<ed-tab header=\"Alert Config\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert-config></editor-alert-config>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tNotifications\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert-notifications></editor-alert-notifications>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"State History\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert-history></editor-alert-history>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Delete\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<ed-dialog \r\n\t\t\t\theader=\"Delete Alert\"\r\n\t\t\t\theaderIcon=\"fa fa-trash\"\r\n\t\t\t\tvisible=\"true\"\r\n\t\t\t\t(close)=\"onClose()\" >\r\n\r\n\t\t\t\t<div class=\"text-center\">\r\n\t\t\t\t\t<div class=\"confirm-modal-text\">\r\n\t\t\t\t\t\tAre you sure you want to delete this alert rule?\r\n\t\t\t\t\t\t<div class=\"confirm-modal-text2\">\r\n\t\t\t\t\t\t\tYou need to save dashboard for the delete to take effect\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\r\n\t\t\t\t<ed-dialog-actions>\r\n\t\t\t\t\t<button (click)=\"onDelete()\" class=\"btn btn-danger\">Delete</button>\r\n\t\t\t\t\t<button (click)=\"onClose()\" class=\"ml-2 btn btn-inverse\">Cancel</button>\r\n\t\t\t\t</ed-dialog-actions>\r\n\t\t\t</ed-dialog>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-side-tabstrip>\r\n\r\n<ng-template #invitation>\r\n\t<div class=\"gf-form-group\" >\r\n\t\t<div class=\"gf-form-button-row\">\r\n\t\t\t<button class=\"btn btn-inverse\" (click)=\"onAddAlert()\">\r\n\t\t\t\t<i class=\"icon-gf icon-gf-alert\"></i>\r\n\t\t\t\tCreate Alert\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</ng-template >\r\n\r\n\r\n","alert history will be here","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN, AlertRule } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert',\n  templateUrl: './alert.html'\n})\nexport class AlertEditorComponent extends BaseChartEditorComponent  {\n \n  index: number = 0;\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    this.toggleAlertHandle( true );\n  }\n\n  ngOnInit(){\n    //this.onAddAlert(); // just for tests\n  }\n\n  ngOnDestroy(){\n    this.toggleAlertHandle( false );\n  }\n\n  onAddAlert(){\n    this.widget.alert = new AlertRule();\n  }\n\n  onClose(){\n    this.index = 0;\n  }\n\n  onDelete(){\n    // delete alert\n    this.widget.alert = undefined;\n    this.refresh();\n\n    this.onClose();\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Panel, PANEL_TOKEN, TimeRangeParser } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-time',\n  templateUrl: './time.html'\n})\nexport class TimeEditorComponent extends BaseChartEditorComponent  {\n\n  form: FormGroup;\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  ngOnInit(){\n\n\t\tthis.form = new FormGroup({\n\t\t\t'from': new FormControl( this.time.from ?? '', this.validateTime.bind( this )),\n      'shift': new FormControl(this.time.shift ?? '',  this.validateTime.bind( this )),\n      'hide': new FormControl(this.time.hide)\n    });\n\n    this\n      .form\n      .valueChanges\n      .subscribe( v => {\n        if( this.form.valid ){\n          let pull = false;\n\n          if(this.time.from !== v.from ){\n            this.time.from = v.from;\n            pull = true;\n          }\n\n          if( this.time.shift !== v.shift ) {\n            this.time.shift = v.shift;\n            pull = true;\n          }\n\n          if( this.time.hide !== v.hide ) {\n            this.time.hide = v.hide;\n          }\n\n          if( pull ){\n            this.pull();\n          }\n        }\n      });\n  }\n\n  validateTime(c: FormControl) {\n    if( !c.value ){\n      return null;\n    }\n\n    const v = `now - ${c.value}`\n\n    return ( TimeRangeParser.isValid( v ) ) ?  null : { invalidTime: true }\n  }\n}\n","<ed-tabstrip header=\"Graph\"\r\n\t[(ngModel)]=\"index\"\r\n\t(selected)=\"onTabSelected($event)\">\r\n\r\n\t<ed-tab header=\"General\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-general></editor-general>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Metrics\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-metrics></editor-metrics>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Axes\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-axes></editor-axes>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Legend\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-legend></editor-legend>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Display\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-display></editor-display>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Alert\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert></editor-alert>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Time range\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-time></editor-time>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-tabstrip>\r\n","<form [formGroup]=\"form\" #f>\r\n\t<div class=\"section gf-form-group\">\r\n\r\n\t\t<div class=\"ed-form-inline\">\r\n\t\t\t<div class=\"gf-form\">\r\n\t\t\t\t<span class=\"gf-form-label\">\r\n\t\t\t\t\t<i class=\"fa fa-clock-o\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span class=\"gf-form-label width-12\">Override relative time</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\tlabel=\"Last\"\r\n\t\t\t\tlabelWidth=\"6\"\r\n\t\t\t\twidth=\"8\"\r\n\t\t\t\tplaceholder=\"1h\"\r\n\t\t\t\tformControlName=\"from\"\t>\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"ed-form-inline\">\r\n\t\t\t<div class=\"gf-form\">\r\n\t\t\t\t<span class=\"gf-form-label\">\r\n\t\t\t\t\t<i class=\"fa fa-clock-o\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span class=\"gf-form-label width-12\">Add time shift</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\tlabel=\"Amount\"\r\n\t\t\t\tlabelWidth=\"6\"\r\n\t\t\t\twidth=\"8\"\r\n\t\t\t\tplaceholder=\"1h\"\r\n\t\t\t\tformControlName=\"shift\"\t>\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<div class=\"gf-form\">\r\n\t\t\t\t<span class=\"gf-form-label\">\r\n\t\t\t\t\t<i class=\"fa fa-clock-o\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"12\"\r\n\t\t\t\twidth=\"6\"\r\n\t\t\t\tlabel=\"Hide time override info\"\r\n\t\t\t\tformControlName=\"hide\"\t\t>\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t</div>\r\n</form>\r\n","import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'widget-editor',\n  templateUrl: './editor.html'\n})\nexport class ChartEditorComponent {\n  index: number = 0;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private location: Location){\n      this\n        .activatedRoute\n        .queryParamMap\n        .subscribe((params) => {\n          const p = params.get( 'tab' );\n\n          if( Number.isInteger( +p )){\n            this.index = +p;\n          } \n        });\n  }\n\n  onTabSelected( index: number ){\n    const url = this\n      .router\n      .createUrlTree([], {\n        relativeTo: this.activatedRoute,\n        queryParams: {tab: index},\n        queryParamsHandling: 'merge',\n      })\n      .toString()\n\n    this.location.go(url);\n  }\n}\n","import { Moment } from 'common';\r\nimport { ChartComponent } from '../../chart.c';\r\nimport { AXIS_Y_LEFT, TooltipSortOrder } from '../../chart.m';\r\nimport { ColorHelper } from 'uilib';\r\nimport { AxisUnitHelper } from '../helpers/unit-helper';\r\n\r\ndeclare var Chart: any;\r\n\r\nexport class TooltipBuilder {\r\n\r\n\treadonly ID = \"chartjs-tooltip\";\r\n\treadonly TOOLTIP_SELECTOR = \"ed-tooltip\";\r\n\r\n\tstatic build( comp: ChartComponent ){\r\n\t\tChart.Tooltip.positioners.custom = (_, event) => {\r\n\t\t\treturn {\r\n\t\t\t\tx: event.x,\r\n\t\t\t\ty: event.y\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tmode: 'index',\r\n\t\t\tposition: \"custom\",\r\n\t\t\taxis: 'x',\r\n\t\t\tintersect: false,\r\n\t\t\tcaretSize: 0,\r\n\t\t\txPadding: 10,\r\n\t\t\tbodySpacing: 5,\r\n\t\t\ttitleAlign: 'right',\r\n\t\t\tenabled: false,\r\n\t\t\tcustom: ( model ) => new TooltipBuilder( model, comp ).create()\r\n\t\t}\r\n\t}\r\n\r\n\tget root(){\r\n\t\tvar tooltipEl = document.getElementById(this.ID);\r\n\r\n\t\t// Create element on first render\r\n\t\tif(!tooltipEl) {\r\n\t\t\ttooltipEl = document.createElement('div');\r\n\t\t\ttooltipEl.id = this.ID;\r\n\r\n\t\t\ttooltipEl.innerHTML = `<div class='graph-tooltip grafana-tooltip ${this.TOOLTIP_SELECTOR}'></div>`;\r\n\r\n\t\t\tdocument.body.appendChild(tooltipEl);\r\n\t\t}\r\n\r\n\t\treturn tooltipEl;\r\n\t}\r\n\r\n\tconstructor( private model, private component: ChartComponent ){\r\n\r\n\t}\r\n\r\n\tcreate(){\r\n\t\tvar tooltipElement = this.root;\r\n\r\n\t\t// Hide if no tooltip\r\n\t\tif( this.model.opacity === 0 /*|| chart.showAnnotView*/ ) {\r\n\t\t\ttooltipElement.style.opacity = '0';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttooltipElement.classList.remove('above', 'below', 'no-transform');\r\n\t\t\r\n\t\tif (this.model.yAlign) {\r\n\t\t\ttooltipElement.classList.add(this.model.yAlign);\r\n\t\t} else {\r\n\t\t\ttooltipElement.classList.add('no-transform');\r\n\t\t}\r\n\r\n\t\tif (this.model.body) {\r\n\t\t\tthis.createBody();\r\n\t\t}\r\n\r\n\t\tthis.setPosition();\r\n\t}\r\n\r\n\tprivate setPosition(){\r\n\t\tvar tooltipElement = this.root;\r\n\t\t\r\n\t\tconst chart = this.component.control.chart;\r\n\r\n\t\tvar position = chart\r\n\t\t\t.canvas\r\n\t\t\t.getBoundingClientRect();\r\n\r\n\t\tconst elWidth = document\r\n\t\t\t.getElementsByClassName(this.TOOLTIP_SELECTOR)[ 0 ]\r\n\t\t\t.getBoundingClientRect()\r\n\t\t\t.width;\r\n\r\n\t\tconst negMargin = ( this.model.caretX + elWidth > position.width ) ?\r\n\t\t\telWidth +  2 * this.model.xPadding : 0;\r\n\t\t\r\n\t\ttooltipElement.style.opacity = '1';\r\n\t\ttooltipElement.style.position = 'absolute';\r\n\t\ttooltipElement.style.left = position.left + window.pageXOffset + this.model.caretX - negMargin + 'px';\r\n\t\ttooltipElement.style.top = position.top + window.pageYOffset + this.model.caretY + 'px';\r\n\t\ttooltipElement.style.fontFamily = this.model._bodyFontFamily;\r\n\t\ttooltipElement.style.padding = this.model.yPadding + 'px ' + this.model.xPadding + 'px';\r\n\t\ttooltipElement.style.pointerEvents = 'none';\r\n\t}\r\n\r\n\tprivate createBody(){\r\n\t\tvar tooltipElement = this.root;\r\n\t\tvar chart = this.component;\r\n\t\tvar w = this.component.store.panel.widget;\r\n\r\n\t\tvar titleLines = this.model.title || [];\r\n\t\tvar innerHtml = '';\r\n\r\n\t\ttitleLines.forEach(function(title) {\r\n\t\t\tconst date = Date.parse( title );\r\n\t\t\tconst time = Moment.format ( date );\r\n\t\t\tinnerHtml += `<div class=\"graph-tooltip-time\">${time}</div>`\r\n\t\t});\r\n\r\n\t\tconst parsedBodyLines = this.sort();\r\n\r\n\t\tparsedBodyLines.forEach( (body, i) => {\r\n\t\t\tconst { seriesName, value, color } = body;\r\n\r\n\t\t\tlet seriesNameEl = `\r\n\t\t\t\t<div class=\"graph-tooltip-series-name\">\r\n\t\t\t\t\t<i class=\"fa fa-minus\" style=\"color:${color};\"></i> ${seriesName}:\r\n\t\t\t\t</div>`\r\n\r\n\t\t\tconst ds = chart\r\n\t\t\t\t.data\r\n\t\t\t\t.datasets\r\n\t\t\t\t.find( x => x.label == seriesName );\r\n\r\n\t\t\tconst axis =   ( ds.yAxisID == AXIS_Y_LEFT ) ?\tw.axes.leftY : w.axes.rightY;\r\n\r\n\t\t\tconst decimals = w.legend.decimals ? w.legend.decimals : 1;\r\n\r\n\t\t\tconst resValue = AxisUnitHelper.getFormattedValue( value, axis.unit, decimals )\r\n\r\n\t\t\tlet valueEl = `<div class=\"graph-tooltip-value \">${resValue}</div>`;\r\n\r\n\t\t\tlet item = `\r\n\t\t\t\t<div class=\"graph-tooltip-list-item\">\r\n\t\t\t\t\t${seriesNameEl}\r\n\t\t\t\t\t${valueEl}\r\n\t\t\t\t</div>`\r\n\r\n\t\t\tinnerHtml += item;\r\n\t\t});\r\n\r\n\t\tvar tableRoot = tooltipElement.querySelector(`.${this.TOOLTIP_SELECTOR}`);\r\n\t\ttableRoot.innerHTML = innerHtml;\r\n\t}\r\n\r\n\tprivate sort() : Array<any>{\r\n\t\tfunction getBody(bodyItem) {\r\n\t\t\treturn bodyItem.lines;\r\n\t\t}\r\n\r\n\t\tvar bodyLines = this.model.body.map(getBody);\r\n\r\n\t\tconst sortOrder = this\r\n\t\t\t.component\r\n\t\t\t.widget\r\n\t\t\t.display\r\n\t\t\t.tooltipSortOrder;\r\n\r\n\t\tconst parsedBodyLines = [];\r\n\t\t\r\n\t\tbodyLines.forEach((body, i) => {\r\n\t\t\tvar colors = this.model.labelColors[ i ];\r\n\t\t\tvar color = ColorHelper.hexToRgbString( colors.backgroundColor);\r\n\r\n\t\t\tlet index = body[ 0 ].lastIndexOf( ':' );\r\n\t\t\tconst seriesName = body[ 0 ].substring( 0, index );\r\n\t\t\tconst value = parseFloat(this.model.dataPoints[ i ].value);\r\n\t\t\tparsedBodyLines.push( {seriesName, value, color} );\r\n\t\t});\r\n\r\n\t\tswitch( sortOrder ){\r\n\t\t\tcase TooltipSortOrder.Increasing:\r\n\t\t\t\tparsedBodyLines.sort( (a, b) => a.value - b.value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TooltipSortOrder.Decreasing:\r\n\t\t\t\tparsedBodyLines.sort( (a, b) => b.value - a.value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tconst res = parsedBodyLines.filter( x => {\r\n\t\t\treturn !this\r\n\t\t\t\t.component\r\n\t\t\t\t.display\r\n\t\t\t\t.getOverrideByLabel( x.seriesName )\r\n\t\t\t\t?.hideInTooltip;\r\n\t\t} )\r\n\r\n\t\treturn res;\r\n\t}\r\n}\r\n\r\n\r\n","import { ChartComponent } from '../chart.c';\r\nimport { AXIS_X, AXIS_Y_LEFT, AXIS_Y_RIGHT, Chart, ScaleType } from '../chart.m';\r\nimport { TooltipBuilder } from './drawers/tooltip';\r\nimport { AxisUnitHelper } from './helpers/unit-helper';\r\n\r\ndeclare var Chart: any;\r\n\r\nexport class OptionsProvider{\r\n\r\n\tstatic getOptions( comp: ChartComponent ){\r\n\t\tChart.defaults.global.defaultFontColor = '#e3e3e3';\r\n\t\tChart.defaults.global.defaultFontFamily = 'Roboto';\r\n\t\tChart.defaults.global.defaultFontSize = 11;\r\n\r\n\t\tconst w = comp.widget;\r\n\r\n\t\treturn {\r\n\t\t\tmaintainAspectRatio: false,\r\n\t\t\tanimation: false,\r\n\r\n\t\t\ttooltips: TooltipBuilder.build( comp ),\r\n\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\r\n\t\t\tspanGaps: true,\r\n\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [this.getAxisX( w )],\r\n\t\t\t\tyAxes: [ this.getAxisY( w, true ), this.getAxisY( w, false )] \r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tprivate static getAxisX( w: Chart ){\r\n\t\treturn {\r\n\t\t\tid: AXIS_X,\r\n\t\t\ttype: 'time',\r\n\t\t\tgridLines: {\r\n\t\t\t\tcolor: 'rgba( 255,255,255, 0.1)',\r\n\t\t\t},\r\n\t\t\tticks: {\r\n\t\t\t\tautoSkip: true,\r\n\t\t\t\tautoSkipPadding: 50,\r\n\t\t\t\tmaxRotation: 0,\r\n\t\t\t\tminRotation: 0,\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\ttime: {\r\n\t\t\t\tdisplayFormats: {\r\n\t\t\t\t\tsecond: 'HH:mm:ss',\r\n\t\t\t\t\tminute: 'HH:mm',\r\n\t\t\t\t\thour: 'HH:mm',\r\n\t\t\t\t\tday: 'M/D HH:mm',\r\n\t\t\t\t\tweek: 'M/D',\r\n\t\t\t\t\tmonth: 'M/D',\r\n\t\t\t\t\tyear: 'YYYY-M',\r\n\t\t\t\t },\r\n\t\t\t},\r\n\t\t\tdisplay: w.axes.x.show\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static getAxisY(w: Chart, left: boolean){\r\n\t\tconst wAxis = left ? w.axes.leftY : w.axes.rightY;\r\n\t\tconst id = left ? AXIS_Y_LEFT : AXIS_Y_RIGHT;\r\n\r\n\t\tconst axis = {\r\n\t\t\tid: id,\r\n\t\t\tdisplay: wAxis.show,\r\n\t\t\ttype: ( !wAxis.scale || wAxis.scale == ScaleType.Linear ) ? \"linear\" : \"logarithmic\",\r\n\t\t\tgridLines: {\r\n\t\t\t\tcolor: 'rgba( 255,255,255, 0.1)',\r\n\t\t\t\tzeroLineWidth: 3,\r\n\t\t\t},\r\n\t\t\tposition: left ? \"left\" : \"right\",\r\n\t\t\tscaleLabel:{\r\n\t\t\t\tdisplay: wAxis.label,\r\n\t\t\t\tlabelString: wAxis.label,\r\n\t\t\t},\r\n\t\t\tticks:{\r\n\t\t\t\tmin: wAxis.min,\r\n\t\t\t\tmax: wAxis.max,\r\n\t\t\t\tuserCallback: (label, index, labels) => {\r\n\t\t\t\t\tif( labels.length > 8 && !( index % 2 ) ){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn AxisUnitHelper.getFormattedValue( label, wAxis.unit, wAxis.decimals );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstacked: w.display.stack,\r\n\t\t}\r\n\r\n\t\treturn axis;\r\n\t}\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Panel, PANEL_TOKEN } from 'common';\r\nimport { AXIS_Y_LEFT, AXIS_Y_RIGHT, DataPointNullValueOption, DataSet } from '../chart.m';\r\nimport { ColorHelper } from 'uilib';\r\nimport { OptionsProvider } from './options-provider';\r\n\r\n@Injectable()\r\nexport class DisplayManager {\r\n\r\n\tprivate get display() {\r\n\t\treturn this\r\n\t\t\t.panel\r\n\t\t\t.widget\r\n\t\t\t.display;\r\n\t}\r\n\r\n\tprivate get options(){\r\n\t\treturn this\r\n\t\t\t.panel\r\n\t\t\t.widget\r\n\t\t\t.component\r\n\t\t\t.control\r\n\t\t\t.chart\r\n\t\t\t.options;\r\n\t}\r\n\r\n\tconstructor ( @Inject( PANEL_TOKEN ) private panel: Panel ) {\r\n\r\n\t}\r\n\r\n\tsetup(ds: DataSet) {\r\n\t\tthis.setupLines( ds );\r\n\t\tthis.setupPoints( ds );\r\n\t\tthis.setupNullValue( ds );\r\n\t}\r\n\r\n\tprivate setupLines( ds: DataSet ) {\r\n\t\tconst showLines = this.getShowLines( ds );\r\n\t\tconst lineWidth = this.getLineWidth( ds );\r\n\t\tconst fill = this.getFill( ds );\r\n\r\n\t\tlet opacity = ( fill / 10);\r\n\t\tds.fill = (/*showLines &&*/ fill > 0);\r\n\t\tds.backgroundColor = this.getLineColor( ds, opacity );\r\n\r\n\t\topacity = (showLines && lineWidth) ? 1 : 0;\r\n\t\tds.borderColor = this.getLineColor( ds, opacity );\r\n\t\tds.borderWidth = lineWidth;\r\n\r\n\t\t ds.steppedLine = this.getStaircase( ds );\r\n\r\n\t\tif( this.getDashes( ds ) ){\r\n\t\t\tconst len = this.getDashLength( ds );\r\n\t\t\tconst space = this.getDashSpace( ds );\r\n\t\t\tds.borderDash = [ len, space ]\r\n\t\t}\r\n\t\telse{\r\n\t\t\tds.borderDash = undefined;\r\n\t\t}\r\n\r\n\t\tds.order = this.getZIndex( ds );\r\n\t\tds.legend = this.getLegend( ds );\r\n\r\n\t\tds.yAxisID = ( 1 == this.getYAxis( ds ) ) ?\tAXIS_Y_LEFT: AXIS_Y_RIGHT;\r\n\t}\r\n\r\n\tprivate setupPoints( ds: DataSet ) {\r\n\t\tconst showPoints = this.getShowPoints( ds );\r\n\r\n\t\tconst opacity = showPoints ? 1 : 0\r\n\t\tconst color = this.getLineColor( ds, opacity );\r\n\r\n\t\tds.pointBorderColor = `${color}`;\r\n\t\tds.pointBackgroundColor = `${color}`;\r\n\r\n\t\tds.pointRadius = showPoints ? this.getPointRadius( ds ) : 0;\r\n\t}\r\n\r\n\tprivate setupNullValue( ds: DataSet ) {\r\n\t\tswitch ( this.display.nullValue) {\r\n\t\t\tcase DataPointNullValueOption.Connected:\r\n\t\t\t\tthis.options.spanGaps = true;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? null : p.y );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DataPointNullValueOption.Null:\r\n\t\t\t\tthis.options.spanGaps = false;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? null : p.y );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DataPointNullValueOption.NullAsZero:\r\n\t\t\t\tthis.options.spanGaps = false;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? 0 : p.y );\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tgetShowLines(ds: DataSet): boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lines ) ? o.lines : this.display.showLines;\r\n\t}\r\n\t\r\n\tgetLineWidth(ds: DataSet): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lineWidth ) ? o.lineWidth : this.display.lineWidth;\r\n\t}\r\n\r\n\tgetLineColor(ds: DataSet, opacity: number) : string{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\tconst color = ColorHelper.colors[ds.index % ColorHelper.colors.length];\r\n\t\tconst defaultColor = ColorHelper.hexToRgbString( color, opacity );\r\n\r\n\t\tconst useOverride = ( o && undefined != o.color )\r\n\t\tlet overrideColor: string;\r\n\r\n\t\tif( useOverride ){\r\n\t\t\toverrideColor = ColorHelper.hexToRgbString( o.color, opacity );\r\n\t\t}\r\n\r\n\t\treturn ( useOverride ) ? overrideColor : defaultColor;\r\n\t}\r\n\r\n\tgetFill( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lineFill ) ? o.lineFill : this.display.fill;\r\n\t}\r\n\r\n\tgetStaircase( ds: DataSet ): boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.staircase ) ? o.staircase : this.display.staircase;\r\n\t}\r\n\r\n\tgetDashes( ds: DataSet ){\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashes ) ? o.dashes : false;\r\n\t}\r\n\r\n\tgetDashLength( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashLength ) ? o.dashLength : 1;\r\n\t}\r\n\r\n\tgetDashSpace( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashSpace ) ? o.dashSpace : 1;\r\n\t}\r\n\r\n\tgetShowPoints( ds: DataSet ) : boolean {\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.points ) ? o.points : this.display.showPoints;\r\n\t}\r\n\r\n\tgetPointRadius( ds: DataSet ) : number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.pointRadius ) ? o.pointRadius : this.display.pointRadius;\r\n\t}\r\n\r\n\tgetLegend( ds: DataSet ) : boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.legend ) ? o.legend : true;\r\n\t}\r\n\r\n\tgetZIndex( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.zIndex ) ? o.zIndex : 0;\r\n\t}\r\n\r\n\tgetYAxis( ds: DataSet ){\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.yAxis ) ? o.yAxis : 1;\r\n\t}\r\n\r\n\tgetOverride( ds: DataSet ){\r\n\t\treturn this.getOverrideByLabel( ds.label );\r\n\t}\r\n\r\n\tgetOverrideByLabel( label: string ){\r\n\t\treturn this\r\n\t\t\t.display\r\n\t\t\t.overrides\r\n\t\t\t.find( x => x.alias && new RegExp( x.alias ).test( label )  )\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Moment, Series } from 'common';\r\nimport { DataSet } from '../chart.m';\r\nimport { DisplayManager } from '../view/display-manager';\r\n\r\n@Injectable()\r\nexport class DataConverter {\r\n\r\n\tconstructor( private dispay: DisplayManager ){\r\n\t\t\r\n\t}\r\n\t\r\n\ttoDataSets(data: Series[]) : DataSet[] {\r\n\t\tif (!data || 0 === data.length) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet dataSets = [];\r\n\t\tlet totalIndex = 0;\r\n\r\n\t\tdata.forEach(serie => {\r\n\t\t\tconst columns = serie.columns.slice(1);\r\n\r\n\t\t\tconst arr = [...columns.map((el, index) =>\r\n\t\t\t\tthis.toDataSet(serie, index + 1, totalIndex++))]\r\n\t\t\t\t.filter(x => x);\r\n\r\n\t\t\tdataSets = [...dataSets, ...arr];\r\n\r\n\t\t\tdataSets.forEach( x => this.dispay.setup( x ) )\r\n\t\t});\r\n\r\n\t\treturn dataSets;\r\n\t}\r\n\r\n\tprivate toDataSet(serie: Series, index: number, totalIndex:number) : DataSet {\r\n\t\tconst values = serie\r\n\t\t\t.values\r\n\t\t\t.map(x => {\r\n\t\t\t\tconst isNull = (null == x[index]);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: Moment.valueOf( x[0] ),\r\n\t\t\t\t\ty: (isNull) ? x[index] : x[index],\r\n\t\t\t\t\tisNull: isNull,\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tconst filteredValues = values\r\n\t\t\t.map(p => p.y)\r\n\t\t\t.filter(p => null != p)\r\n\t\t\t.map(p => parseFloat(p));\r\n\r\n\t\tif (0 == filteredValues.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst avg = (filteredValues.reduce((a, b) => a + b) / filteredValues.length)\r\n\r\n\t\tconst allNulls = filteredValues.every(x => x == null);\r\n\t\tconst allZeros = filteredValues.every(x => x == 0);\r\n\r\n\t\tconst ds = {\r\n\t\t\tlabel: this.generateDataSetName(serie, index),\r\n\t\t\tdata: values,\r\n\t\t\tlineTension: 0,\r\n\t\t\tmin: Math.min(...filteredValues),\r\n\t\t\tmax: Math.max(...filteredValues),\r\n\t\t\tavg: avg,\r\n\t\t\tcurrent: filteredValues.slice(-1)[0],\r\n\t\t\tallNulls: allNulls,\r\n\t\t\tallZeros: allZeros,\r\n\t\t\tindex: totalIndex,\r\n\t\t\tpointRadius:0,\r\n\t\t\tborderColor: \"#ff0000\"\r\n\t\t\t//widget: this.chart.widget,\r\n\t\t}\r\n\r\n\t\t//ds.borderColor = new ColorHelper().getColorAsArgbFunc( ds, 1 );\r\n\t\t//console.log( ds.borderColor );\r\n\r\n\t\t//this.display.setup(ds);\r\n\r\n\t\treturn ds;\r\n\t}\r\n\r\n\tprivate generateDataSetName( serie: Series, index: number ): string{\r\n\t\tlet root = `${serie.name}.${serie.columns[ index ]}`;\r\n\r\n\t\tlet tags = '';\r\n\t\tvar keys = Object.keys(serie.tags);\r\n\t\tvar keyIndex = 0;\r\n\r\n\t\tfor(var key in serie.tags){\r\n\t\t\ttags += `${keyIndex > 0 ? ', ': ''}${key}: ${serie.tags[ key ]}` ;\r\n\t\t\tkeyIndex++\r\n\t\t}\r\n\r\n\t\t// serie.tags.forEach( ( t, index ) => tags = `${tags}${index > 0 ? ',': ''} tag` )\r\n\r\n\t\tif( tags ){\r\n\t\t\troot = `${root} {${tags}}`;\r\n\t\t}\r\n\r\n\t\treturn root;\r\n\t}\r\n}","import { EventEmitter, Inject, Injectable } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { finalize, mergeMap, tap } from 'rxjs/operators';\r\nimport { Panel, TimeRangeStore, DataSourceService, PluginActivator,\r\n\tPANEL_TOKEN, TimeRange } from 'common';\r\nimport { DataConverter } from './data-converter';\r\nimport { ChartData } from '../chart.m';\r\n\r\n@Injectable()\r\nexport class DataProvider {\r\n\trequest: string;\r\n\ttimeSubs: Subscription;\r\n\r\n\tdata$ = new EventEmitter<ChartData>();\r\n\r\n\tget metrics(){\r\n\t\treturn this\r\n\t\t\t.panel\r\n\t\t\t?.widget\r\n\t\t\t?.metrics;\r\n\t}\r\n\r\n\tget range(): TimeRange{\r\n\t\tconst range = <TimeRange>this.time.range.raw;\r\n\t\tconst mod = this.panel?.widget?.time;\r\n\r\n\t\treturn this\r\n\t\t\t.time\r\n\t\t\t.converter\r\n\t\t\t.modify( range, mod )\r\n\t}\r\n\r\n\tconstructor (\r\n\t\tprivate pluginActivator: PluginActivator,\r\n\t\tprivate dsService: DataSourceService,\r\n\t\tprivate converter: DataConverter,\r\n\t\tprivate time: TimeRangeStore,\r\n\t\t@Inject( PANEL_TOKEN ) private panel: Panel ) {\r\n\r\n\t\t\tthis.timeSubs = this\r\n\t\t\t\t.time\r\n\t\t\t\t.range$\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\t//tap( _ => this.request = '' ),\r\n\t\t\t\t\tmergeMap( _ => this.pluginActivator.createDataSourceMetricsBuilder( panel ) ),\r\n\t\t\t\t\tmergeMap( mb => mb.build( this.metrics, this.range )))\r\n\t\t\t\t.subscribe( \r\n\t\t\t\t\tx => this.pull( <string>x ),\r\n\t\t\t\t\te => this.onError( e ));\r\n\t}\r\n\r\n\tdestroy(){\r\n\t\tthis.timeSubs?.unsubscribe();\r\n\t}\r\n\r\n\tupdate(){\r\n\t\tthis.time.tick();\r\n\t}\r\n\r\n\tprivate pull( request: string){\r\n\r\n\t\tif (this.request === request) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.request = request;\r\n\r\n\t\tif( request ){\r\n\t\t\tconsole.log( `pull: ${request}` );\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (!request) {\r\n\t\t\tthis.onData([])\r\n\t\t} else {\r\n\t\t\tthis.panel.loading = true;\r\n\r\n\t\t\tthis\r\n\t\t\t\t.dsService\r\n\t\t\t\t.proxy( this.metrics.dataSource, request)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tfinalize(() => this.panel.loading = false ))\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\tx => this.onData( x ),\r\n\t\t\t\t\te => this.onError( e.error?.details ?? \"error: todo\" ));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onData( x ){\r\n\t\tthis.panel.error = undefined;\r\n\r\n\t\tthis.data$.emit( {\r\n\t\t\tdatasets: this.converter.toDataSets( x )\r\n\t\t} );\r\n\t}\r\n\r\n\tprivate onError(err) {\r\n\t\tthis.panel.error = err;\r\n\r\n\t\tthis.data$.emit( {\r\n\t\t\tdatasets: []\r\n\t\t} );\r\n\t}\r\n}","import { Inject, Injectable } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { Chart, DataSet } from '../chart.m';\nimport { DataProvider } from '../data/data-provider';\nimport { DisplayManager } from '../view/display-manager';\n\n@Injectable()\nexport class ChartStore {\n\n\tprivate widget: BehaviorSubject<Chart> = new BehaviorSubject(null);\n\treadonly widget$: Observable<Chart> = this.widget.asObservable();\n\t\n\tprivate data: BehaviorSubject<DataSet[]> = new BehaviorSubject(null);\n\treadonly data$: Observable<DataSet[]> = this.data.asObservable();\n\n\tconstructor( \n\t\tpublic dataProvider: DataProvider,\n\t\tpublic display: DisplayManager,\n\t\t@Inject( PANEL_TOKEN ) public panel: Panel ){\n\n\t\t\tdataProvider\n\t\t\t\t.data$\n\t\t\t\t.subscribe( x => this.data.next( x?.datasets ?? [] ) );\n\n\t\t\tthis.widget.next( panel.widget );\n\t}\n\n\tdestroy(){\n\t\tthis.dataProvider.destroy();\n\t\tthis.widget.value.component = undefined;\n\t}\n}\n","import { Directive } from '@angular/core';\nimport { UIChart } from 'primeng';\nimport { Subscription } from 'rxjs';\nimport { ChartComponent } from '../chart.c';\nimport { Chart, ChartData, DataSet } from '../chart.m';\nimport { ChartStore } from './chart.store';\n\n@Directive() \nexport class BaseChartComponent {\n  data: ChartData;\n  widget: Chart;\n\n  get datasets():DataSet[]{\n    return this.data?.datasets;\n  }\n\n  dataSubs: Subscription;\n  widgetSubs: Subscription;\n\n  get component(): ChartComponent{\n    return this.widget.component;\n  }\n\n  get display(){\n    return this.store.display;\n  }\n\n\tconstructor( public store: ChartStore ){\n\n    this.dataSubs = store\n      .data$\n      .subscribe( x => this.data = { \n        datasets: x\n      } );\n\n    this.widgetSubs = store\n      .widget$\n      .subscribe( x => {\n        this.widget = x;\n\n        if( x ){\n          this.onWidgetReady();\n        }\n       } );\n  }\n\n  onWidgetReady(){\n\n  }\n  \n  ngOnDestroy(){\n    this.dataSubs?.unsubscribe();\n    this.widgetSubs?.unsubscribe();\n  }\n}\n","import { Directive } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Chart, Threshold} from '../chart.m';\nimport { ChartStore } from './chart.store';\n\n@Directive() \nexport class BaseChartExtension {\n\n  widgetSubs: Subscription;\n  widget: Chart;\n\n  constructor( public store: ChartStore ){\n    this.widgetSubs = store\n      .widget$\n      .subscribe( x => this.widget = x );\n  }\n\n  destroy(){\n    //console.log( \"destroy BaseChartExtension\" )\n    this.widgetSubs?.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BaseChartExtension } from '../../base/chart-base-extension';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { AXIS_X, AXIS_Y_LEFT, AXIS_Y_RIGHT, Threshold,\r\n\tThresholdAxis, ThresholdColor, ThresholdOperator } from '../../chart.m';\r\n\r\n@Injectable()\r\nexport class ThresholdDrawerPlugin extends BaseChartExtension {\r\n\t\r\n\tconstructor( store: ChartStore ){\r\n\t\tsuper( store );\r\n\t}\r\n\r\n\tafterDatasetsDraw(chart, _) {\r\n\t\tthis\r\n\t\t\t.widget\r\n\t\t\t?.display\r\n\t\t\t?.thresholds\r\n\t\t\t.forEach( t => new ThresholdDrawer( chart, t ).draw() );\r\n\t}\r\n}\r\n\r\nclass ThresholdDrawer{\r\n\tget context(){\r\n\t\treturn this.chart.chart.ctx;\r\n\t}\r\n\r\n\tconstructor( private chart: any, private threshold: Threshold ){\r\n\t\t\r\n\t}\r\n\r\n\tdraw(){\r\n\t\tif( this.threshold.value == undefined ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst scaleYA = this.chart.scales[ AXIS_Y_LEFT ];\r\n\t\tconst scaleYB = this.chart.scales[ AXIS_Y_RIGHT ];\r\n\t\tconst scaleX = this.chart.scales[ AXIS_X ];\r\n\r\n\t\tconst scaleY = ( this.threshold.axis == ThresholdAxis.Right && scaleYB ) ?\r\n\t\t\tscaleYB : scaleYA;\r\n\r\n\t\tconst offset = scaleY.getPixelForValue(this.threshold.value);\r\n\r\n\t\tconst gt = ( this.threshold.operator == ThresholdOperator.Gt );\r\n\r\n\t\tconst shouldIgnore = \r\n\t\t\t( !gt && this.threshold.value < scaleY.min ) ||\r\n\t\t\t( gt && this.threshold.value > scaleY.max ) ||\r\n\t\t\t( !this.chart.data.datasets.length );\r\n\r\n\t\tif( shouldIgnore ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if( offset < 0 || offset > scaleY.bottom ){\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\t//console.log( `${offset} | ${scaleY.bottom}` )  \r\n\r\n\t\tif( this.threshold.line ){\r\n\t\t\tconst lineColor = this.getColor( false );\r\n\t\t\tthis.renderLine( scaleX, lineColor, offset );\r\n\t\t}\r\n\r\n\t\tif( this.threshold.fill ){\r\n\t\t\tthis.renderRectangle( scaleX, scaleY, offset );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderLine(scaleX, color, offset ){\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.strokeStyle = color + \"99\";\r\n\t\tthis.context.lineWidth = 2;\r\n\t\tthis.context.moveTo( scaleX.left, offset);\r\n\t\tthis.context.lineTo( scaleX.right, offset);\r\n\t\tthis.context.stroke();\r\n\t}\r\n\r\n\tprivate renderRectangle( scaleX, scaleY, offset ){\r\n\t\tconst color = this.getColor( true );\r\n\r\n\t\tconst gt = ( this.threshold.operator == ThresholdOperator.Gt );\r\n\t\tthis.context.fillStyle = color + \"22\"\r\n\r\n\t\tconst x = scaleX.left;\r\n\t\tconst w = scaleX.width;\r\n\r\n\t\tconst topY = scaleY.getPixelForValue(scaleY.max);\r\n\t\tconst bottomY = scaleY.getPixelForValue(scaleY.min);\r\n\r\n\t\tconst y = gt ? topY : Math.max( topY, offset );\r\n\t\tlet h = gt ? offset - scaleY.top : scaleY.bottom - offset;\r\n\r\n\t\th = Math.min( bottomY - topY, h )\r\n\r\n\t\tthis.context.fillRect( x, y,\tw, h );\t\r\n\t}\r\n\r\n\tprivate getColor(fill){\r\n\t\tswitch( this.threshold.colorType ){\r\n\t\t\tcase ThresholdColor.Critical:\r\n\t\t\t\treturn '#ED2E18';\r\n\r\n\t\t\tcase ThresholdColor.Ok:\r\n\t\t\t\treturn '#10a345';\r\n\r\n\t\t\tcase ThresholdColor.Warning:\r\n\t\t\t\treturn '#f79520';\r\n\t\t}\r\n\r\n\t\tconst defaultColor = '#ffffff';\r\n\r\n\t\tif( fill ){\r\n\t\t\treturn this.threshold.fillColor ? this.threshold.fillColor : defaultColor;\r\n\t\t}\r\n\r\n\t\treturn this.threshold.lineColor ? this.threshold.lineColor : defaultColor;\r\n\t}\r\n}","import { Inject, Injectable } from '@angular/core';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { PixelHelper } from '../helpers/pixel-helper';\r\n\r\n\r\n@Injectable()\r\nexport class TrackballDrawerPlugin {\r\n\r\n\tconstructor( private store: ChartStore ){\r\n\r\n\t}\r\n\r\n\tafterDatasetsDraw(chart, easing) {\r\n\t\t//console.log( \"trackball plugin\" )\r\n\t\treturn;\r\n\t\t\r\n\t\tconst context = chart.chart.ctx;\r\n\r\n\t\tconst scaleX = chart.scales['x-axis-0'];\r\n\t\t\r\n\t\t//const scaleYA = chart.scales[ \"A\" ];\r\n\t\tconst scaleYA = chart.scales[ \"y-axis-0\" ];\r\n\r\n\t\tvar pos = this.getMousePos( chart.canvas, chart.trackball );\r\n\r\n\t\tconsole.log( pos );\r\n\r\n\t\tconst shouldIgnore = \r\n\t\t\t( !chart.trackball ) ||\r\n\t\t\t( 0 == chart.data.datasets.length ) ||\r\n\t\t\t( pos.x < scaleX.left || pos.x > scaleX.right );\r\n\r\n\t\tif( shouldIgnore ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst lw = 0.8;\r\n\t\tconst x = PixelHelper.alignPixel( chart, pos.x, lw )\r\n\t\tconst y1 = PixelHelper.alignPixel( chart, scaleYA.top, lw )\r\n\t\tconst y2 = PixelHelper.alignPixel( chart, scaleYA.bottom, lw )\r\n\r\n\t\tcontext.beginPath();\r\n\t\tcontext.strokeStyle = \"#880015\";\r\n\t\tcontext.lineWidth = lw;\r\n\t\tcontext.moveTo( x, y1 );\r\n\t\tcontext.lineTo( x, y2);\r\n\t\tcontext.stroke();\r\n\t}\r\n\r\n\tgetMousePos(canvas, evt) {\r\n\t\tif( !evt ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top\r\n    };\r\n\t}\r\n\r\n}","\r\nexport class PixelHelper {\r\n\tpublic static alignPixel( chart, pixel, width) {\r\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\r\n\t\tvar halfWidth = width / 2;\r\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n\t};\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Moment } from 'common';\r\nimport { BaseChartExtension } from '../../base/chart-base-extension';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { AXIS_X, AXIS_Y_LEFT, TimeRegion, TimeRegionColor, TimeRegionDay } from '../../chart.m';\r\nimport { OptionsProvider } from '../options-provider';\r\n\r\n@Injectable()\r\nexport class TimeRegionsDrawerPlugin extends BaseChartExtension {\r\n\r\n\tafterDatasetsDraw(chart, _) {\r\n\t\tthis\r\n\t\t\t.widget\r\n\t\t\t?.display\r\n\t\t\t?.timeRegions\r\n\t\t\t.forEach( t => new TimeRegionDrawer( chart, t ).draw() );\r\n\t}\r\n\r\n\tconstructor( store: ChartStore ){\r\n\t\tsuper( store );\r\n\t}\r\n}\r\n\r\nclass TimeRegionDrawer{\r\n\r\n\tget context(){\r\n\t\treturn this.chart.chart.ctx;\r\n\t}\r\n\r\n\tconstructor( private chart: any, private timeRegion: TimeRegion ){\r\n\t\t\r\n\t}\r\n\t\r\n\tdraw(){\r\n\t\tconst scaleX = this.chart.scales[ AXIS_X ];\r\n\r\n\t\tconst minX = Moment.create( scaleX.min );\r\n\t\tconst maxX = Moment.create ( scaleX.max );\r\n\r\n\t\tthis\r\n\t\t\t.getSpans( minX, maxX )\r\n\t\t\t.forEach( x => {\r\n\t\t\t\tlet os = scaleX.getPixelForValue(x.start.toDate());\r\n\t\t\t\tlet oe = scaleX.getPixelForValue(x.end.toDate());\r\n\r\n\t\t\t\tif(! ( oe <  scaleX.left || os > scaleX.right ) ){\r\n\t\t\t\t\tos = Math.max( os, scaleX.left );\r\n\t\t\t\t\toe = Math.min( oe, scaleX.right );\r\n\r\n\t\t\t\t\tthis.renderRegion( os, oe );\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t}\r\n\r\n\tprivate getSpans( min, max ){\r\n\t\tconst borders = this.getSpanBorders( min, max );\r\n\t\tconst time = this.getTime();\r\n\r\n\t\treturn this.isSpecificDayOfWeek() ? \r\n\t\t\tthis.getSpansDayOfWeek( borders, time ) : \r\n\t\t\tthis.getSpansAny( borders, time )\r\n\t}\r\n\r\n\tprivate getTime(){\r\n\t\tconst isSpecificDayOfWeek = this.isSpecificDayOfWeek();\r\n\r\n\t\tlet inputFromTime = this.timeRegion.fromTime;\r\n\t\tlet inputToTime = this.timeRegion.toTime;\r\n\r\n\t\tconst timeFormat = \"HH:mm\";\r\n\r\n\t\tlet tf = Moment.create(inputFromTime, timeFormat);\r\n\t\tlet tt = Moment.create(inputToTime, timeFormat);\r\n\r\n\t\tif( !tf.isValid() && !tt.isValid() ){\r\n\t\t\tif( isSpecificDayOfWeek ){\r\n\t\t\t\tconst midnight = Moment.create( \"00:00\", timeFormat );\r\n\t\t\t\ttf = midnight.clone();\r\n\t\t\t\ttt = midnight.clone();\r\n\t\t\t}\r\n\t\t} else if( tf.isValid() && !tt.isValid() ){\r\n\t\t\ttt = tf.clone();\r\n\t\t} else if( !tf.isValid() && tt.isValid() ){\r\n\t\t\ttf = tt.clone();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tfrom: ( tf.isValid() ) ? tf.toDate() : undefined,\r\n\t\t\tto: ( tt.isValid() ) ? tt.toDate() : undefined\r\n\t\t}\r\n\t}\r\n\tprivate getSpansDayOfWeek( borders, time ){\r\n\t\tconst max = borders.to;\r\n\t\tconst min = borders.from;\r\n\r\n\t\tvar current = min.clone();\r\n\t\tvar res = [];\r\n\r\n\t\tvar fromDayName = this.timeRegion.fromDay;//TimeRegionDay[  ]\r\n\t\tvar toDayName = this.timeRegion.toDay;//TimeRegionDay[  ];\r\n\t\t\r\n\t\twhile( current < max ){\r\n\t\t\tvar start = current.clone().day( fromDayName );\r\n\t\t\tvar end = start.clone().day( toDayName );\r\n\t\r\n\t\t\tif( end.isBefore( start ) ){\r\n\t\t\t\tend.add( 1, 'weeks' )\r\n\t\t\t}\r\n\r\n\t\t\tstart.set({\r\n\t\t\t\t'hour' : time.from.getHours(),\r\n\t\t\t\t'minute'  : time.from.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tend.set({\r\n\t\t\t\t'hour' : time.to.getHours(),\r\n\t\t\t\t'minute'  : time.to.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tres.push( { start, end } )\r\n\t\r\n\t\t\tcurrent.add( 1, 'weeks' );\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprivate getSpansAny( borders, time ){\r\n\t\tconst max = borders.to;\r\n\t\tconst min = borders.from;\r\n\r\n\t\tvar current = min.clone();\r\n\t\tvar res = [];\r\n\r\n\t\tif( !time.from && !time.to ){\r\n\t\t\treturn res;\r\n\t\t}\r\n\r\n\t\twhile( current < max ){\r\n\t\t\tvar start = current.clone().set({\r\n\t\t\t\t'hour' : time.from.getHours(),\r\n\t\t\t\t'minute'  : time.from.getMinutes()\r\n\t\t\t });\r\n\t\r\n\t\t\tvar end = current.clone().set({\r\n\t\t\t\t'hour' : time.to.getHours(),\r\n\t\t\t\t'minute'  : time.to.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tif( end.isBefore( start ) ){\r\n\t\t\t\tend.add( 1, 'days' );\r\n\t\t\t}\r\n\r\n\t\t\tres.push( { start, end } )\r\n\t\r\n\t\t\tcurrent.add( 1, 'days' );\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprivate getSpanBorders( min, max ){\r\n\t\tconst margin = this.isSpecificDayOfWeek() ? 8 : 1;\r\n\r\n\t\tconst from = min\r\n\t\t\t.clone()\r\n\t\t\t.subtract( margin, 'days' )\r\n\t\t\t.startOf( 'day' );\r\n\r\n\t\tconst to = max\r\n\t\t\t.clone()\r\n\t\t\t.add( margin, 'days' )\r\n\t\t\t.endOf( 'day' );\r\n\r\n\t\treturn { from, to }\r\n\t}\r\n\r\n\tprivate isSpecificDayOfWeek(){\r\n\t\treturn ( this.timeRegion.fromDay != TimeRegionDay.Any ) ||\r\n\t\t\t( this.timeRegion.toDay != TimeRegionDay.Any );\r\n\t}\r\n\r\n\tprivate renderRegion( offsetStart, offsetEnd){\r\n\r\n\t\tconst scaleYA = this.chart.scales[ AXIS_Y_LEFT ];\r\n\t\tconst scaleX = this.chart.scales[ AXIS_X ];\r\n\r\n\t\tconst minY = scaleYA.top;\r\n\t\tconst maxY = scaleYA.bottom;\r\n\r\n\t\tif( this.timeRegion.line ){\r\n\t\t\tif( scaleX.left != offsetStart ){\r\n\t\t\t\tthis.renderLine( minY, maxY, offsetStart );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( scaleX.right != offsetEnd && offsetEnd != offsetStart){\r\n\t\t\t\tthis.renderLine( minY, maxY, offsetEnd );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.timeRegion.fill && offsetEnd != offsetStart  ){\r\n\t\t\tthis.renderRectangle( minY, maxY, offsetStart, offsetEnd );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderLine( minY, maxY, offset ){\r\n\t\tconst color = this.getColor( false );\r\n\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.strokeStyle = color + \"99\";\r\n\t\tthis.context.lineWidth = 2;\r\n\t\tthis.context.moveTo( offset, minY );\r\n\t\tthis.context.lineTo( offset, maxY );\r\n\t\tthis.context.stroke();\r\n\t}\r\n\r\n\tprivate renderRectangle( minY, maxY, offsetStart, offsetEnd  ){\r\n\t\tconst color = this.getColor( true );\r\n\t\t\r\n\t\tthis.context.fillStyle = color + \"22\"\r\n\r\n\t\tconst x = offsetStart;\r\n\t\tconst w = offsetEnd - offsetStart;\r\n\r\n\t\tconst y = minY;\r\n\t\tconst h = maxY - minY;\r\n\r\n\t\tthis.context.fillRect( x, y,\tw, h );\t\r\n\t}\r\n\r\n\tprivate getColor( fill){\r\n\t\tswitch( this.timeRegion.colorType ){\r\n\t\t\tcase TimeRegionColor.Red:\r\n\t\t\t\treturn '#ED2E18';\r\n\r\n\t\t\tcase TimeRegionColor.Green:\r\n\t\t\t\treturn '#10a345';\r\n\r\n\t\t\tcase TimeRegionColor.Blue:\r\n\t\t\t\treturn '#1f78c1';\r\n\r\n\t\t\tcase TimeRegionColor.Yellow:\r\n\t\t\t\treturn '#f79520';\r\n\r\n\t\t\tcase TimeRegionColor.Gray:\r\n\t\t\t\treturn '#fce2de';\r\n\t\t}\r\n\r\n\t\tconst defaultColor = '#ffffff';\r\n\r\n\t\tif( fill ){\r\n\t\t\treturn this.timeRegion.fillColor ? this.timeRegion.fillColor : defaultColor;\r\n\t\t}\r\n\r\n\t\treturn this.timeRegion.lineColor ? this.timeRegion.lineColor : defaultColor;\r\n\t}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AlertEvalType, AlertEvaluator } from 'common';\r\nimport { ColorHelper } from 'uilib';\r\nimport { BaseChartExtension } from '../../base/chart-base-extension';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { AXIS_X, AXIS_Y_LEFT } from '../../chart.m';\r\n\r\n@Injectable()\r\nexport class AlertDrawerPlugin extends BaseChartExtension {\r\n\r\n\tconstructor( store: ChartStore ){\r\n\t\tsuper( store );\r\n\t}\r\n\r\n\tafterDatasetsDraw(chart, _) {\r\n\t\tconst conditions = this\r\n\t\t\t.widget\r\n\t\t\t?.alert\r\n\t\t\t?.conditions;\r\n\r\n\t\tif( conditions?.length ){\r\n\t\t\tnew AlertDrawer( chart, conditions[ 0 ].evaluator ).draw()\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass AlertDrawer{\r\n\r\n\tstatic readonly LINE_COLOR = ColorHelper.hexToRgbString( \r\n\t\tColorHelper.ALERTING_COLOR, 0.6 )\r\n\r\n\tstatic readonly FILL_COLOR = ColorHelper.hexToRgbString( \r\n\t\tColorHelper.ALERTING_COLOR, ColorHelper.REGION_FILL_ALPHA )\r\n\r\n\tget context(){\r\n\t\treturn this.chart.chart.ctx;\r\n\t}\r\n\r\n\tget scaleY(){\r\n\t\treturn this.chart.scales[ AXIS_Y_LEFT ];\r\n\t}\r\n\r\n\tget scaleX(){\r\n\t\treturn this.chart.scales[ AXIS_X ];\r\n\t}\r\n\r\n\tconstructor( private chart: any, private evaluator: AlertEvaluator ){\r\n\t\t\r\n\t}\r\n\r\n\tdraw(){\r\n\t\tconst offset1 = this.scaleY.getPixelForValue(+this.evaluator.params[ 0 ]);\r\n\t\tconst offset2 = this.scaleY.getPixelForValue(+this.evaluator.params[ 1 ]);\r\n\r\n\t\tconst topY = this.scaleY.getPixelForValue(this.scaleY.max);\r\n\t\tconst bottomY = this.scaleY.getPixelForValue(this.scaleY.min);\r\n\r\n\t\tswitch( +this.evaluator.type ){\r\n\t\t\tcase AlertEvalType.IsAbove:\r\n\t\t\t\tif( !( topY > offset1 || bottomY < offset1 ) ){\r\n\t\t\t\t\tthis.renderLine( offset1 );\r\n\t\t\t\t\tthis.renderRectangle( offset1, true );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AlertEvalType.IsBelow:\r\n\t\t\t\tif( !( topY > offset1 || bottomY < offset1 ) ){\r\n\t\t\t\t\tthis.renderLine( offset1 );\r\n\t\t\t\t\tthis.renderRectangle( offset1, false );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase AlertEvalType.IsWithinRange:\r\n\t\t\t\tif( !( topY > offset1 || bottomY < offset1 || topY > offset2 || bottomY < offset2 ) ){\r\n\t\t\t\t\tthis.renderLine( offset1 );\r\n\t\t\t\t\tthis.renderLine( offset2 );\r\n\t\t\t\t\tthis.renderRectangleBetween( offset1, offset2 );\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase AlertEvalType.IsOutsideRange:\r\n\t\t\t\t\tif( !( topY > offset1 || bottomY < offset1 || topY > offset2 || bottomY < offset2 ) ){\r\n\t\t\t\t\t\tthis.renderLine( offset1 );\r\n\t\t\t\t\t\tthis.renderLine( offset2 );\r\n\t\t\t\t\t\tthis.renderRectangle( offset1, false );\r\n\t\t\t\t\t\tthis.renderRectangle( offset2, true );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderLine( offset: number ){\r\n\t\tthis.context.beginPath();\r\n\t\t\tthis.context.strokeStyle = AlertDrawer.LINE_COLOR;\r\n\t\t\r\n\t\tthis.context.lineWidth = 2;\r\n\t\tthis.context.moveTo( this.scaleX.left, offset);\r\n\t\tthis.context.lineTo( this.scaleX.right, offset);\r\n\t\tthis.context.stroke();\r\n\t}\r\n\r\n\tprivate renderRectangle( offset: number, gt: boolean ){\r\n\t\tthis.context.fillStyle = AlertDrawer.FILL_COLOR \r\n\r\n\t\tconst x = this.scaleX.left;\r\n\t\tconst w = this.scaleX.width;\r\n\r\n\t\tconst topY = this.scaleY.getPixelForValue(this.scaleY.max);\r\n\t\tconst bottomY = this.scaleY.getPixelForValue(this.scaleY.min);\r\n\r\n\t\tconst y = gt ? topY : Math.max( topY, offset );\r\n\t\tlet h = gt ? offset - this.scaleY.top : this.scaleY.bottom - offset;\r\n\r\n\t\th = Math.min( bottomY - topY, h )\r\n\r\n\t\tthis.context.fillRect( x, y, w, h );\t\r\n\t}\r\n\r\n\tprivate renderRectangleBetween( offset1, offset2 ){\r\n\t\tthis.context.fillStyle = AlertDrawer.FILL_COLOR;\r\n\r\n\t\tconst x = this.scaleX.left;\r\n\t\tconst w = this.scaleX.width;\r\n\r\n\t\tthis.context.fillRect( x, offset1,\tw, offset2 - offset1 );\t\r\n\t}\r\n}","import { Injectable } from '@angular/core';\r\nimport { AlertDrawerPlugin } from './alert';\r\nimport { ThresholdDrawerPlugin } from './thresholds';\r\nimport { TimeRegionsDrawerPlugin } from './time-regions';\r\nimport { TrackballDrawerPlugin } from './trackball';\r\n\r\n@Injectable()\r\nexport class ExtensionsManager {\r\n\t\r\n\tget list() : ChartJsExtension[] {\r\n\t\treturn [\r\n\t\t\tthis.thresholds,\r\n\t\t\tthis.timeRegions,\r\n\t\t\tthis.alerts\r\n\t\t]\r\n\t}\r\n\r\n\tconstructor( \r\n\t\tprivate thresholds: ThresholdDrawerPlugin,\r\n\t\tprivate trackball: TrackballDrawerPlugin,\r\n\t\tprivate timeRegions: TimeRegionsDrawerPlugin,\r\n\t\tprivate alerts: AlertDrawerPlugin ){\r\n\r\n\t}\r\n\r\n\tdestroy(){\r\n\t\tthis.list.forEach( x => x.destroy() );\r\n\t}\r\n}\r\n\r\nexport interface ChartJsExtension{\r\n\tafterDatasetsDraw(chart, easing);\r\n\tdestroy();\r\n}","<div class=\"chart__wrapper\">\n\n  <div class=\"chart__right-legend-cont\">\n\n    <div class=\"chart__canvas-cont\">\n      <p-chart \n        type=\"line\"\n        [data]=\"data\"\n        [options]=\"options\"\n        [plugins]=\"plugins\"\n        height=\"100%\" #chart>\n      </p-chart>\n    </div>\n\n    <alert-handle *ngIf=\"showAlertHandle && widget?.alert\"></alert-handle>\n\n    <chart-legend *ngIf=\"legend.show && legend?.right\" class=\"chart__legend-right\"></chart-legend>\n    \n  </div>\n\n  <chart-legend *ngIf=\"legend.show && !legend?.right\" class=\"chart__legend-bottom\"></chart-legend>\n\n</div>\n\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\n\nimport { OptionsProvider } from './view/options-provider';\nimport { DisplayManager } from './view/display-manager';\nimport { ChartStore } from './base/chart.store';\nimport { UIChart } from 'primeng';\nimport { BaseChartComponent } from './base/chart-base';\nimport { ChartJsExtension, ExtensionsManager } from './view/drawers/extensions-manager';\nimport { TrackballDrawerPlugin } from './view/drawers/trackball';\nimport { ThresholdDrawerPlugin } from './view/drawers/thresholds';\nimport { TimeRegionsDrawerPlugin } from './view/drawers/time-regions';\nimport { DataProvider } from './data/data-provider';\nimport { DataConverter } from './data/data-converter';\nimport { AlertDrawerPlugin } from './view/drawers/alert';\n\n@Component({\n  selector: 'widget',\n  templateUrl:'./chart.html',\n  styleUrls: ['./chart.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers:[\n    DataProvider,\n    DataConverter,\n    DisplayManager,\n    ChartStore,\n    \n    ExtensionsManager,\n    TrackballDrawerPlugin,\n    ThresholdDrawerPlugin,\n    TimeRegionsDrawerPlugin,\n    AlertDrawerPlugin\n  ]\n})\nexport class ChartComponent extends BaseChartComponent {\n  \n  options: any;\n  plugins: ChartJsExtension[];\n  @ViewChild( UIChart ) control;\n\n  showAlertHandle: boolean = false;\n\n  get legend(){\n    return this.widget?.legend;\n  }\n\n  constructor( store: ChartStore, private extensions: ExtensionsManager ) {\n    super( store )\n\n    this.options = OptionsProvider.getOptions( this );\n\n    this.plugins = extensions.list;\n  }\n\n  ngAfterViewInit(){\n    this.widget.component = this;\n  }\n\n  ngOnDestroy(){\n    this.store.destroy();\n    this.extensions.destroy();\n  }\n}\n","<div class=\"alert-wrapper mr-3\" #wrapper >\r\n\r\n\t<div class=\"alert-handle ed-flex ml-3\" \r\n\t\t[ngStyle]=\"{'top.px': pixel2}\" \r\n\t\t(mousedown)=\"onGripClick( $event, 2 )\"\r\n\t\t*ngIf=\"showSecondHandle\" >\r\n\r\n\t\t<div class=\"alert-handle-line2\" ></div>\t\r\n\r\n\t\t<div class=\"alert-handle\" >\r\n\t\t\t<i class=\"icon-gf icon-gf-critical alert-state-critical\"></i>\r\n\t\t\t<span class=\"alert-handle-value\">{{evaluatorParam2}}<i class=\"alert-handle-grip\"></i></span>\r\n\t\t</div>\r\n\r\n\t</div>\r\n\r\n\t<div class=\"alert-handle ed-flex\" \r\n\t\t[ngStyle]=\"{'top.px': pixel1}\"\r\n\t\t(mousedown)=\"onGripClick( $event, 1 )\" #handle >\r\n\r\n\t\t<div class=\"alert-handle-line\" ></div>\t\r\n\r\n\t\t<div class=\"alert-handle\" >\r\n\t\t\t<i class=\"icon-gf icon-gf-critical alert-state-critical\"></i>\r\n\t\t\t<span class=\"alert-handle-value\">{{evaluatorParam1}}<i class=\"alert-handle-grip\"></i></span>\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n\r\n</div>\r\n","import { Component, ViewChild, ElementRef, Inject } from '@angular/core';\r\nimport { AlertEvalType, AlertEvaluator, Panel, PANEL_TOKEN } from 'common';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\r\nimport { ChartStore } from '../../../base/chart.store';\r\nimport { AXIS_X, AXIS_Y_LEFT } from '../../../chart.m';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n\tselector: 'alert-handle',\r\n\ttemplateUrl: './handle.html',\r\n\tstyleUrls: [\r\n\t\t'./handle.scss']\r\n})\r\nexport class AlertHandleComponent extends BaseChartEditorComponent {\r\n\tresizeFuncHandler: any;\r\n\tstopResizeFuncHandler: any;\r\n\r\n\t@ViewChild( \"handle\" ) handle : ElementRef;\r\n\t@ViewChild( \"wrapper\" ) wrapper : ElementRef;\r\n\r\n\tget handleMidHeight() : number{\r\n\t\treturn 14;/*this\r\n\t\t\t.handle\r\n\t\t\t?.nativeElement\r\n\t\t\t.offsetHeight / 2*/14;\r\n\t}\r\n\r\n\tget scale(){\r\n\t\treturn this.chartControl.scales[ AXIS_Y_LEFT ];;\r\n\t}\r\n\r\n\tget evaluator() : AlertEvaluator{\r\n\t\tconst conds = this.alert?.conditions;\r\n\r\n\t\treturn conds ? conds[ 0 ].evaluator : undefined;\r\n\t}\r\n\r\n\tget evaluatorParam1(){\r\n\t\treturn this\r\n\t\t\t?.evaluator\r\n\t\t\t?.params[ 0 ];\r\n\t}\r\n\r\n\tget evaluatorParam2(){\r\n\t\treturn this\r\n\t\t\t?.evaluator\r\n\t\t\t?.params[ 1 ];\r\n\t}\r\n\r\n\tset evaluatorParam1( v: any ){\r\n\t\tif( !this.evaluator ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis\r\n\t\t\t.evaluator\r\n\t\t\t.params[ 0 ] = v;\r\n\t}\r\n\r\n\tset evaluatorParam2( v: any ){\r\n\t\tif( !this.evaluator ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis\r\n\t\t\t.evaluator\r\n\t\t\t.params[ 1 ] = v;\r\n\t}\r\n\r\n\tget pixel1():number{\r\n\t\treturn this.getPixel( this.evaluatorParam1 )\r\n\t}\r\n\r\n\tget pixel2():number{\r\n\t\treturn this.getPixel( this.evaluatorParam2 )\r\n\t}\r\n\r\n\tgetPixel( p: number ){\r\n\t\tif( !this.scale ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet v = Math.max( this.scale.min, p );\r\n\t\tv = Math.min( this.scale.max, v );\r\n\r\n\t\treturn this\r\n\t\t\t.scale\r\n\t\t\t?.getPixelForValue( v ) - this.handleMidHeight\r\n\t}\r\n\r\n\tget showSecondHandle(){\r\n\t\tswitch( +this.evaluator?.type ){\r\n\t\t\tcase AlertEvalType.IsWithinRange:\r\n\t\t\tcase AlertEvalType.IsOutsideRange:\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconstructor( @Inject( PANEL_TOKEN ) panel: Panel ){\r\n\t\tsuper( panel );\r\n\r\n\t}\r\n\t\r\n\tonGripClick(e, index){\r\n\t\te.preventDefault();\r\n\r\n\t\tconst offset = this.wrapper.nativeElement.getBoundingClientRect().top + window.scrollY;\r\n\t\tconst top = offset + e.offsetY;\r\n\r\n\t\tlet resizeFunc = function (e) {\r\n      e.preventDefault();\r\n\r\n\t\t\tthis.calculateValueForPixel( e.clientY - top, index );\r\n\r\n\t\t\tthis.refresh();\r\n    }\r\n\r\n\t\tlet stopResizeFunc = (e) => {\r\n      window.removeEventListener('mousemove', this.resizeFuncHandler, true);\r\n\t\t\twindow.removeEventListener('mouseup', this.stopResizeFuncHandler, true);\r\n\t\t}\r\n\t\t\r\n\t\tthis.resizeFuncHandler = resizeFunc.bind(this);\r\n    this.stopResizeFuncHandler = stopResizeFunc.bind(this);\r\n\r\n\t\twindow.addEventListener('mousemove', this.resizeFuncHandler, true);\r\n    window.addEventListener('mouseup', this.stopResizeFuncHandler, true);\r\n\t}\r\n\r\n\tcalculateValueForPixel( pix: number, index: number ){\r\n\t\tconst minY = this.scale.getPixelForValue( this.scale.min ) - this.handleMidHeight;\r\n\r\n\t\tconst maxY = -this.handleMidHeight;\r\n\r\n\t\tvar pricePixel = Math.min( minY, Math.max( maxY, pix ) );\r\n\t\tvar preciseValue = this.scale.getValueForPixel( pricePixel + this.handleMidHeight );\r\n\t\tvar roundedValue = this.round( preciseValue );\r\n\t\r\n\t\tif( 1 == index ){\r\n\t\t\tthis.evaluatorParam1 = roundedValue;\r\n\t\t} else {\r\n\t\t\tthis.evaluatorParam2 = roundedValue;\r\n\t\t}\r\n\t}\r\n\r\n\tround( v: number ) : number{\r\n\t\tconst dec1 = this.countDecimals( this.scale.max );\r\n\t\tconst dec2 = this.countDecimals( this.scale.min );\r\n\r\n\t\treturn +v.toFixed( Math.max( dec1, dec2 ) )\r\n\t}\r\n\r\n\tcountDecimals(value) {\r\n    if(Math.floor(value) === value) return 0;\r\n    return value.toString().split(\".\")[1].length || 0; \r\n\t}\r\n}\r\n\r\n\r\n","<div class=\"legend__top-wrapper\">\n\n\t<div *ngIf=\"!legend.table; else legendAsTable\" class=\"legend__bottom\"    >\n\t\t<perfect-scrollbar>\n\t\t\t\t\n\t\t\t<div class=\"legend__scroller-cont\"  >\n\n\t\t\t\t<div class=\"legend__series-wrapper\" [@fadeInOut] *ngIf=\"datasets?.length\"  >\n\t\t\t\t\t<div *ngFor=\"let ds of filteredDatasets\" class=\"legend__series\"\n\t\t\t\t\t (click)=\"onSeriesClicked(ds, $event)\" [ngClass]=\"{'hidden': ds.hidden }\">\n\n            <div class=\"legend__icon\" [style.color]=\"color( ds )\">\n              <i class=\"fa fa-minus pointer\" ></i>\n            </div>\n              \n            <a class=\"legend__alias pointer\" [title]=\"ds.label\">{{ds.label}}</a>\n\n            <div class=\"legend__value min\" *ngIf=\"legend.min\">{{min(ds)}}</div>\n\n            <div class=\"legend__value max\" *ngIf=\"legend.max\">{{max(ds)}}</div>\n\n            <div class=\"legend__value avg\" *ngIf=\"legend.avg\">{{avg(ds)}}</div>\n\n\t\t\t\t\t\t<div class=\"legend__value current\" *ngIf=\"legend.current\">{{current(ds)}}</div>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"legend__scroller-padding\"></div>\n\t\t\t</div>\n\n\t\t</perfect-scrollbar>\n  </div>\n  \n  <ng-template #legendAsTable>\n\t\t\n    <div class=\"legend__bottom-table\" > \n\t\t\t<perfect-scrollbar>\n\n\t\t\t\t<div class=\"legend__scroller-cont\" [@fadeInOut] *ngIf=\"datasets?.length\">\n\n\t\t\t\t\t<div class=\"legend__series-wrapper legend__full-width\">\n\t\t\t\t\t\t<table class=\"legend__full-width\">\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col class=\"legend__full-width\">\n\t\t\t\t\t\t\t</colgroup>\n\n\t\t\t\t\t\t\t<thead *ngIf=\"datasets && datasets.length > 0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th style=\"text-align: left;\"></th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.min\">min</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.max\">max</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.avg\">avg</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.current\">current</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr *ngFor=\"let ds of filteredDatasets\" class=\"legend__series\" [ngClass]=\"{'hidden': ds.hidden }\">\n\n\t\t\t\t\t\t\t\t\t<td (click)=\"onSeriesClicked(ds, $event)\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"legend__icon\" [style.color]=\"color(ds)\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-minus pointer\" ></i>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"legend__alias pointer\" [title]=\"ds.label\">{{ds.label}}</div>\n\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.min\">{{min(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.max\">{{max(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.avg\">{{avg(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.current\">{{current(ds)}}</td>\n\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"legend__scroller-padding\"></div>\n\n\t\t\t\t</div>\n\t\t\t</perfect-scrollbar>\n\t\t</div>\n  </ng-template>\n\n</div>","import { Component, ViewEncapsulation } from '@angular/core';\nimport { FadeInOutAnimation } from 'uilib';\nimport { BaseChartComponent } from '../../base/chart-base';\nimport { ChartStore } from '../../base/chart.store';\nimport { AXIS_Y_LEFT, DataSet } from '../../chart.m';\nimport { AxisUnitHelper } from '../helpers/unit-helper';\n\n@Component({\n  selector: 'chart-legend',\n  templateUrl: './legend.html',\n  styleUrls:[ './legend.scss' ],\n\tanimations: [FadeInOutAnimation],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class ChartLegendComponent extends BaseChartComponent {\n\n  get legend(){\n    return this.widget.legend;\n\t}\n\t\n\tget filteredDatasets(){\n\t\tlet datasets = this.datasets.filter( ds => ds.legend );\n\n\t\tif( this.legend.hideOnlyZeroes ){\n\t\t\tdatasets = datasets.filter( x => !x.allZeros );\n\t\t}\n\n\t\tif( this.legend.hideOnlyNulls ){\n\t\t\tdatasets = datasets.filter( x => !x.allNulls );\n\t\t}\n\n\t\treturn datasets;\n\t}\n\n  constructor( store: ChartStore ) {\n    super( store );\n  }\n\n  axis( ds: DataSet ){\n\t\tconst axes = this.widget.axes;\n    return ( ds.yAxisID == AXIS_Y_LEFT ) ? axes.leftY :axes.rightY;\n  }\n  \n  decimals( ds: DataSet ){\n\t\treturn this.legend.decimals ? this.legend.decimals : 0;\n\t}\n\n  unit( ds: DataSet ){\n\t\treturn this.axis( ds ).unit;\n  }\n  \n  color( ds: DataSet ){\n    return this\n\t\t  .display\n\t\t\t.getLineColor( ds, 1 );\n\t}\n\n  min( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.min, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tmax( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.max,\tthis.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tavg( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.avg, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tcurrent( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.current, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\n  onSeriesClicked( ds: DataSet, e: any ){\n    if( e.ctrlKey ){\n\t\t\tconst selected = ( false == ds.selected );\n\n\t\t\tthis.toggleSeries( ds, selected );\n\t\t} else{\n\t\t\tconst selected = ( ( undefined === ds.selected ) || false == ds.selected ) ?\n\t\t\t\ttrue : undefined;\n\n\t\t\tthis.toggleSeries( ds, selected );\n\t\n\t\t\tthis\n\t\t\t\t.datasets\n\t\t\t\t.filter( x => x != ds )\n\t\t\t\t.forEach( x => this.toggleSeries( x,  true == selected ? false : undefined ) );\n\t\t}\n\t\n\t\tthis.component.control.refresh();\n  }\n\n  toggleSeries( ds: DataSet, selected: boolean ){\n\t\tds.selected = selected;\n\n\t\tif( undefined === selected ){\n\t\t\tdelete ds.hidden;\n\t\t\tdelete ds.selected;\n\t\t} else {\n\t\t\tds.hidden = !selected;\n\t\t}\n\t}\n  \n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EdCommonModule } from 'common';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ChartModule } from 'primeng';\nimport { EdUilibModule } from 'uilib';\nimport { ChartComponent } from './chart.c';\nimport { AlertEditorComponent } from './edit/alert/alert';\nimport { AlertConfigEditorComponent } from './edit/alert/config/alert-config';\nimport { AlertConditionEditorComponent } from './edit/alert/config/conditions/cond';\nimport { AlertQueryParamPickerComponent } from './edit/alert/config/conditions/query/param/param';\nimport { AlertQueryEditorComponent } from './edit/alert/config/conditions/query/query';\nimport { AlertHandleComponent } from './edit/alert/handle/handle';\nimport { AlertHistoryEditorComponent } from './edit/alert/history/alert-history';\nimport { AlertNotificationsEditorComponent } from './edit/alert/notifications/alert-nots';\nimport { AxesEditorComponent } from './edit/axes/axes';\nimport { AxisXEditorComponent } from './edit/axes/x-axis/x-axis';\nimport { AxisYEditorComponent } from './edit/axes/y-axis/y-axis';\nimport { DisplayEditorComponent } from './edit/display/display';\nimport { DrawOptionsEditorComponent } from './edit/display/draw-options/options';\nimport { SeriesOverrideEditorComponent } from './edit/display/series-overrides/override';\nimport { SeriesOverridesEditorComponent } from './edit/display/series-overrides/overrides';\nimport { ThresholdEditorComponent } from './edit/display/thresholds/threshold';\nimport { ThresholdsEditorComponent } from './edit/display/thresholds/thresholds';\nimport { TimeRegionEditorComponent } from './edit/display/time-regions/time-region';\nimport { TimeRegionsEditorComponent } from './edit/display/time-regions/time-regions';\nimport { ChartEditorComponent } from './edit/editor';\nimport { LegendEditorComponent } from './edit/legend/legend';\nimport { TimeEditorComponent } from './edit/time/time';\nimport { ChartLegendComponent } from './view/legend/legend';\n\n@NgModule({\n  declarations: [\n    ChartComponent,\n    ChartEditorComponent,\n\n    ChartLegendComponent,\n\n    AxesEditorComponent,\n    AxisXEditorComponent,\n    AxisYEditorComponent,\n\n    LegendEditorComponent,\n\n    DisplayEditorComponent,\n    DrawOptionsEditorComponent,\n\n    ThresholdsEditorComponent,\n    ThresholdEditorComponent,\n\n    SeriesOverridesEditorComponent,\n    SeriesOverrideEditorComponent,\n    \n    TimeRegionsEditorComponent,\n    TimeRegionEditorComponent,\n\n    TimeEditorComponent,\n\n    AlertEditorComponent,\n    AlertConfigEditorComponent,\n    AlertConditionEditorComponent,\n    AlertQueryEditorComponent,\n    AlertQueryParamPickerComponent,\n    AlertHistoryEditorComponent,\n    AlertNotificationsEditorComponent,\n    AlertHandleComponent\n\n\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ChartModule,\n\n    EdCommonModule,\n    EdUilibModule,\n    PerfectScrollbarModule\n  ],\n  exports: [\n    ChartComponent,\n    ChartEditorComponent\n  ],\n \n \n})\nexport class ChartWidgetModule { }\n"]}