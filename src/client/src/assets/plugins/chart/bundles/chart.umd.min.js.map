{"version":3,"sources":["../../../../app/plugins/widgets/chart/src/edit/general/general.ts","../../../../app/plugins/widgets/chart/src/edit/general/general.html","../../../../app/plugins/widgets/chart/src/edit/metrics/metrics.ts","../../../../app/plugins/widgets/chart/src/edit/metrics/metrics.html","../../../../../node_modules/tslib/tslib.es6.js","../../../../app/plugins/widgets/chart/src/base/chart-base-editor.ts","../../../../app/plugins/widgets/chart/src/chart.m.ts","../../../../app/plugins/widgets/chart/src/view/helpers/unit-helper.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/units.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/y-axis.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/y-axis.html","../../../../app/plugins/widgets/chart/src/edit/axes/x-axis/x-axis.ts","../../../../app/plugins/widgets/chart/src/edit/axes/x-axis/x-axis.html","../../../../app/plugins/widgets/chart/src/edit/axes/axes.ts","../../../../app/plugins/widgets/chart/src/edit/legend/legend.ts","../../../../app/plugins/widgets/chart/src/edit/legend/legend.html","../../../../app/plugins/widgets/chart/src/edit/display/draw-options/options.ts","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/override.html","../../../../app/plugins/widgets/chart/src/edit/display/draw-options/options.html","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/override.ts","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/overrides.ts","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/threshold.html","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/threshold.ts","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/thresholds.ts","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-region.html","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-region.ts","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-regions.ts","../../../../app/plugins/widgets/chart/src/edit/display/display.html","../../../../app/plugins/widgets/chart/src/edit/display/display.ts","../../../../app/plugins/widgets/chart/src/edit/editor.html","../../../../app/plugins/widgets/chart/src/edit/editor.ts","../../../../app/plugins/widgets/chart/src/view/display-manager.ts","../../../../app/plugins/widgets/chart/src/view/data/data-converter.ts","../../../../app/plugins/widgets/chart/src/view/data/data-provider.ts","../../../../app/plugins/widgets/chart/src/view/drawers/tooltip.ts","../../../../app/plugins/widgets/chart/src/view/options-provider.ts","../../../../app/plugins/widgets/chart/src/base/chart.store.ts","../../../../app/plugins/widgets/chart/src/base/chart-base.ts","../../../../app/plugins/widgets/chart/src/base/chart-base-extension.ts","../../../../app/plugins/widgets/chart/src/view/drawers/thresholds.ts","../../../../app/plugins/widgets/chart/src/view/drawers/trackball.ts","../../../../app/plugins/widgets/chart/src/view/helpers/pixel-helper.ts","../../../../app/plugins/widgets/chart/src/view/drawers/time-regions.ts","../../../../app/plugins/widgets/chart/src/view/drawers/extensions-manager.ts","../../../../app/plugins/widgets/chart/src/chart.html","../../../../app/plugins/widgets/chart/src/chart.c.ts","../../../../app/plugins/widgets/chart/src/view/legend/legend.html","../../../../app/plugins/widgets/chart/src/view/legend/legend.ts","../../../../app/plugins/widgets/chart/src/chart.mod.ts"],"names":["GeneralEditorComponent","prototype","ngOnInit","console","log","ngOnDestroy","selectors","decls","vars","template","rf","ctx","i0.ɵɵtext","MetricsEditorComponent","panel","this","i0","ɵɵdirectiveInject","PANEL_TOKEN","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","ScaleType","BaseChartEditorComponent","defineProperty","widget","_a","axes","legend","display","thresholds","timeRegions","overrides","component","control","chart","options","refresh","update","comp","datasets","forEach","x","setup","TooltipMode","TooltipSortOrder","DataPointNullValueOption","ThresholdOperator","ThresholdColor","ThresholdAxis","Threshold","operator","Gt","colorType","Critical","fill","line","axis","Left","TimeRegionColor","TimeRegionDay","TimeRegion","Red","fromDay","Any","toDay","OverrideType","AxisUnitType","SeriesOverride","OverrideItem","type","AxisUnit","label","unit","command","AxisUnitHelper","getData","Common_Short","Common_Percent","Common_Percent01","Common_Humidity","Common_Decibel","Common_Hex0x","Common_Hex","Common_SciNotation","Common_LocaleString","Length_Millimetre","Length_Meter","Length_Feet","Length_Kilometer","Length_Mile","Area_SquareMeters","Area_SquareFeet","Area_SquareMiles","Mass_Milligram","Mass_Gram","Mass_Kilogram","Mass_MetricTon","None","getFormattedValue","decimals","toFixed","unitData","toString","toExponential","toLocaleString","getShortFormattedValue","dev","u","menuItems","items","AxisYEditorComponent","_super","_this","left","units","_.cloneDeep","scales","DropDownComponent","wrapEnum","leftY","rightY","yAxes","show","v","chartAxis","scale","Linear","sl","scaleLabel","labelString","undefined","min","ticks","max","inputs","features","ɵɵInheritDefinitionFeature","consts","i0.ɵɵelementStart","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","AxisXEditorComponent","xAxes","AxesEditorComponent","i0.ɵɵelement","LegendEditorComponent","DrawOptionsEditorComponent","availableWidth","wrapArray","availableTooltipModes","availableTooltipSortOrders","availableNullValueOptions","stack","stacked","i0.ɵɵtemplate","i0.ɵɵtextInterpolate1","_r5","showLines","showPoints","tooltipMode","tooltipSortOrder","SeriesOverrideEditorComponent","removed","EventEmitter","cmItems","showColorPicker","createBoolItem","Lines","createNumberItem","LineFill","LineWidth","Staircase","Dashes","DashLength","DashSpace","Points","PointRadius","Stack","createColorItem","Color","YAxis","ZIndex","Legend","HideInTooltip","ContextMenuComponent","wrapItems","onOptionSelected","item","rebuildItems","prop","override","getOverrideType","header","from","to","event","stopPropagation","getPropertyName","onRemoveItem","getItemHeader","replace","toLowerCase","c","toUpperCase","onColorSelected","color","i_r2","index","outputs","$event","emit","_r1","SeriesOverridesEditorComponent","onAdd","onRemove","t","indexOf","splice","ɵɵrestoreView","_r3_1","ɵɵnextContext","_r6_1","ThresholdEditorComponent","availableOperatorValues","availableColorValues","availableAxisValues","threshold","isNaN","Custom","i0.ɵɵpropertyInterpolate1","ThresholdsEditorComponent","TimeRegionEditorComponent","availableColors","availableDays","timeRegion","showCustomColors","fromTime","toTime","TimeRegionsEditorComponent","DisplayEditorComponent","ChartEditorComponent","router","activatedRoute","location","queryParamMap","subscribe","params","get","Number","isInteger","onTabSelected","url","createUrlTree","relativeTo","queryParams","tab","queryParamsHandling","go","i1$2","Router","ActivatedRoute","i1$1","Location","DisplayManager","ds","setupLines","setupPoints","setupNullValue","getShowLines","lineWidth","getLineWidth","getFill","opacity","backgroundColor","getLineColor","borderColor","borderWidth","steppedLine","getStaircase","getDashes","len","getDashLength","space","getDashSpace","borderDash","order","getZIndex","getLegend","getShowPoints","pointBorderColor","pointBackgroundColor","pointRadius","getPointRadius","nullValue","Connected","spanGaps","data","y","isNull","Null","NullAsZero","setupOverrides","getOverride","lines","overrideColor","ColorHelper","colors","defaultColor","hexToRgbString","useOverride","lineFill","staircase","dashes","dashLength","dashSpace","points","zIndex","getYAxis","yAxis","find","alias","RegExp","test","ɵɵinject","factory","ɵfac","DataConverter","dispay","toDataSets","dataSets","totalIndex","serie","arr","columns","slice","map","el","toDataSet","filter","values","Moment","valueOf","filteredValues","parseFloat","avg","reduce","a","allNulls","every","allZeros","generateDataSetName","lineTension","Math","apply","current","root","name","tags","keyIndex","keys","key","DataProvider","pluginActivator","dsService","converter","time","data$","timeSubs","range$","pipe","tap","_","request","mergeMap","createDataSourceMetricsBuilder","mb","build","metrics","range","pull","_b","destroy","unsubscribe","loading","proxy","finalize","onData","onError","err","i1","PluginActivator","DataSourceService","TimeRangeStore","TooltipBuilder","model","ID","TOOLTIP_SELECTOR","Chart","Tooltip","positioners","custom","mode","position","intersect","caretSize","xPadding","bodySpacing","titleAlign","enabled","tooltipEl","document","getElementById","createElement","id","innerHTML","body","appendChild","tooltipElement","classList","remove","yAlign","add","createBody","setPosition","style","canvas","getBoundingClientRect","elWidth","getElementsByClassName","width","negMargin","caretX","window","pageXOffset","top","pageYOffset","caretY","fontFamily","_bodyFontFamily","padding","yPadding","pointerEvents","w","store","titleLines","title","innerHtml","date","Date","parse","format","sort","seriesName","seriesNameEl","resValue","querySelector","bodyLines","bodyItem","sortOrder","parsedBodyLines","labelColors","lastIndexOf","substring","dataPoints","Increasing","Decreasing","OptionsProvider","getOptions","defaults","global","defaultFontColor","defaultFontFamily","defaultFontSize","maintainAspectRatio","animation","tooltips","getAxisX","getAxisY","AXIS_X","gridLines","autoSkip","autoSkipPadding","maxRotation","minRotation","displayFormats","second","minute","hour","day","week","month","year","wAxis","AXIS_Y_LEFT","AXIS_Y_RIGHT","zeroLineWidth","userCallback","labels","ChartStore","dataProvider","BehaviorSubject","widget$","asObservable","BaseChartComponent","dataSubs","widgetSubs","onWidgetReady","BaseChartExtension","ThresholdDrawerPlugin","afterDatasetsDraw","ThresholdDrawer","draw","scaleYA","scaleYB","scaleX","scaleY","Right","offset","getPixelForValue","gt","lineColor","getColor","renderLine","renderRectangle","context","beginPath","strokeStyle","moveTo","lineTo","right","stroke","fillStyle","topY","bottomY","h","bottom","fillRect","Ok","Warning","fillColor","TrackballDrawerPlugin","PixelHelper","alignPixel","pixel","devicePixelRatio","currentDevicePixelRatio","halfWidth","round","easing","getMousePos","evt","rect","clientX","clientY","TimeRegionsDrawerPlugin","TimeRegionDrawer","minX","maxX","getSpans","os","start","toDate","oe","end","renderRegion","borders","getSpanBorders","getTime","isSpecificDayOfWeek","getSpansDayOfWeek","getSpansAny","inputFromTime","inputToTime","timeFormat","tf","tt","isValid","clone","midnight","res","fromDayName","toDayName","isBefore","set","getHours","getMinutes","margin","subtract","startOf","endOf","offsetStart","offsetEnd","minY","maxY","Green","Blue","Yellow","Gray","ExtensionsManager","trackball","list","ChartComponent","extensions","plugins","ngAfterViewInit","viewQuery","UIChart","i0.ɵɵstyleProp","ChartLegendComponent","onSeriesClicked","ctrlKey","selected","toggleSeries","selected_1","hidden","FadeInOutAnimation","ChartWidgetModule","imports","CommonModule","FormsModule","ReactiveFormsModule","ChartModule","EdCommonModule","EdUilibModule","PerfectScrollbarModule","declarations","exports","NgClass","NgComponentOutlet","NgForOf","NgIf","NgTemplateOutlet","NgStyle","NgSwitch","NgSwitchCase","NgSwitchDefault","NgPlural","NgPluralCase","i2","ɵangular_packages_forms_forms_y","NgSelectOption","ɵangular_packages_forms_forms_x","DefaultValueAccessor","NumberValueAccessor","RangeValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","SelectMultipleControlValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinLengthValidator","MaxLengthValidator","PatternValidator","CheckboxRequiredValidator","EmailValidator","NgModel","NgModelGroup","NgForm","FormControlDirective","FormGroupDirective","FormControlName","FormGroupName","FormArrayName","i3","i4","DialogActionsComponent","DialogComponent","DropDownValueTemplate","DropDownSelectedValueTemplate","PopupComponent","HierarchicalDropDownComponent","PreferencesComponent","EmptyListComponent","InfoBoxComponent","ProgressComponent","FilterBoxComponent","TextBoxComponent","TextBoxValidationTemplate","CheckBoxComponent","AutoFocusDirective","AvatarComponent","GridComponent","ColumnComponent","DeleteColumnComponent","SlideDownComponent","TabStripComponent","TabComponent","TabTitleTemplate","TabContentTemplate","SideTabStripComponent","LoadOrErrorComponent","ErrorPopupComponent","NoteComponent","ModuleLoaderComponent","UserPickerComponent","TeamPickerComponent","PermissionPickerComponent","PermissionRulePickerComponent","PermissionIconComponent","TagPickerComponent","TimeRangePickerComponent","PluginPickerComponent","ColorPickerComponent","PaletteEditorComponent","ColorCircleComponent","IconComponent","LabelIconComponent","RemoveHostDirective","PageComponent","PageHeaderComponent","PageTitleComponent","PageTabsNavigationComponent","PageDropdownNavigationComponent","TagComponent","DashboardExplorerComponent","DashboardExplorerDeleterComponent","DashboardExplorerMoverComponent","CardsLayoutSwitcherComponent","i5","PerfectScrollbarComponent","PerfectScrollbarDirective","AsyncPipe","UpperCasePipe","LowerCasePipe","JsonPipe","SlicePipe","DecimalPipe","PercentPipe","TitleCasePipe","CurrencyPipe","DatePipe","I18nPluralPipe","I18nSelectPipe","KeyValuePipe"],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'editor-general',\n  templateUrl: './general.html'\n})\nexport class GeneralEditorComponent {\n \n  ngOnInit(){\n    console.log( 'create GeneralEditorComponent' )\n  }\n\n  ngOnDestroy(){\n    console.log( 'detroy GeneralEditorComponent' )\n  }\n}\n","general will be here","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\n\n\n\n@Component({\n  selector: 'editor-metrics',\n  templateUrl: './metrics.html'\n})\nexport class MetricsEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) private panel: Panel){\n    \n  }\n  ngOnInit(){\n    console.log( 'create MetricsComponent' )\n    console.log( this.panel );\n  }\n\n  ngOnDestroy(){\n    console.log( 'detroy MetricsComponent' )\n  }\n}\n","metrics will be here","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive } from '@angular/core';\nimport { Panel } from 'common';\nimport { Axes, Chart, Display, Legend, SeriesOverride, Threshold, TimeRegion } from '../chart.m';\n\n@Directive() \nexport class BaseChartEditorComponent {\n\n  get widget() : Chart{\n    return this.panel.widget;\n  }\n\n  get axes() : Axes {\n    return this.widget?.axes;\n  }\n\n  get legend() : Legend{\n    return this.widget?.legend;\n  }\n\n  get display() : Display{\n    return this.widget?.display;\n  }\n\n  get thresholds(): Threshold[]{\n    return this.display.thresholds;\n  }\n\n  get timeRegions(): TimeRegion[]{\n    return this.display.timeRegions;\n  }\n\n  get overrides(): SeriesOverride[]{\n    return this.display.overrides;\n  }\n\n  get options(){\n    return this\n      .widget\n      .component\n      .control\n      .chart\n      .options;\n  }\n\n  constructor( public panel: Panel){\n  }\n\n  refresh(){\n    this\n      .widget\n      .component\n      .control\n      .refresh();\n  }\n\n  update(){\n    const comp = this.widget.component;\n\n    comp\n      .datasets\n      .forEach( x => comp.display.setup( x ) );\n\n    this.refresh();\n  }\n}\n","import { UIChart } from 'primeng';\r\nimport { ChartComponent } from './chart.c';\r\n\r\nexport interface ChartData{\r\n\tdatasets: DataSet[];\r\n}\r\n\r\nexport interface DataSet{\r\n\tlabel: string;\r\n\tdata: DataPoint[];\r\n\r\n\tmin?: number;\r\n\tmax?: number\r\n\tavg?: number;\r\n\tcurrent?: number;\r\n\r\n\tallNulls?: boolean;\r\n\tallZeros?: boolean;\r\n\r\n\tindex: number;\r\n\r\n\t//display\r\n\tfill?: boolean;\r\n\tbackgroundColor?:string; \r\n\tborderColor?: string;\r\n\tborderWidth?: number;\r\n\r\n\tpointBorderColor?: string; \r\n\tpointBackgroundColor?: string; \r\n\tpointRadius?: number; \r\n\r\n\tsteppedLine?: boolean;\r\n\r\n\tborderDash?: number[]\r\n\r\n\torder?: number;\r\n\r\n\tlegend?: boolean;\r\n\thidden?: boolean;\r\n\tselected?: boolean;\r\n}\r\n\r\nexport interface DataPoint{\r\n\tx?: number;\r\n\ty?: number;\r\n\tisNull: boolean;\r\n}\r\n\r\nexport interface Chart{\r\n\tlegend: Legend;\r\n\taxes: Axes;\r\n\tdisplay: Display;\r\n\r\n\tcomponent: ChartComponent;\r\n}\r\n\r\nexport interface Legend{\r\n\tshow: boolean;\r\n\ttable: boolean;\r\n\tright: boolean;\r\n\r\n\tmin: number;\r\n\tmax: number;\r\n\tavg: number;\r\n\tcurrent: number;\r\n\ttotal: number;\r\n\tdecimals? : number;\r\n\r\n\thideOnlyNulls: boolean;\r\n\thideOnlyZeroes: boolean;\r\n}\r\n\r\nexport interface Axes{\r\n\tleftY: Axis;\r\n\trightY?: Axis;\r\n\tx: any;\r\n}\r\n\r\n\r\nexport enum ScaleType {\r\n\tLinear = \"linear\",\r\n\tLog2 = \"log2\",\r\n\tLog10 = \"log10\",\r\n\tLog32 = \"log32\",\r\n\tLog1024 = \"log1024\"\r\n}\r\n\r\nexport interface Axis{\r\n\tshow: boolean;\r\n\tunit:any;\r\n\tscale: ScaleType;\r\n\tmin?: number;\r\n\tmax?: number;\r\n\tdecimals?: number;\r\n\tlabel?: string;\r\n}\r\n\r\nexport interface Display{\r\n\tshowLines: boolean;\r\n\tshowPoints: boolean;\r\n\tshowBars: boolean;\r\n\r\n\tfill: number;\r\n\tlineWidth: number;\r\n\tpointRadius: number;\r\n\r\n\tstaircase: boolean;\r\n\ttooltipMode: TooltipMode;\r\n\ttooltipSortOrder: TooltipSortOrder;\r\n\t\r\n\tstack: boolean;\r\n\tnullValue: DataPointNullValueOption;\r\n\r\n\tthresholds: Threshold[];\r\n\ttimeRegions: TimeRegion[];\r\n\toverrides: SeriesOverride[];\r\n}\r\n\r\nexport class Threshold{\r\n\toperator: ThresholdOperator = ThresholdOperator.Gt;\r\n\tvalue?: number;\r\n\r\n\tcolorType: ThresholdColor = ThresholdColor.Critical;\r\n\r\n\tfill: boolean = true;\r\n\tline: boolean = true;\r\n\tfillColor: any;\r\n\tlineColor: any;\r\n\r\n\taxis: ThresholdAxis = ThresholdAxis.Left;\r\n}\r\n\r\nexport enum TooltipMode {\r\n\tAll = \"all\",\r\n\tSingle = \"single\"\r\n}\r\n\r\nexport enum TooltipSortOrder {\r\n\tNone = \"none\",\r\n\tIncreasing = \"increasing\",\r\n\tDecreasing = \"decreasing\"\r\n}\r\n\r\nexport enum DataPointNullValueOption {\r\n\tConnected = \"connected\",\r\n\tNull = \"null\",\r\n\tNullAsZero = \"nullAsZero\"\r\n}\r\n\r\nexport enum ThresholdOperator {\r\n\tGt = \"gt\",\r\n\tLt = \"lt\",\r\n}\r\n\r\nexport enum ThresholdColor {\r\n\tCustom = \"custom\",\r\n\tCritical = \"critical\",\r\n\tWarning = \"warning\",\r\n\tOk = \"ok\"\r\n}\r\n\r\nexport enum ThresholdAxis {\r\n\tLeft = \"left\",\r\n\tRight = \"right\"\r\n}\r\n\r\nexport class TimeRegion{\r\n\tcolorType: TimeRegionColor = TimeRegionColor.Red;\r\n\r\n\tfill: boolean = true;\r\n\tline: boolean = true;\r\n\tfillColor: string;\r\n\tlineColor: string;\r\n\r\n\tfromDay: TimeRegionDay = TimeRegionDay.Any;\r\n\ttoDay: TimeRegionDay = TimeRegionDay.Any;\r\n\r\n\tfromTime?: string;\r\n\ttoTime?: string;\r\n}\r\n\r\nexport enum TimeRegionColor {\r\n\tGray = \"gray\",\r\n\tRed = \"red\",\r\n\tGreen = \"green\",\r\n\tBlue = \"blue\",\r\n\tYellow = \"yellow\",\r\n\tCustom = \"custom\"\r\n}\r\n\r\nexport enum TimeRegionDay {\r\n\tAny = \"any\",\r\n\tMon = \"mon\",\r\n\tTue = \"tue\",\r\n\tWed = \"wed\",\r\n\tThu = \"thu\",\r\n\tFri = \"fri\",\r\n\tSat = \"sat\",\r\n\tSun = \"sun\"\r\n}\r\n\r\nexport class SeriesOverride{\r\n\talias: string;\r\n\titems: OverrideItem[];\r\n}\r\n\r\nexport class OverrideItem{\r\n\tconstructor( public type: OverrideType | string, public value: any ){\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport enum OverrideType{\r\n\tLines,\r\n\tPoints,\r\n\tPointRadius,\r\n\tStack,\r\n\tLineFill,\r\n\tLineWidth,\r\n\tStaircase,\r\n\tDashes,\r\n\tDashLength,\r\n\tDashSpace,\r\n\tLegend,\r\n\tHideInTooltip,\r\n\tColor,\r\n\tYAxis,\r\n\tZIndex,\r\n}","export enum AxisUnitType {\r\n\tNone, \r\n\r\n\tCommon_Short,\r\n\tCommon_Percent,\r\n\tCommon_Percent01,\r\n\tCommon_Humidity,\r\n\tCommon_Decibel,\r\n\tCommon_Hex0x,\r\n\tCommon_Hex,\r\n\tCommon_SciNotation,\r\n\tCommon_LocaleString,\r\n\r\n\tLength_Millimetre,\r\n\tLength_Meter,\r\n\tLength_Feet,\r\n\tLength_Kilometer,\r\n\tLength_Mile,\r\n\r\n\tArea_SquareMeters,\r\n\tArea_SquareFeet,\r\n\tArea_SquareMiles,\r\n\r\n\tMass_Milligram,\r\n\tMass_Gram,\r\n\tMass_Kilogram,\r\n\tMass_MetricTon\r\n}\r\n\r\nexport class AxisUnit{\r\n\tconstructor( \r\n\t\tpublic type: AxisUnitType,\r\n\t\tpublic label: string,\r\n\t\tpublic unit: string,\r\n\t\tpublic command?: (event?: any) => void ){}\r\n}\r\n\r\nexport class AxisUnitHelper{\r\n\tstatic getData( unit: AxisUnitType ){\r\n\t\tswitch( +unit ){\r\n\r\n\t\t\tcase AxisUnitType.Common_Short:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Short, \"short\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Percent, \"percent (0-100)\", \"%\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent01:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Percent01, \"percent (0.0-1.0)\", \"%\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Humidity:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Humidity, \"humidity (%H)\", \"%H\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Decibel:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Decibel, \"decibel\", \"dB\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex0x:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Hex0x, \"hexadecimal (0x)\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Hex, \"hexadecimal\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_SciNotation:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_SciNotation, \"scientific notation\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_LocaleString:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_LocaleString, \"locale string\", \"\" );\r\n\r\n\r\n\r\n\t\t\tcase AxisUnitType.Length_Millimetre:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Millimetre, \"millimetre (mm)\", \"mm\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Meter:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Meter, \"meter (m)\", \"m\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Feet:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Feet, \"feet (ft)\", \"ft\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Kilometer:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Kilometer, \"kilometer (km)\", \"km\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Mile:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Mile, \"mile (mi)\", \"mi\" );\r\n\r\n\r\n\r\n\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareMeters:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareMeters, \"Square Meters (m²)\", \"m²\" );\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareFeet:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareFeet, \"Square Feet (ft²)\", \"ft²\" );\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareMiles:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareMiles, \"Square Miles (mi²)\", \"mi²\" );\r\n\r\n\r\n\t\t\tcase AxisUnitType.Mass_Milligram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Milligram, \"milligram (mg)\", \"mg\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_Gram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Gram, \"gram (g)\", \"g\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_Kilogram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Kilogram, \"kilogram (kg)\", \"kg\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_MetricTon:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_MetricTon, \"metric ton (t)\", \"t\" );\r\n\t\t}\r\n\r\n\t\treturn new AxisUnit( AxisUnitType.None, \"none\", \"\" );\r\n\t}\r\n\r\n\tstatic getFormattedValue( label, unit, decimals ){\r\n\t\tlet value = label.toFixed( decimals );\r\n\t\tconst unitData = AxisUnitHelper.getData( unit);\r\n\r\n\t\tswitch( unitData.type ){\r\n\t\t\tcase AxisUnitType.Common_Hex: \r\n\t\t\t\treturn label.toString( 16 );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex0x: \r\n\t\t\t\treturn `0x${label.toString( 16 )}`;\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent01: \r\n\t\t\t\treturn `${( 100 * label ).toFixed( decimals )} %`;\r\n\r\n\t\t\tcase AxisUnitType.Common_SciNotation: \r\n\t\t\t\treturn label.toExponential(decimals);\r\n\r\n\t\t\tcase AxisUnitType.Common_LocaleString:\r\n\t\t\t\treturn label.toLocaleString();\r\n\r\n\t\t\tcase AxisUnitType.Common_Short:\r\n\t\t\t\treturn AxisUnitHelper.getShortFormattedValue( label, unit, decimals );\r\n\r\n\t\t\tcase AxisUnitType.None:\r\n\t\t\t\treturn value;\r\n\r\n\r\n\r\n\t\t\tdefault: \r\n\t\t\t\treturn `${value} ${unitData.unit}`;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getShortFormattedValue( label, unit, decimals ){\r\n\t\t// if( label < 1000 ){\r\n\t\t// \treturn label;\r\n\t\t// }\r\n\t\t\r\n\t\tlet dev = 1;\r\n\t\tlet u = '';\r\n\r\n\t\tif( label >= 1000 && label < 1000000 ){\r\n\t\t\tu = 'K';\r\n\t\t\tdev = 1000;\r\n\t\t} else if( label >= 1000000 && label < 1000000000 ){\r\n\t\t\tu = 'Mil';\r\n\t\t\tdev = 1000000;\r\n\t\t}\r\n\t\telse if( label >= 1000000000 && label < 1000000000000 ){\r\n\t\t\tu = 'Bil';\r\n\t\t\tdev = 1000000000;\r\n\t\t} else if( label >= 1000000000000 && label < 1000000000000000 ){\r\n\t\t\tu = 'Tri';\r\n\t\t\tdev = 1000000000000;\r\n\t\t}\r\n\t\telse if( label >= 1000000000000000 && label < 1000000000000000000 ){\r\n\t\t\tu = 'Qdr';\r\n\t\t\tdev = 1000000000000000;\r\n\t\t}\r\n\r\n\t\treturn  `${( label / dev ).toFixed( decimals)} ${u}`;\r\n\t}\r\n} ","import { AxisUnitHelper, AxisUnitType } from '../../../view/helpers/unit-helper';\r\n\r\n\r\n\r\nexport const menuItems: any = [\r\n\r\n\t{\r\n\t\tlabel: \"none\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.None),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Short),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Percent),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Percent01),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Humidity),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Decibel),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Hex0x),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Hex),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_SciNotation),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_LocaleString)\r\n\t\t\t\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tlabel: \"length\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Millimetre),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Meter),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Feet),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Kilometer),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Mile)\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tlabel: \"area\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareMeters),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareFeet),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareMiles)\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tlabel: \"mass\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Milligram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Gram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Kilogram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_MetricTon)\r\n\t\t]\r\n\t},\r\n];","import { Component, Inject, Input } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { ScaleType } from '../../../chart.m';\nimport { menuItems } from './units';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'editor-axis-y',\n  templateUrl: './y-axis.html'\n})\nexport class AxisYEditorComponent extends BaseChartEditorComponent {\n \n  @Input() left: boolean = true;\n\n  units = _.cloneDeep( menuItems );\n  scales = DropDownComponent.wrapEnum( ScaleType );\n\n  get axis(){\n    return this.left ? this.axes.leftY : this.axes.rightY;\n  }\n\n  get chartAxis(){\n    return this.options.scales.yAxes[ this.left ? 0 : 1 ];\n  }\n\n  get show(): boolean{\n    return this.axis.show;\n  }\n\n  set show( v: boolean ){\n    this.axis.show = this.chartAxis.display = v;\n    this.refresh();\n  }\n\n  get unit(): boolean{\n    return this.axis.unit;\n  }\n\n  set unit( v: boolean ){\n    this.axis.unit = v;\n\n    this.refresh();\n  }\n\n  get scale(): ScaleType{\n    return this.axis.scale;\n  }\n\n  set scale( v: ScaleType ){\n    this.axis.scale = v;\n    this.chartAxis.type = ( v == ScaleType.Linear ) ? \"linear\" : \"logarithmic\";\n\n    this.refresh();\n  }\n\n  get label(): string{\n    return this.axis.label;\n  }\n\n  set label( v: string ){\n    this.axis.label = v;\n    const sl = this.chartAxis.scaleLabel;\n\n    if( v ){\n      sl.display = true;\n      sl.labelString = v;\n    } else{\n      sl.display = false;\n      sl.labelString = undefined;\n    }\n\n    this.refresh();\n  }\n\n  get decimals(): number{\n    return this.axis.decimals;\n  }\n\n  set decimals( v: number ){\n    this.axis.decimals = v ? +v : undefined;\n\n    this.refresh();\n  }\n\n  get min(): number{\n    return this.axis.min;\n  }\n\n  set min( v: number ){\n    this.axis.min = this.chartAxis.ticks.min = v ? +v : undefined;\n\n    this.refresh();\n  }\n\n  get max(): number{\n    return this.axis.max;\n  }\n\n  set max( v: number ){\n    this.axis.max = this.chartAxis.ticks.max = v ? +v : undefined;\n\n    this.refresh();\n  }\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n}\n","<div class=\"section gf-form-group\" >\r\n\t<h5 class=\"section-heading\">{{left ? 'Left Y' : 'Right Y'}}</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"show\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-hierarchical-dropdown\r\n\t\t[valueProperty]=\"'type'\"\r\n\t\t[(ngModel)]=\"unit\"\r\n\t\t[data]=\"units\"\r\n\t\tlabel=\"Unit\"\r\n\t\twidth=\"16\"\r\n\t\tlabelWidth=\"6\"  >\r\n\t</ed-hierarchical-dropdown>\r\n\r\n\t<ed-dropdown\r\n\t\t[(ngModel)]=\"scale\"\r\n\t\tlabel=\"Scale\"\r\n\t\t[data]=\"scales\"\r\n\t\tlabelWidth=\"6\"\r\n\t\twidth=\"16\"  >\r\n\t</ed-dropdown>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Y-Min\"\r\n\t\t\twidth=\"5\"\r\n\t\t\t[(ngModel)]=\"min\"\r\n\t\t\tplaceholder=\"auto\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Y-Max\"\r\n\t\t\twidth=\"5\"\r\n\t\t\t[(ngModel)]=\"max\"\r\n\t\t\tplaceholder=\"auto\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t<ed-textbox \r\n\t\ttype=\"text\"\r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Decimals\"\r\n\t\twidth=\"16\"\r\n\t\t[(ngModel)]=\"decimals\"\r\n\t\tplaceholder=\"auto\">\r\n\t</ed-textbox>\r\n\t<!-- <input type=\"text\" [(ngModel)]=\"decimals\" /> -->\r\n\r\n\t<ed-textbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Label\"\r\n\t\twidth=\"16\"\r\n\t\t[(ngModel)]=\"label\">\r\n\t</ed-textbox>\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-axis-x',\n  templateUrl: './x-axis.html'\n})\nexport class AxisXEditorComponent extends BaseChartEditorComponent {\n   \n  get axis(){\n    return this.axes.x;\n  }\n\n  get chartAxis(){\n    return this.options.scales.xAxes[ 0 ];\n  }\n\n  get show(): boolean{\n    return this.axis.show;\n  }\n\n  set show( v: boolean ){\n    this.axis.show = this.chartAxis.display = v;\n    this.refresh();\n  }\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n    \n  }\n}\n","<div class=\"section gf-form-group\" >\r\n\t<h5 class=\"section-heading\">X-Axis</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"show\">\r\n\t</ed-checkbox>\r\n\r\n\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-axes',\n  template: `\n    <editor-axis-y ></editor-axis-y>\n    <editor-axis-y [left]=\"false\" ></editor-axis-y>\n    <editor-axis-x></editor-axis-x>`\n})\nexport class AxesEditorComponent extends BaseChartEditorComponent {\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n    \n  }\n} \n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-legend',\n  templateUrl: './legend.html'\n})\nexport class LegendEditorComponent extends BaseChartEditorComponent  {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Options</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"legend.show\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"As Table\"\r\n\t\t[(ngModel)]=\"legend.table\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"To the right\"\r\n\t\t[(ngModel)]=\"legend.right\">\r\n\t</ed-checkbox>\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Values</h5>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Min\"\r\n\t\t\t[(ngModel)]=\"legend.min\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Min\"\r\n\t\t\t[(ngModel)]=\"legend.max\">\r\n\t\t</ed-checkbox>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Avg\"\r\n\t\t\t[(ngModel)]=\"legend.avg\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Current\"\r\n\t\t\t[(ngModel)]=\"legend.current\">\r\n\t\t</ed-checkbox>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Total\"\r\n\t\t\t[(ngModel)]=\"legend.total\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Decimals\"\r\n\t\t\twidth=\"4\"\r\n\t\t\tplaceholder=\"auto\"\r\n\t\t\t[(ngModel)]=\"legend.decimals\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Hide series</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"10\"\r\n\t\tlabel=\"With only nulls\"\r\n\t\t[(ngModel)]=\"legend.hideOnlyNulls\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"10\"\r\n\t\tlabel=\"With only zeros\"\r\n\t\t[(ngModel)]=\"legend.hideOnlyZeroes\">\r\n\t</ed-checkbox>\r\n\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { DataPointNullValueOption, TooltipMode, TooltipSortOrder } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-draw-options',\n  templateUrl: './options.html'\n})\nexport class DrawOptionsEditorComponent extends BaseChartEditorComponent {\n \n  availableWidth = DropDownComponent.wrapArray( [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] );\n\n  availableTooltipModes\t= DropDownComponent.wrapEnum( TooltipMode );\n\n  availableTooltipSortOrders = DropDownComponent.wrapEnum( TooltipSortOrder );\n\n  availableNullValueOptions = DropDownComponent.wrapEnum( DataPointNullValueOption );\n\n  get stack(): boolean{\n    return this.display.stack;\n  }\n\n  set stack( v: boolean ){\n    this.display.stack = v;\n    this.options.scales.yAxes[ 0 /*?*/ ].stacked = v\n\n    this.refresh();\n  }\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","<div class=\"ed-form-inline\">\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"override.alias\"\r\n\t\tlabel=\"alias or regex\"\r\n\t\twidth=\"15\">\r\n\t</ed-textbox>\r\n\r\n\t<div *ngFor=\"let i of items\" class=\"gf-form\"  >\r\n\r\n\t\t<div class=\"gf-form-label\">\r\n\t\t\t<span (click)=\"onRemoveItem( i )\">\r\n\t\t\t\t<i class=\"fa fa-times mr-2 pointer\" ></i>\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t\t{{getItemHeader( i )}}:\r\n\t\t\t<span class=\"ml-1\" *ngIf=\"i.type != 12;else color\" >{{i.value}}</span>\r\n\t\t\t<ng-template #color>\r\n\t\t\t\t<color-circle [value]=\"i.value\" class=\"ml-1\" [canBeActive]=false></color-circle>\r\n\t\t\t</ng-template>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form\" #menuTarget  (click)=\"cm.show( $event )\">\r\n\t\t<label class=\"gf-form-label pointer\">\r\n\t\t\t<i class=\"fa fa-plus\"></i>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n\t\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( override )\">\r\n\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\r\n</div>\r\n\r\n<ed-popup [(visible)]=\"showColorPicker\" [anchor]=\"menuTarget\">\r\n  <ed-palette-editor (selected)='onColorSelected( $event )'></ed-palette-editor>\r\n</ed-popup>\r\n\r\n<ed-context-menu [items]=\"cmItems\" #cm></ed-context-menu>\r\n\r\n","<div class=\"section gf-form-group\">\r\n\r\n\t<h5 class=\"section-heading\">Draw Modes</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Bars\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.showLines\"\r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Lines\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.showPoints\"\r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Points\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Mode Options</h5>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.fill\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Fill\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(selectionChange)=\"update()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.lineWidth\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Line Width\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t[disabled]=\"!display.showLines\"\r\n\t\t(selectionChange)=\"update()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.staircase\"\r\n\t\tlabel=\"Staircase\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.pointRadius\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Point Radius\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(selectionChange)=\"update()\"\r\n\t\t[disabled]=\"!display.showPoints\">\r\n\t</ed-dropdown>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Hover tooltip</h5>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableTooltipModes\"\r\n\t\t[(ngModel)]=\"display.tooltipMode\"\r\n\t\tlabel=\"Mode\"\r\n\t\tlabelWidth=\"9\"\r\n\t\twidth=\"9\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableTooltipSortOrders\"\r\n\t\t[(ngModel)]=\"display.tooltipSortOrder\" \r\n\t\tlabel=\"Sort Order\"\r\n\t\tlabelWidth=\"9\"\r\n\t\twidth=\"9\" >\r\n\t</ed-dropdown>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Stacking & Null value</h5>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"stack\"\r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"Stack\" >\r\n\t</ed-checkbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.nullValue\"\r\n\t\t[data]=\"availableNullValueOptions\" \r\n\t\tlabel=\"Null Value\"\r\n\t\t[labelWidth]=\"7\" >\r\n\t</ed-dropdown>\r\n</div>","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { ContextMenuComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { OverrideItem, SeriesOverride, OverrideType } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-series-override',\n  templateUrl: './override.html'\n})\nexport class SeriesOverrideEditorComponent extends BaseChartEditorComponent {\n\n  @Input() override: SeriesOverride;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<SeriesOverride>();\n\n  cmItems = [];\n  items = new Array<OverrideItem>();\n\tshowColorPicker = false;\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n  \n\tngOnInit() {\n\t\t\n\t\tthis.cmItems = [\n\t\t\tthis.createBoolItem(\"Lines\", OverrideType.Lines),\n\t\t\tthis.createNumberItem(\"Line fill\", OverrideType.LineFill),\n\t\t\tthis.createNumberItem(\"Line width\", OverrideType.LineWidth),\n\t\t\tthis.createBoolItem(\"Staircase\", OverrideType.Staircase),\n\t\t\tthis.createBoolItem(\"Dashes\", OverrideType.Dashes),\n\t\t\tthis.createNumberItem(\"Dash length\", OverrideType.DashLength),\n\t\t\tthis.createNumberItem(\"Dash space\", OverrideType.DashSpace),\n\t\t\tthis.createBoolItem(\"Points\", OverrideType.Points),\n\t\t\tthis.createNumberItem(\"Point radius\", OverrideType.PointRadius, 0, 5),\n\t\t\tthis.createBoolItem(\"Stack\", OverrideType.Stack),\n\t\t\tthis.createColorItem(\"Color\", OverrideType.Color),\n\n\t\t\tthis.createNumberItem(\"Y-axis\", OverrideType.YAxis, 1, 2),\n\t\t\tthis.createNumberItem(\"Z-index\", OverrideType.ZIndex, -3, 3),\n\t\t\tthis.createBoolItem(\"Legend\", OverrideType.Legend),\n\t\t\tthis.createBoolItem(\"Hide in tooltip\", OverrideType.HideInTooltip),\n\t\t]\n\n\t\tContextMenuComponent.wrapItems( this.cmItems, x => this.onOptionSelected( x.item ) )\n\n\t\tthis.rebuildItems();\n  }\n  \n  rebuildItems() {\n\t\tconst items = new Array<OverrideItem>();\n\n\t\tfor (var prop in this.override) {\n\t\t\tif (prop != 'alias') {\n\t\t\t\tvar type = this.getOverrideType(prop);\n\n\t\t\t\titems.push(new OverrideItem(type, this.override[prop]))\n\t\t\t}\n\t\t}\n\n    this.items = items;\n    this.refresh();\n  }\n\n\tcreateBoolItem(header: string, type: OverrideType) {\n\t\treturn {\n\t\t\tlabel: header, items: [\n\t\t\t\t{ label: 'true', value: true, type: type },\n\t\t\t\t{ label: 'false', value: false, type: type },\n\t\t\t]\n\t\t}\n\t}\n\n\tcreateNumberItem(header: string, type: OverrideType, from: number = 0, to: number = 10) {\n\t\tconst item = { label: header, items: [] };\n\n\t\tfor (var i = from; i <= to; ++i) {\n\t\t\titem.items.push({ label: i, value: i, type: type })\n\t\t}\n\n\t\treturn item;\n\t}\n\n\tcreateColorItem(header: string, type: OverrideType)  {\n\t\treturn {\n      label: header,\n      type: type,\n      items: [\n\t\t\t\t{ label: \"change\", type: type }\n\t\t\t]\n\t\t};\n\t}\n\n\n\tonOptionSelected(item) {\n\t\tif (item.type == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (OverrideType.Color == item.type) {\n\t\t\tthis.showColorPicker = true\n\t\t\tevent.stopPropagation();\n\t\t} else {\n\t\t\tthis.override[this.getPropertyName(item)] = item.value;\n\t\t\tthis.rebuildItems();\n\t\t}\n\t}\n\n\tonRemoveItem(item: OverrideItem) {\n\t\tdelete this.override[this.getPropertyName(item)];\n\t\tthis.rebuildItems();\n\t}\n\n\tgetItemHeader(item: OverrideItem) {\n\t\treturn OverrideType[item.type]\n\t\t\t.replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n\t\t\t.toLowerCase();\n\t}\n\n\tgetPropertyName(item) {\n\t\treturn OverrideType[item.type].replace(/^\\w/, c => c.toLowerCase())\n\t}\n\n\tgetOverrideType(prop) {\n\t\treturn OverrideType[prop.replace(/^\\w/, c => c.toUpperCase())];\n\t}\n\n\tonColorSelected(color) {\n\t\tvar item = this.createColorItem(\"Color\", OverrideType.Color);\n\n\t\tthis.override[this.getPropertyName(item)] = color;\n\t\tthis.rebuildItems();\n\t}\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { SeriesOverride } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-series-overrides',\n  template: `\n    <div class=\"gf-form-group\">\n      <h5>Series specific overrides </h5>\n\n      <div>\n\n        <editor-series-override *ngFor=\"let t of overrides; let i = index\"\n          [override]=\"t\" \n          [index]=\"i\"\n          (removed)=\"onRemove( $event )\">\n        </editor-series-override>\n\n        <div class=\"gf-form-button-row\">\n          <button class=\"btn btn-inverse\" (click)=\"onAdd()\">\n            <i class=\"fa fa-plus\"></i>&nbsp;Add Override\n          </button>\n        </div>\n        \n      </div>\n    </div>`\n})\nexport class SeriesOverridesEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    console.log( this.overrides );\n  }\n\n  onAdd(){\n    this.overrides.push( new SeriesOverride() );\n  }\n\n  onRemove( t: SeriesOverride ){\n    const index = this.overrides.indexOf( t )\n\n    if( -1 !== index ){\n      this.overrides.splice( index, 1 );\n    }\n\n    this.refresh();\n  }\n  \n  \n}\n","<div class=\"ed-form-inline\">\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableOperatorValues\"\r\n\t\t[(ngModel)]=\"threshold.operator\"\r\n\t\tlabel=\"T{{index+1}}\"\r\n\t\twidth=\"6\"\r\n\t\t(selectionChange)=\"refresh()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"value\"\r\n\t\tplaceholder=\"value\"\r\n\t\ttype=\"number\"\r\n\t\twidth=\"8\"\r\n\t\t(changed)=\"refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableColorValues\"\r\n\t\t[(ngModel)]=\"threshold.colorType\"\r\n\t\tlabel=\"Color\"\r\n\t\t(selectionChange)=\"refresh()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"threshold.fill\"\r\n\t\tlabel=\"Fill\"\r\n\t\t(checked)=\"refresh()\">\r\n\t </ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomColors\"\t\r\n\t\tlabel=\"Fill color\"\r\n\t\t[(ngModel)]=\"threshold.fillColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"threshold.line\"\r\n\t\tlabel=\"Line\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomColors\"\t\r\n\t\tlabel=\"Line color\"\r\n\t\t[(ngModel)]=\"threshold.lineColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableAxisValues\"\r\n\t\t[(ngModel)]=\"threshold.axis\"\r\n\t\tlabel=\"Y-Axis\" >\r\n\t</ed-dropdown>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( threshold )\">\r\n\t\t\t<a>\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { ThresholdOperator, ThresholdColor, ThresholdAxis, Threshold } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-threshold',\n  templateUrl: './threshold.html'\n})\nexport class ThresholdEditorComponent extends BaseChartEditorComponent {\n\n  @Input() threshold: Threshold;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<Threshold>();\n\n  availableOperatorValues = DropDownComponent.wrapEnum( ThresholdOperator );\n\n  availableColorValues = DropDownComponent.wrapEnum( ThresholdColor );\n\n  availableAxisValues = DropDownComponent.wrapEnum( ThresholdAxis );\n  \n  get value(){\n    return this.threshold.value;\n  }\n\n  set value( value ){\n    const v = +value;\n    this.threshold.value = isNaN( v ) || !value ? undefined : v;\n    console.log( this.threshold );\n  }\n\n  get showCustomColors(){\n\t\treturn ( ThresholdColor.Custom == this.threshold.colorType );\n\t}\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { Threshold } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-thresholds',\n  template: `\n    <div class=\"gf-form-group\">\n      <h5>Thresholds</h5>\n\n      <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n\n        <editor-threshold *ngFor=\"let t of thresholds; let i = index\"\n          [threshold]=\"t\" \n          [index]=\"i\"\n          (removed)=\"onRemove( $event )\">\n        </editor-threshold>\n\n        <div class=\"gf-form-button-row\">\n          <button class=\"btn btn-inverse\" (click)=\"onAdd()\" ng-disabled=\"ctrl.disabled\">\n            <i class=\"fa fa-plus\"></i>&nbsp;Add Threshold\n          </button>\n        </div>\n        \n      </div>\n    </div>`})\nexport class ThresholdsEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n  }\n  \n  onAdd(){\n    this.thresholds.push( new Threshold() );\n  }\n\n  onRemove( t: Threshold ){\n    const index = this.thresholds.indexOf( t )\n\n    if( -1 !== index ){\n      this.thresholds.splice( index, 1 );\n    }\n\n    this.refresh();\n  }\n}\n","<div class=\"ed-form-inline\">\r\n\t\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label\">T{{index+1}}</label>\r\n\t</div>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableDays\"\r\n\t\t[(ngModel)]=\"timeRegion.fromDay\"\r\n\t\tlabel=\"From\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"fromTime\"\r\n\t\tplaceholder=\"hh:mm\"\r\n\t\twidth=\"8\"\r\n\t\t(focusout)=\"timeRegion.fromTime=fromTime; refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableDays\"\r\n\t\t[(ngModel)]=\"timeRegion.toDay\"\r\n\t\tlabel=\"To\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"toTime\"\r\n\t\tplaceholder=\"hh:mm\"\r\n\t\twidth=\"8\"\r\n\t\t(focusout)=\"timeRegion.toTime=toTime; refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableColors\"\r\n\t\t[(ngModel)]=\"timeRegion.colorType\"\r\n\t\tlabel=\"Color\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"timeRegion.fill\" \r\n\t\tlabel=\"Fill\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomFillColor\"\t\r\n\t\tlabel=\"Fill color\"\r\n\t\t[(ngModel)]=\"timeRegion.fillColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"timeRegion.line\" \r\n\t\tlabel=\"Line\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomLineColor\"\t\r\n\t\tlabel=\"Line color\"\r\n\t\t[(ngModel)]=\"timeRegion.lineColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( timeRegion )\">\r\n\t\t\t<a  >\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { TimeRegion, TimeRegionColor, TimeRegionDay } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-time-region',\n  templateUrl: './time-region.html'\n})\nexport class TimeRegionEditorComponent extends BaseChartEditorComponent {\n\n  @Input() timeRegion: TimeRegion;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<TimeRegion>();\n\n  availableColors = DropDownComponent.wrapEnum( TimeRegionColor )\n  availableDays = DropDownComponent.wrapEnum( TimeRegionDay )\n\n  fromTime: string;\n\ttoTime: string;\n\n  get showCustomColors(){\n\t\treturn ( TimeRegionColor.Custom == this.timeRegion.colorType );\n\t}\n\n\tget showCustomFillColor(){\n\t\treturn ( this.showCustomColors && this.timeRegion.fill );\n\t}\n\n\tget showCustomLineColor(){\n\t\treturn ( this.showCustomColors && this.timeRegion.line );\n\t}\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  ngOnInit(){\n\t\tthis.fromTime = this.timeRegion.fromTime;\n\t\tthis.toTime = this.timeRegion.toTime;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { TimeRegion } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-time-regions',\n  template: `\n  <div class=\"gf-form-group\">\n    <h5>Time regions</h5>\n\n    <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n\n      <editor-time-region *ngFor=\"let t of timeRegions; let i = index\"\n        [timeRegion]=\"t\" \n        [index]=\"i\"\n        (removed)=\"onRemove( $event )\">\n      </editor-time-region>\n\n      <div class=\"gf-form-button-row\">\n        <button class=\"btn btn-inverse\" (click)=\"onAdd()\" ng-disabled=\"ctrl.disabled\">\n          <i class=\"fa fa-plus\"></i>&nbsp;Add Time Region\n        </button>\n      </div>\n      \n    </div>\n  </div>`\n})\nexport class TimeRegionsEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n  \n  onAdd(){\n    this.timeRegions.push( new TimeRegion() );\n  }\n\n  onRemove( t: TimeRegion  ){\n    const index = this.timeRegions.indexOf( t )\n\n    if( -1 !== index ){\n      this.timeRegions.splice( index, 1 );\n    }\n\n    this.refresh();\n  }\n}\n","<ed-side-tabstrip [(ngModel)]=\"index\">\r\n\t<ed-tab header=\"Draw options\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-draw-options></editor-draw-options>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tSeries overrides<span class=\"muted ml-1\" *ngIf=\"overrides.length\">({{overrides.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-series-overrides></editor-series-overrides>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tThresholds<span class=\"muted ml-1\" *ngIf=\"thresholds.length\">({{thresholds.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-thresholds></editor-thresholds>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tTime regions<span class=\"muted ml-1\" *ngIf=\"timeRegions.length\">({{timeRegions.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-time-regions></editor-time-regions>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-side-tabstrip>\r\n\r\n\r\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-display',\n  templateUrl: './display.html'\n})\nexport class DisplayEditorComponent extends BaseChartEditorComponent  {\n \n  index: number = 1;\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n  }\n}\n","<ed-tabstrip header=\"Graph\"\r\n\t[(ngModel)]=\"index\"\r\n\t(selected)=\"onTabSelected($event)\">\r\n\r\n\t<ed-tab header=\"General\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-general></editor-general>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Metrics\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-metrics></editor-metrics>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Axes\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-axes></editor-axes>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Legend\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-legend></editor-legend>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Display\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-display></editor-display>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Alert\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\talert will be here\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Time range\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\ttime range will be here\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-tabstrip>\r\n","import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'widget-editor',\n  templateUrl: './editor.html'\n})\nexport class ChartEditorComponent {\n  index: number = 0;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private location: Location){\n      this\n        .activatedRoute\n        .queryParamMap\n        .subscribe((params) => {\n          const p = params.get( 'tab' );\n\n          if( Number.isInteger( +p )){\n            this.index = +p;\n          } \n        });\n  }\n\n  onTabSelected( index: number ){\n    const url = this\n      .router\n      .createUrlTree([], {\n        relativeTo: this.activatedRoute,\n        queryParams: {tab: index},\n        queryParamsHandling: 'merge',\n      })\n      .toString()\n\n    this.location.go(url);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Panel, PANEL_TOKEN } from 'common';\r\nimport { DataPointNullValueOption, DataSet } from '../chart.m';\r\nimport { ColorHelper } from 'uilib';\r\n\r\n@Injectable()\r\nexport class DisplayManager {\r\n\r\n\tprivate get display() {\r\n\t\treturn this\r\n\t\t\t.panel\r\n\t\t\t.widget\r\n\t\t\t.display;\r\n\t}\r\n\r\n\tprivate get options(){\r\n\t\treturn this\r\n\t\t\t.panel\r\n\t\t\t.widget\r\n\t\t\t.component\r\n\t\t\t.control\r\n\t\t\t.chart\r\n\t\t\t.options;\r\n\t}\r\n\r\n\tconstructor ( @Inject( PANEL_TOKEN ) private panel: Panel ) {\r\n\r\n\t}\r\n\r\n\tsetup(ds: DataSet) {\r\n\t\t//this.setupSecondaryYAxis();\t\t\t\t\t\r\n\r\n\t\tthis.setupLines( ds );\r\n\t\tthis.setupPoints( ds );\r\n\t\tthis.setupNullValue( ds );\r\n\t}\r\n\r\n\tprivate setupLines( ds: DataSet ) {\r\n\t\tconst showLines = this.getShowLines( ds );\r\n\t\tconst lineWidth = this.getLineWidth( ds );\r\n\t\tconst fill = this.getFill( ds );\r\n\r\n\t\tlet opacity = ( fill / 10);\r\n\t\tds.fill = (/*showLines &&*/ fill > 0);\r\n\t\tds.backgroundColor = this.getLineColor( ds, opacity );\r\n\r\n\t\topacity = (showLines && lineWidth) ? 1 : 0;\r\n\t\tds.borderColor = this.getLineColor( ds, opacity );\r\n\t\tds.borderWidth = lineWidth;\r\n\r\n\t\t ds.steppedLine = this.getStaircase( ds );\r\n\r\n\t\tif( this.getDashes( ds ) ){\r\n\t\t\tconst len = this.getDashLength( ds );\r\n\t\t\tconst space = this.getDashSpace( ds );\r\n\t\t\tds.borderDash = [ len, space ]\r\n\t\t}\r\n\t\telse{\r\n\t\t\tds.borderDash = undefined;\r\n\t\t}\r\n\r\n\t\tds.order = this.getZIndex( ds );\r\n\t\tds.legend = this.getLegend( ds );\r\n\r\n\t\t// ds.yAxisID = ( 1 == this.getYAxis( ds ) ) ? 'A': 'B';\r\n\t}\r\n\r\n\tprivate setupPoints( ds: DataSet ) {\r\n\t\tconst showPoints = this.getShowPoints( ds );\r\n\r\n\t\tconst opacity = showPoints ? 1 : 0\r\n\t\tconst color = this.getLineColor( ds, opacity );\r\n\r\n\t\tds.pointBorderColor = `${color}`;\r\n\t\tds.pointBackgroundColor = `${color}`;\r\n\r\n\t\tds.pointRadius = showPoints ? this.getPointRadius( ds ) : 0;\r\n\t}\r\n\r\n\tprivate setupNullValue( ds: DataSet ) {\r\n\t\tswitch ( this.display.nullValue) {\r\n\t\t\tcase DataPointNullValueOption.Connected:\r\n\t\t\t\tthis.options.spanGaps = true;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? null : p.y );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DataPointNullValueOption.Null:\r\n\t\t\t\tthis.options.spanGaps = false;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? null : p.y );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DataPointNullValueOption.NullAsZero:\r\n\t\t\t\tthis.options.spanGaps = false;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? 0 : p.y );\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setupOverrides(){\r\n\t\t// const needSecondaryYAxis = AxesManager.needSecondaryYAxis( this.chart.widget );\r\n\r\n\t\t// const actualSecondaryYAxisUsers = this\r\n\t\t// \t.datasets\r\n\t\t// \t.filter( x => x.yAxisID == 'B' )\r\n\t\t// \t.length\r\n \r\n\t\t// const yAxesCount = this.chart.options.scales.yAxes.length;\r\n\t\t\r\n\t\t// if( 2 == yAxesCount && !needSecondaryYAxis ){\r\n\t\t// \tthis.chart.options.scales.yAxes.splice( 1, 1 );\r\n\t\t// } else if( /*1 == yAxesCount && needSecondaryYAxis*/ actualSecondaryYAxisUsers != needSecondaryYAxis ){\r\n\t\t// \tthis.chart.destroy();\r\n\t\t// \tthis.chart.needRebuild.emit();\r\n\t\t// \tthis.chart = undefined;\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\t// this.datasets.forEach(x => this.setup(x));\r\n\t}\r\n\r\n\tgetShowLines(ds: DataSet): boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lines ) ? o.lines : this.display.showLines;\r\n\t}\r\n\t\r\n\tgetLineWidth(ds: DataSet): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lineWidth ) ? o.lineWidth : this.display.lineWidth;\r\n\t}\r\n\r\n\tgetLineColor(ds: DataSet, opacity: number) : string{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\tconst color = ColorHelper.colors[ds.index % ColorHelper.colors.length];\r\n\t\tconst defaultColor = ColorHelper.hexToRgbString( color, opacity );\r\n\r\n\t\tconst useOverride = ( o && undefined != o.color )\r\n\t\tlet overrideColor: string;\r\n\r\n\t\tif( useOverride ){\r\n\t\t\toverrideColor = ColorHelper.hexToRgbString( o.color, opacity );\r\n\t\t}\r\n\r\n\t\treturn ( useOverride ) ? overrideColor : defaultColor;\r\n\t}\r\n\r\n\tgetFill( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lineFill ) ? o.lineFill : this.display.fill;\r\n\t}\r\n\r\n\tgetStaircase( ds: DataSet ): boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.staircase ) ? o.staircase : this.display.staircase;\r\n\t}\r\n\r\n\tgetDashes( ds: DataSet ){\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashes ) ? o.dashes : false;\r\n\t}\r\n\r\n\tgetDashLength( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashLength ) ? o.dashLength : 1;\r\n\t}\r\n\r\n\tgetDashSpace( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashSpace ) ? o.dashSpace : 1;\r\n\t}\r\n\r\n\tgetShowPoints( ds: DataSet ) : boolean {\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.points ) ? o.points : this.display.showPoints;\r\n\t}\r\n\r\n\tgetPointRadius( ds: DataSet ) : number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.pointRadius ) ? o.pointRadius : this.display.pointRadius;\r\n\t}\r\n\r\n\tgetLegend( ds: DataSet ) : boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.legend ) ? o.legend : true;\r\n\t}\r\n\r\n\tgetZIndex( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.zIndex ) ? o.zIndex : 0;\r\n\t}\r\n\r\n\tgetYAxis( ds: DataSet ){\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.yAxis ) ? o.yAxis : 1;\r\n\t}\r\n\r\n\tgetOverride( ds: DataSet ){\r\n\t\treturn this\r\n\t\t\t.display\r\n\t\t\t.overrides\r\n\t\t\t.find( x => x.alias && new RegExp( x.alias ).test( ds.label )  )\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Moment, Series } from 'common';\r\nimport { DataSet } from '../../chart.m';\r\nimport { DisplayManager } from '../display-manager';\r\n\r\n@Injectable()\r\nexport class DataConverter {\r\n\r\n\tconstructor( private dispay: DisplayManager ){\r\n\t\t\r\n\t}\r\n\t\r\n\ttoDataSets(data: Series[]) : DataSet[] {\r\n\t\tif (!data || 0 === data.length) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet dataSets = [];\r\n\t\tlet totalIndex = 0;\r\n\r\n\t\tdata.forEach(serie => {\r\n\t\t\tconst columns = serie.columns.slice(1);\r\n\r\n\t\t\tconst arr = [...columns.map((el, index) =>\r\n\t\t\t\tthis.toDataSet(serie, index + 1, totalIndex++))]\r\n\t\t\t\t.filter(x => x);\r\n\r\n\t\t\tdataSets = [...dataSets, ...arr];\r\n\r\n\t\t\tdataSets.forEach( x => this.dispay.setup( x ) )\r\n\t\t});\r\n\r\n\t\t\r\n\t\t//this.chart.widget.error = undefined;\r\n\t\treturn dataSets;\r\n\t}\r\n\r\n\tprivate toDataSet(serie: Series, index: number, totalIndex:number) : DataSet {\r\n\t\tconst values = serie\r\n\t\t\t.values\r\n\t\t\t.map(x => {\r\n\t\t\t\tconst isNull = (null == x[index]);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: Moment.valueOf( x[0] ),\r\n\t\t\t\t\ty: (isNull) ? x[index] : x[index],\r\n\t\t\t\t\tisNull: isNull\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tconst filteredValues = values\r\n\t\t\t.map(p => p.y)\r\n\t\t\t.filter(p => null != p)\r\n\t\t\t.map(p => parseFloat(p));\r\n\r\n\t\tif (0 == filteredValues.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst avg = (filteredValues.reduce((a, b) => a + b) / filteredValues.length)\r\n\r\n\t\tconst allNulls = filteredValues.every(x => x == null);\r\n\t\tconst allZeros = filteredValues.every(x => x == 0);\r\n\r\n\t\tconst ds = {\r\n\t\t\tlabel: this.generateDataSetName(serie, index),\r\n\t\t\tdata: values,\r\n\t\t\tlineTension: 0,\r\n\t\t\tmin: Math.min(...filteredValues),\r\n\t\t\tmax: Math.max(...filteredValues),\r\n\t\t\tavg: avg,\r\n\t\t\tcurrent: filteredValues.slice(-1)[0],\r\n\t\t\tallNulls: allNulls,\r\n\t\t\tallZeros: allZeros,\r\n\t\t\tindex: totalIndex,\r\n\t\t\tpointRadius:0,\r\n\t\t\tborderColor: \"#ff0000\"\r\n\t\t\t//widget: this.chart.widget,\r\n\t\t}\r\n\r\n\t\t//ds.borderColor = new ColorHelper().getColorAsArgbFunc( ds, 1 );\r\n\t\t//console.log( ds.borderColor );\r\n\r\n\t\t//this.display.setup(ds);\r\n\r\n\t\treturn ds;\r\n\t}\r\n\r\n\tprivate generateDataSetName( serie: Series, index: number ): string{\r\n\t\tlet root = `${serie.name}.${serie.columns[ index ]}`;\r\n\r\n\t\tlet tags = '';\r\n\t\tvar keys = Object.keys(serie.tags);\r\n\t\tvar keyIndex = 0;\r\n\r\n\t\tfor(var key in serie.tags){\r\n\t\t\ttags += `${keyIndex > 0 ? ', ': ''}${key}: ${serie.tags[ key ]}` ;\r\n\t\t\tkeyIndex++\r\n\t\t}\r\n\r\n\t\t// serie.tags.forEach( ( t, index ) => tags = `${tags}${index > 0 ? ',': ''} tag` )\r\n\r\n\t\tif( tags ){\r\n\t\t\troot = `${root} {${tags}}`;\r\n\t\t}\r\n\r\n\t\treturn root;\r\n\t}\r\n}","import { EventEmitter, Inject, Injectable } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { finalize, mergeMap, tap } from 'rxjs/operators';\r\nimport { Panel, TimeRangeStore, DataSourceService, PluginActivator, PANEL_TOKEN } from 'common';\r\nimport { DataConverter } from './data-converter';\r\nimport { ChartData } from '../../chart.m';\r\n\r\n@Injectable()\r\nexport class DataProvider {\r\n\trequest: string;\r\n\ttimeSubs: Subscription;\r\n\r\n\tdata$ = new EventEmitter<ChartData>();\r\n\r\n\tget metrics(){\r\n\t\treturn this.panel?.widget?.metrics;\r\n\t}\r\n\r\n\tconstructor (\r\n\t\tprivate pluginActivator: PluginActivator,\r\n\t\tprivate dsService: DataSourceService,\r\n\t\tprivate converter: DataConverter,\r\n\t\tprivate time: TimeRangeStore,\r\n\t\t@Inject( PANEL_TOKEN ) private panel: Panel ) {\r\n\r\n\t\t\tthis.timeSubs = this\r\n\t\t\t\t.time\r\n\t\t\t\t.range$\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\ttap( _ => this.request = '' ),\r\n\t\t\t\t\tmergeMap( _ => this.pluginActivator.createDataSourceMetricsBuilder( panel ) ),\r\n\t\t\t\t\tmergeMap( mb=> mb.build( this.metrics, time.range )))\r\n\t\t\t\t.subscribe( x => this.pull( <string>x ));\r\n\t}\r\n\r\n\tdestroy(){\r\n\t\tthis.timeSubs?.unsubscribe();\r\n\t}\r\n\r\n\tprivate pull( request: string){\r\n\t\tif (this.request === request) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.request = request;\r\n\r\n\t\tconsole.log( `pull: ${request}` );\r\n\t\t\r\n\t\tif (!request) {\r\n\t\t\tthis.onData([])\r\n\t\t} else {\r\n\t\t\tthis.panel.loading = true;\r\n\r\n\t\t\tthis\r\n\t\t\t\t.dsService\r\n\t\t\t\t.proxy( 6, request)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tfinalize(() => this.panel.loading = false ))\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\tx => this.onData( x ),\r\n\t\t\t\t\te => this.onError( e.error ));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onData( x ){\r\n\t\tthis.data$.emit( {\r\n\t\t\tdatasets: this.converter.toDataSets( x )\r\n\t\t} );\r\n\t}\r\n\r\n\tprivate onError(err) {\r\n\t\t// \tthis.chart.data.datasets = []\r\n\t\t//  this.chart.update();\r\n\t\t//  this.chart.widget.error = err.details;\r\n\t}\r\n}","import { Moment } from 'common';\r\nimport { ChartComponent } from '../../chart.c';\r\nimport { TooltipSortOrder } from '../../chart.m';\r\nimport { ColorHelper } from 'uilib';\r\nimport { AxisUnitHelper } from '../helpers/unit-helper';\r\n\r\ndeclare var Chart: any;\r\n\r\nexport class TooltipBuilder {\r\n\r\n\treadonly ID = \"chartjs-tooltip\";\r\n\treadonly TOOLTIP_SELECTOR = \"ed-tooltip\";\r\n\r\n\tstatic build( comp: ChartComponent ){\r\n\t\tChart.Tooltip.positioners.custom = (_, event) => {\r\n\t\t\treturn {\r\n\t\t\t\tx: event.x,\r\n\t\t\t\ty: event.y\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tmode: 'index',\r\n\t\t\tposition: \"custom\",\r\n\t\t\taxis: 'x',\r\n\t\t\tintersect: false,\r\n\t\t\tcaretSize: 0,\r\n\t\t\txPadding: 10,\r\n\t\t\tbodySpacing: 5,\r\n\t\t\ttitleAlign: 'right',\r\n\t\t\tenabled: false,\r\n\t\t\tcustom: ( model ) => new TooltipBuilder( model, comp ).create()\r\n\t\t}\r\n\t}\r\n\r\n\tget root(){\r\n\t\tvar tooltipEl = document.getElementById(this.ID);\r\n\r\n\t\t// Create element on first render\r\n\t\tif(!tooltipEl) {\r\n\t\t\ttooltipEl = document.createElement('div');\r\n\t\t\ttooltipEl.id = this.ID;\r\n\r\n\t\t\ttooltipEl.innerHTML = `<div class='graph-tooltip grafana-tooltip ${this.TOOLTIP_SELECTOR}'></div>`;\r\n\r\n\t\t\tdocument.body.appendChild(tooltipEl);\r\n\t\t}\r\n\r\n\t\treturn tooltipEl;\r\n\t}\r\n\r\n\tconstructor( private model, private component: ChartComponent ){\r\n\r\n\t}\r\n\r\n\tcreate(){\r\n\t\tvar tooltipElement = this.root;\r\n\r\n\t\t// Hide if no tooltip\r\n\t\tif( this.model.opacity === 0 /*|| chart.showAnnotView*/ ) {\r\n\t\t\ttooltipElement.style.opacity = '0';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttooltipElement.classList.remove('above', 'below', 'no-transform');\r\n\t\t\r\n\t\tif (this.model.yAlign) {\r\n\t\t\ttooltipElement.classList.add(this.model.yAlign);\r\n\t\t} else {\r\n\t\t\ttooltipElement.classList.add('no-transform');\r\n\t\t}\r\n\r\n\t\tif (this.model.body) {\r\n\t\t\tthis.createBody();\r\n\t\t}\r\n\r\n\t\tthis.setPosition();\r\n\t}\r\n\r\n\tprivate setPosition(){\r\n\t\tvar tooltipElement = this.root;\r\n\t\t\r\n\t\tconst chart = this.component.control.chart;\r\n\r\n\t\tvar position = chart\r\n\t\t\t.canvas\r\n\t\t\t.getBoundingClientRect();\r\n\r\n\t\tconst elWidth = document\r\n\t\t\t.getElementsByClassName(this.TOOLTIP_SELECTOR)[ 0 ]\r\n\t\t\t.getBoundingClientRect()\r\n\t\t\t.width;\r\n\r\n\t\tconst negMargin = ( this.model.caretX + elWidth > position.width ) ?\r\n\t\t\telWidth +  2 * this.model.xPadding : 0;\r\n\t\t\r\n\t\ttooltipElement.style.opacity = '1';\r\n\t\ttooltipElement.style.position = 'absolute';\r\n\t\ttooltipElement.style.left = position.left + window.pageXOffset + this.model.caretX - negMargin + 'px';\r\n\t\ttooltipElement.style.top = position.top + window.pageYOffset + this.model.caretY + 'px';\r\n\t\ttooltipElement.style.fontFamily = this.model._bodyFontFamily;\r\n\t\ttooltipElement.style.padding = this.model.yPadding + 'px ' + this.model.xPadding + 'px';\r\n\t\ttooltipElement.style.pointerEvents = 'none';\r\n\t}\r\n\r\n\tprivate createBody(){\r\n\t\tvar tooltipElement = this.root;\r\n\t\tvar chart = this.component;\r\n\t\tvar w = this.component.store.panel.widget;\r\n\r\n\t\tvar titleLines = this.model.title || [];\r\n\t\tvar innerHtml = '';\r\n\r\n\t\ttitleLines.forEach(function(title) {\r\n\t\t\tconst date = Date.parse( title );\r\n\t\t\tconst time = Moment.format ( date );\r\n\t\t\tinnerHtml += `<div class=\"graph-tooltip-time\">${time}</div>`\r\n\t\t});\r\n\r\n\t\tconst parsedBodyLines = this.sort();\r\n\r\n\t\tparsedBodyLines.forEach( (body, i) => {\r\n\t\t\tconst { seriesName, value, color } = body;\r\n\r\n\t\t\tlet seriesNameEl = `\r\n\t\t\t\t<div class=\"graph-tooltip-series-name\">\r\n\t\t\t\t\t<i class=\"fa fa-minus\" style=\"color:${color};\"></i> ${seriesName}:\r\n\t\t\t\t</div>`\r\n\r\n\t\t\tconst ds = chart\r\n\t\t\t\t.data\r\n\t\t\t\t.datasets\r\n\t\t\t\t.find( x => x.label == seriesName );\r\n\r\n\t\t\tconst axis =  w.axes.leftY;//( ds.yAxisID == 'A' ) ?\tw.axes.leftY : w.axes.rightY;\r\n\r\n\t\t\tconst decimals = w.legend.decimals ? w.legend.decimals : 1;\r\n\r\n\t\t\tconst resValue = AxisUnitHelper.getFormattedValue( value, axis.unit, decimals )\r\n\r\n\t\t\tlet valueEl = `<div class=\"graph-tooltip-value \">${resValue}</div>`;\r\n\r\n\t\t\tlet item = `\r\n\t\t\t\t<div class=\"graph-tooltip-list-item\">\r\n\t\t\t\t\t${seriesNameEl}\r\n\t\t\t\t\t${valueEl}\r\n\t\t\t\t</div>`\r\n\r\n\t\t\tinnerHtml += item;\r\n\t\t});\r\n\r\n\t\tvar tableRoot = tooltipElement.querySelector(`.${this.TOOLTIP_SELECTOR}`);\r\n\t\ttableRoot.innerHTML = innerHtml;\r\n\t}\r\n\r\n\tprivate sort() : Array<any>{\r\n\t\tfunction getBody(bodyItem) {\r\n\t\t\treturn bodyItem.lines;\r\n\t\t}\r\n\r\n\t\tvar bodyLines = this.model.body.map(getBody);\r\n\r\n\t\tconst sortOrder = this\r\n\t\t\t.component\r\n\t\t\t.widget\r\n\t\t\t.display\r\n\t\t\t.tooltipSortOrder;\r\n\r\n\t\tconst parsedBodyLines = [];\r\n\t\t\r\n\t\tbodyLines.forEach((body, i) => {\r\n\t\t\tvar colors = this.model.labelColors[ i ];\r\n\t\t\tvar color = ColorHelper.hexToRgbString( colors.backgroundColor);\r\n\r\n\t\t\tlet index = body[ 0 ].lastIndexOf( ':' );\r\n\t\t\tconst seriesName = body[ 0 ].substring( 0, index );\r\n\t\t\tconst value = parseFloat(this.model.dataPoints[ i ].value);\r\n\t\t\tparsedBodyLines.push( {seriesName, value, color} );\r\n\t\t});\r\n\r\n\t\tswitch( sortOrder ){\r\n\t\t\tcase TooltipSortOrder.Increasing:\r\n\t\t\t\tparsedBodyLines.sort( (a, b) => a.value - b.value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TooltipSortOrder.Decreasing:\r\n\t\t\t\tparsedBodyLines.sort( (a, b) => b.value - a.value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn parsedBodyLines;\r\n\t}\r\n}\r\n\r\n\r\n","import { ChartComponent } from '../chart.c';\r\nimport { Chart, ScaleType } from '../chart.m';\r\nimport { TooltipBuilder } from './drawers/tooltip';\r\nimport { AxisUnitHelper } from './helpers/unit-helper';\r\n\r\ndeclare var Chart: any;\r\n\r\nexport class OptionsProvider{\r\n\t\r\n\tstatic readonly AXIS_X = \"xAxis\";\r\n\tstatic readonly AXIS_Y_LEFT = \"yAxisL\";\r\n\tstatic readonly AXIS_Y_RIGHT = \"yAxisR\";\r\n\r\n\tstatic getOptions( comp: ChartComponent ){\r\n\t\tChart.defaults.global.defaultFontColor = '#e3e3e3';\r\n\t\tChart.defaults.global.defaultFontFamily = 'Roboto';\r\n\t\tChart.defaults.global.defaultFontSize = 11;\r\n\r\n\t\tconst w = comp.widget;\r\n\r\n\t\treturn {\r\n\t\t\tmaintainAspectRatio: false,\r\n\t\t\tanimation: false,\r\n\r\n\t\t\ttooltips: TooltipBuilder.build( comp ),\r\n\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\r\n\t\t\tspanGaps: true,\r\n\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [this.getAxisX( w )],\r\n\t\t\t\tyAxes: [ this.getAxisY( w, true ), this.getAxisY( w, false )] \r\n\t\t\t\t/*!AxesManager.needSecondaryYAxis(widget) true ? [axisYa] : [axisYa, axisYb]\t\t\t\t*/\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tprivate static getAxisX( w: Chart ){\r\n\t\treturn {\r\n\t\t\tid: this.AXIS_X,\r\n\t\t\ttype: 'time',\r\n\t\t\tgridLines: {\r\n\t\t\t\tcolor: 'rgba( 255,255,255, 0.1)',\r\n\t\t\t},\r\n\t\t\tticks: {\r\n\t\t\t\tautoSkip: true,\r\n\t\t\t\tautoSkipPadding: 50,\r\n\t\t\t\tmaxRotation: 0,\r\n\t\t\t\tminRotation: 0,\r\n\t\t\t},\r\n\t\t\ttime: {\r\n\t\t\t\tdisplayFormats: {\r\n\t\t\t\t\tsecond: 'HH:mm:ss',\r\n\t\t\t\t\tminute: 'HH:mm',\r\n\t\t\t\t\thour: 'HH:mm',\r\n\t\t\t\t\tday: 'M/D HH:mm',\r\n\t\t\t\t\tweek: 'M/D',\r\n\t\t\t\t\tmonth: 'M/D',\r\n\t\t\t\t\tyear: 'YYYY-M',\r\n\t\t\t\t },\r\n\t\t\t},\r\n\t\t\tdisplay: w.axes.x.show\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static getAxisY(w: Chart, left: boolean){\r\n\t\tconst wAxis = left ? w.axes.leftY : w.axes.rightY;\r\n\t\tconst id = left ? this.AXIS_Y_LEFT : this.AXIS_Y_RIGHT;\r\n\r\n\t\tconst axis = {\r\n\t\t\tid: id,\r\n\t\t\tdisplay: wAxis.show,\r\n\t\t\ttype: ( !wAxis.scale || wAxis.scale == ScaleType.Linear ) ? \"linear\" : \"logarithmic\",\r\n\t\t\tgridLines: {\r\n\t\t\t\tcolor: 'rgba( 255,255,255, 0.1)',\r\n\t\t\t\tzeroLineWidth: 3,\r\n\t\t\t},\r\n\t\t\tposition: left ? \"left\" : \"right\",\r\n\t\t\tscaleLabel:{\r\n\t\t\t\tdisplay: wAxis.label,\r\n\t\t\t\tlabelString: wAxis.label,\r\n\t\t\t},\r\n\t\t\tticks:{\r\n\t\t\t\tmin: wAxis.min,\r\n\t\t\t\tmax: wAxis.max,\r\n\t\t\t\tuserCallback: (label, index, labels) => {\r\n\t\t\t\t\tif( labels.length > 8 && !( index % 2 ) ){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn AxisUnitHelper.getFormattedValue( label, wAxis.unit, wAxis.decimals );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstacked: w.display.stack,\r\n\t\t}\r\n\r\n\t\treturn axis;\r\n\t}\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { UIChart } from 'primeng';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ChartComponent } from '../chart.c';\nimport { Chart, DataSet } from '../chart.m';\nimport { DataProvider } from '../view/data/data-provider';\nimport { DisplayManager } from '../view/display-manager';\n\n@Injectable()\nexport class ChartStore {\n\n\tprivate widget: BehaviorSubject<Chart> = new BehaviorSubject(null);\n\treadonly widget$: Observable<Chart> = this.widget.asObservable();\n\t\n\tprivate data: BehaviorSubject<DataSet[]> = new BehaviorSubject(null);\n\treadonly data$: Observable<DataSet[]> = this.data.asObservable();\n\n\tconstructor( \n\t\tpublic dataProvider: DataProvider,\n\t\tpublic display: DisplayManager,\n\t\t@Inject( PANEL_TOKEN ) public panel: Panel ){\n\n\t\t\tdataProvider\n\t\t\t\t.data$\n\t\t\t\t.subscribe( x => this.data.next( x?.datasets ?? [] ) );\n\n\t\t\tthis.widget.next( panel.widget );\n\t}\n\n\tdestroy(){\n\t\tthis.dataProvider.destroy();\n\t\tthis.widget.value.component = undefined;\n\t}\n}\n","import { Directive } from '@angular/core';\nimport { UIChart } from 'primeng';\nimport { Subscription } from 'rxjs';\nimport { ChartComponent } from '../chart.c';\nimport { Chart, ChartData, DataSet } from '../chart.m';\nimport { ChartStore } from './chart.store';\n\n@Directive() \nexport class BaseChartComponent {\n  data: ChartData;\n  widget: Chart;\n\n  get datasets():DataSet[]{\n    return this.data?.datasets;\n  }\n\n  dataSubs: Subscription;\n  widgetSubs: Subscription;\n\n  get component(): ChartComponent{\n    return this.widget.component;\n  }\n\n  get display(){\n    return this.store.display;\n  }\n\n\tconstructor( public store: ChartStore ){\n\n    this.dataSubs = store\n      .data$\n      .subscribe( x => this.data = { \n        datasets: x\n      } );\n\n    this.widgetSubs = store\n      .widget$\n      .subscribe( x => {\n        this.widget = x;\n\n        if( x ){\n          this.onWidgetReady();\n        }\n       } );\n  }\n\n  onWidgetReady(){\n\n  }\n  \n  ngOnDestroy(){\n    this.dataSubs?.unsubscribe();\n    this.widgetSubs?.unsubscribe();\n  }\n}\n","import { Directive } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Chart, Threshold} from '../chart.m';\nimport { ChartStore } from './chart.store';\n\n@Directive() \nexport class BaseChartExtension {\n\n  widgetSubs: Subscription;\n  widget: Chart;\n\n  constructor( public store: ChartStore ){\n    this.widgetSubs = store\n      .widget$\n      .subscribe( x => this.widget = x );\n  }\n\n  destroy(){\n    //console.log( \"destroy BaseChartExtension\" )\n    this.widgetSubs?.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BaseChartExtension } from '../../base/chart-base-extension';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { Threshold, ThresholdAxis, ThresholdColor, ThresholdOperator } from '../../chart.m';\r\nimport { OptionsProvider } from '../options-provider'\r\n\r\n@Injectable()\r\nexport class ThresholdDrawerPlugin extends BaseChartExtension {\r\n\t\r\n\tconstructor( store: ChartStore ){\r\n\t\tsuper( store );\r\n\t}\r\n\r\n\tafterDatasetsDraw(chart, _) {\r\n\t\tthis\r\n\t\t\t.widget\r\n\t\t\t?.display\r\n\t\t\t?.thresholds\r\n\t\t\t.forEach( t => new ThresholdDrawer( chart, t ).draw() );\r\n\t}\r\n}\r\n\r\nclass ThresholdDrawer{\r\n\tget context(){\r\n\t\treturn this.chart.chart.ctx;\r\n\t}\r\n\r\n\tconstructor( private chart: any, private threshold: Threshold ){\r\n\t\t\r\n\t}\r\n\r\n\tdraw(){\r\n\t\tif( this.threshold.value == undefined ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst scaleYA = this.chart.scales[ OptionsProvider.AXIS_Y_LEFT ];\r\n\t\tconst scaleYB = this.chart.scales[ OptionsProvider.AXIS_Y_RIGHT ];\r\n\t\tconst scaleX = this.chart.scales[ OptionsProvider.AXIS_X ];\r\n\r\n\t\tconst scaleY = ( this.threshold.axis == ThresholdAxis.Right && scaleYB ) ?\r\n\t\t\tscaleYB : scaleYA;\r\n\r\n\t\tconst offset = scaleY.getPixelForValue(this.threshold.value);\r\n\r\n\t\tconst gt = ( this.threshold.operator == ThresholdOperator.Gt );\r\n\r\n\t\tconst shouldIgnore = \r\n\t\t\t( !gt && this.threshold.value < scaleY.min ) ||\r\n\t\t\t( gt && this.threshold.value > scaleY.max ) ||\r\n\t\t\t( !this.chart.data.datasets.length );\r\n\r\n\t\tif( shouldIgnore ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if( offset < 0 || offset > scaleY.bottom ){\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\t//console.log( `${offset} | ${scaleY.bottom}` )  \r\n\r\n\t\tif( this.threshold.line ){\r\n\t\t\tconst lineColor = this.getColor( false );\r\n\t\t\tthis.renderLine( scaleX, lineColor, offset );\r\n\t\t}\r\n\r\n\t\tif( this.threshold.fill ){\r\n\t\t\tthis.renderRectangle( scaleX, scaleY, offset );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderLine(scaleX, color, offset ){\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.strokeStyle = color + \"99\";\r\n\t\tthis.context.lineWidth = 2;\r\n\t\tthis.context.moveTo( scaleX.left, offset);\r\n\t\tthis.context.lineTo( scaleX.right, offset);\r\n\t\tthis.context.stroke();\r\n\t}\r\n\r\n\tprivate renderRectangle( scaleX, scaleY, offset ){\r\n\t\tconst color = this.getColor( true );\r\n\r\n\t\tconst gt = ( this.threshold.operator == ThresholdOperator.Gt );\r\n\t\tthis.context.fillStyle = color + \"22\"\r\n\r\n\t\tconst x = scaleX.left;\r\n\t\tconst w = scaleX.width;\r\n\r\n\t\tconst topY = scaleY.getPixelForValue(scaleY.max);\r\n\t\tconst bottomY = scaleY.getPixelForValue(scaleY.min);\r\n\r\n\t\tconst y = gt ? topY : Math.max( topY, offset );\r\n\t\tlet h = gt ? offset - scaleY.top : scaleY.bottom - offset;\r\n\r\n\t\th = Math.min( bottomY - topY, h )\r\n\r\n\t\tthis.context.fillRect( x, y,\tw, h );\t\r\n\t}\r\n\r\n\tprivate getColor(fill){\r\n\t\tswitch( this.threshold.colorType ){\r\n\t\t\tcase ThresholdColor.Critical:\r\n\t\t\t\treturn '#ED2E18';\r\n\r\n\t\t\tcase ThresholdColor.Ok:\r\n\t\t\t\treturn '#10a345';\r\n\r\n\t\t\tcase ThresholdColor.Warning:\r\n\t\t\t\treturn '#f79520';\r\n\t\t}\r\n\r\n\t\tconst defaultColor = '#ffffff';\r\n\r\n\t\tif( fill ){\r\n\t\t\treturn this.threshold.fillColor ? this.threshold.fillColor : defaultColor;\r\n\t\t}\r\n\r\n\t\treturn this.threshold.lineColor ? this.threshold.lineColor : defaultColor;\r\n\t}\r\n}","import { Inject, Injectable } from '@angular/core';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { PixelHelper } from '../helpers/pixel-helper';\r\n\r\n\r\n@Injectable()\r\nexport class TrackballDrawerPlugin {\r\n\r\n\tconstructor( private store: ChartStore ){\r\n\r\n\t}\r\n\r\n\tafterDatasetsDraw(chart, easing) {\r\n\t\t//console.log( \"trackball plugin\" )\r\n\t\treturn;\r\n\t\t\r\n\t\tconst context = chart.chart.ctx;\r\n\r\n\t\tconst scaleX = chart.scales['x-axis-0'];\r\n\t\t\r\n\t\t//const scaleYA = chart.scales[ \"A\" ];\r\n\t\tconst scaleYA = chart.scales[ \"y-axis-0\" ];\r\n\r\n\t\tvar pos = this.getMousePos( chart.canvas, chart.trackball );\r\n\r\n\t\tconsole.log( pos );\r\n\r\n\t\tconst shouldIgnore = \r\n\t\t\t( !chart.trackball ) ||\r\n\t\t\t( 0 == chart.data.datasets.length ) ||\r\n\t\t\t( pos.x < scaleX.left || pos.x > scaleX.right );\r\n\r\n\t\tif( shouldIgnore ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst lw = 0.8;\r\n\t\tconst x = PixelHelper.alignPixel( chart, pos.x, lw )\r\n\t\tconst y1 = PixelHelper.alignPixel( chart, scaleYA.top, lw )\r\n\t\tconst y2 = PixelHelper.alignPixel( chart, scaleYA.bottom, lw )\r\n\r\n\t\tcontext.beginPath();\r\n\t\tcontext.strokeStyle = \"#880015\";\r\n\t\tcontext.lineWidth = lw;\r\n\t\tcontext.moveTo( x, y1 );\r\n\t\tcontext.lineTo( x, y2);\r\n\t\tcontext.stroke();\r\n\t}\r\n\r\n\tgetMousePos(canvas, evt) {\r\n\t\tif( !evt ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top\r\n    };\r\n\t}\r\n\r\n}","\r\nexport class PixelHelper {\r\n\tpublic static alignPixel( chart, pixel, width) {\r\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\r\n\t\tvar halfWidth = width / 2;\r\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n\t};\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Moment } from 'common';\r\nimport { BaseChartExtension } from '../../base/chart-base-extension';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { TimeRegion, TimeRegionColor, TimeRegionDay } from '../../chart.m';\r\nimport { OptionsProvider } from '../options-provider';\r\n\r\n@Injectable()\r\nexport class TimeRegionsDrawerPlugin extends BaseChartExtension {\r\n\r\n\tafterDatasetsDraw(chart, _) {\r\n\t\tthis\r\n\t\t\t.widget\r\n\t\t\t?.display\r\n\t\t\t?.timeRegions\r\n\t\t\t.forEach( t => new TimeRegionDrawer( chart, t ).draw() );\r\n\t}\r\n\r\n\tconstructor( store: ChartStore ){\r\n\t\tsuper( store );\r\n\t}\r\n}\r\n\r\nclass TimeRegionDrawer{\r\n\r\n\tget context(){\r\n\t\treturn this.chart.chart.ctx;\r\n\t}\r\n\r\n\tconstructor( private chart: any, private timeRegion: TimeRegion ){\r\n\t\t\r\n\t}\r\n\t\r\n\tdraw(){\r\n\t\tconst scaleX = this.chart.scales[ OptionsProvider.AXIS_X ];\r\n\r\n\t\tconst minX = Moment.create( scaleX.min );\r\n\t\tconst maxX = Moment.create ( scaleX.max );\r\n\r\n\t\tthis\r\n\t\t\t.getSpans( minX, maxX )\r\n\t\t\t.forEach( x => {\r\n\t\t\t\tlet os = scaleX.getPixelForValue(x.start.toDate());\r\n\t\t\t\tlet oe = scaleX.getPixelForValue(x.end.toDate());\r\n\r\n\t\t\t\tif(! ( oe <  scaleX.left || os > scaleX.right ) ){\r\n\t\t\t\t\tos = Math.max( os, scaleX.left );\r\n\t\t\t\t\toe = Math.min( oe, scaleX.right );\r\n\r\n\t\t\t\t\tthis.renderRegion( os, oe );\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t}\r\n\r\n\tprivate getSpans( min, max ){\r\n\t\tconst borders = this.getSpanBorders( min, max );\r\n\t\tconst time = this.getTime();\r\n\r\n\t\treturn this.isSpecificDayOfWeek() ? \r\n\t\t\tthis.getSpansDayOfWeek( borders, time ) : \r\n\t\t\tthis.getSpansAny( borders, time )\r\n\t}\r\n\r\n\tprivate getTime(){\r\n\t\tconst isSpecificDayOfWeek = this.isSpecificDayOfWeek();\r\n\r\n\t\tlet inputFromTime = this.timeRegion.fromTime;\r\n\t\tlet inputToTime = this.timeRegion.toTime;\r\n\r\n\t\tconst timeFormat = \"HH:mm\";\r\n\r\n\t\tlet tf = Moment.create(inputFromTime, timeFormat);\r\n\t\tlet tt = Moment.create(inputToTime, timeFormat);\r\n\r\n\t\tif( !tf.isValid() && !tt.isValid() ){\r\n\t\t\tif( isSpecificDayOfWeek ){\r\n\t\t\t\tconst midnight = Moment.create( \"00:00\", timeFormat );\r\n\t\t\t\ttf = midnight.clone();\r\n\t\t\t\ttt = midnight.clone();\r\n\t\t\t}\r\n\t\t} else if( tf.isValid() && !tt.isValid() ){\r\n\t\t\ttt = tf.clone();\r\n\t\t} else if( !tf.isValid() && tt.isValid() ){\r\n\t\t\ttf = tt.clone();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tfrom: ( tf.isValid() ) ? tf.toDate() : undefined,\r\n\t\t\tto: ( tt.isValid() ) ? tt.toDate() : undefined\r\n\t\t}\r\n\t}\r\n\tprivate getSpansDayOfWeek( borders, time ){\r\n\t\tconst max = borders.to;\r\n\t\tconst min = borders.from;\r\n\r\n\t\tvar current = min.clone();\r\n\t\tvar res = [];\r\n\r\n\t\tvar fromDayName = this.timeRegion.fromDay;//TimeRegionDay[  ]\r\n\t\tvar toDayName = this.timeRegion.toDay;//TimeRegionDay[  ];\r\n\t\t\r\n\t\twhile( current < max ){\r\n\t\t\tvar start = current.clone().day( fromDayName );\r\n\t\t\tvar end = start.clone().day( toDayName );\r\n\t\r\n\t\t\tif( end.isBefore( start ) ){\r\n\t\t\t\tend.add( 1, 'weeks' )\r\n\t\t\t}\r\n\r\n\t\t\tstart.set({\r\n\t\t\t\t'hour' : time.from.getHours(),\r\n\t\t\t\t'minute'  : time.from.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tend.set({\r\n\t\t\t\t'hour' : time.to.getHours(),\r\n\t\t\t\t'minute'  : time.to.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tres.push( { start, end } )\r\n\t\r\n\t\t\tcurrent.add( 1, 'weeks' );\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprivate getSpansAny( borders, time ){\r\n\t\tconst max = borders.to;\r\n\t\tconst min = borders.from;\r\n\r\n\t\tvar current = min.clone();\r\n\t\tvar res = [];\r\n\r\n\t\tif( !time.from && !time.to ){\r\n\t\t\treturn res;\r\n\t\t}\r\n\r\n\t\twhile( current < max ){\r\n\t\t\tvar start = current.clone().set({\r\n\t\t\t\t'hour' : time.from.getHours(),\r\n\t\t\t\t'minute'  : time.from.getMinutes()\r\n\t\t\t });\r\n\t\r\n\t\t\tvar end = current.clone().set({\r\n\t\t\t\t'hour' : time.to.getHours(),\r\n\t\t\t\t'minute'  : time.to.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tif( end.isBefore( start ) ){\r\n\t\t\t\tend.add( 1, 'days' );\r\n\t\t\t}\r\n\r\n\t\t\tres.push( { start, end } )\r\n\t\r\n\t\t\tcurrent.add( 1, 'days' );\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprivate getSpanBorders( min, max ){\r\n\t\tconst margin = this.isSpecificDayOfWeek() ? 8 : 1;\r\n\r\n\t\tconst from = min\r\n\t\t\t.clone()\r\n\t\t\t.subtract( margin, 'days' )\r\n\t\t\t.startOf( 'day' );\r\n\r\n\t\tconst to = max\r\n\t\t\t.clone()\r\n\t\t\t.add( margin, 'days' )\r\n\t\t\t.endOf( 'day' );\r\n\r\n\t\treturn { from, to }\r\n\t}\r\n\r\n\tprivate isSpecificDayOfWeek(){\r\n\t\treturn ( this.timeRegion.fromDay != TimeRegionDay.Any ) ||\r\n\t\t\t( this.timeRegion.toDay != TimeRegionDay.Any );\r\n\t}\r\n\r\n\tprivate renderRegion( offsetStart, offsetEnd){\r\n\r\n\t\tconst scaleYA = this.chart.scales[ OptionsProvider.AXIS_Y_LEFT ];\r\n\t\tconst scaleX = this.chart.scales[ OptionsProvider.AXIS_X ];\r\n\r\n\t\tconst minY = scaleYA.top;\r\n\t\tconst maxY = scaleYA.bottom;\r\n\r\n\t\tif( this.timeRegion.line ){\r\n\t\t\tif( scaleX.left != offsetStart ){\r\n\t\t\t\tthis.renderLine( minY, maxY, offsetStart );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( scaleX.right != offsetEnd && offsetEnd != offsetStart){\r\n\t\t\t\tthis.renderLine( minY, maxY, offsetEnd );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.timeRegion.fill && offsetEnd != offsetStart  ){\r\n\t\t\tthis.renderRectangle( minY, maxY, offsetStart, offsetEnd );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderLine( minY, maxY, offset ){\r\n\t\tconst color = this.getColor( false );\r\n\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.strokeStyle = color + \"99\";\r\n\t\tthis.context.lineWidth = 2;\r\n\t\tthis.context.moveTo( offset, minY );\r\n\t\tthis.context.lineTo( offset, maxY );\r\n\t\tthis.context.stroke();\r\n\t}\r\n\r\n\tprivate renderRectangle( minY, maxY, offsetStart, offsetEnd  ){\r\n\t\tconst color = this.getColor( true );\r\n\t\t\r\n\t\tthis.context.fillStyle = color + \"22\"\r\n\r\n\t\tconst x = offsetStart;\r\n\t\tconst w = offsetEnd - offsetStart;\r\n\r\n\t\tconst y = minY;\r\n\t\tconst h = maxY - minY;\r\n\r\n\t\tthis.context.fillRect( x, y,\tw, h );\t\r\n\t}\r\n\r\n\tprivate getColor( fill){\r\n\t\tswitch( this.timeRegion.colorType ){\r\n\t\t\tcase TimeRegionColor.Red:\r\n\t\t\t\treturn '#ED2E18';\r\n\r\n\t\t\tcase TimeRegionColor.Green:\r\n\t\t\t\treturn '#10a345';\r\n\r\n\t\t\tcase TimeRegionColor.Blue:\r\n\t\t\t\treturn '#1f78c1';\r\n\r\n\t\t\tcase TimeRegionColor.Yellow:\r\n\t\t\t\treturn '#f79520';\r\n\r\n\t\t\tcase TimeRegionColor.Gray:\r\n\t\t\t\treturn '#fce2de';\r\n\t\t}\r\n\r\n\t\tconst defaultColor = '#ffffff';\r\n\r\n\t\tif( fill ){\r\n\t\t\treturn this.timeRegion.fillColor ? this.timeRegion.fillColor : defaultColor;\r\n\t\t}\r\n\r\n\t\treturn this.timeRegion.lineColor ? this.timeRegion.lineColor : defaultColor;\r\n\t}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ThresholdDrawerPlugin } from './thresholds';\r\nimport { TimeRegionsDrawerPlugin } from './time-regions';\r\nimport { TrackballDrawerPlugin } from './trackball';\r\n\r\n@Injectable()\r\nexport class ExtensionsManager {\r\n\t\r\n\tget list() : ChartJsExtension[] {\r\n\t\treturn [\r\n\t\t\tthis.thresholds,\r\n\t\t\tthis.timeRegions\r\n\t\t]\r\n\t}\r\n\r\n\tconstructor( \r\n\t\tprivate thresholds: ThresholdDrawerPlugin,\r\n\t\tprivate trackball: TrackballDrawerPlugin,\r\n\t\tprivate timeRegions: TimeRegionsDrawerPlugin ){\r\n\r\n\t}\r\n\r\n\tdestroy(){\r\n\t\tthis.list.forEach( x => x.destroy() );\r\n\t}\r\n}\r\n\r\nexport interface ChartJsExtension{\r\n\tafterDatasetsDraw(chart, easing);\r\n\tdestroy();\r\n}","<div class=\"chart__wrapper\">\n\n  <div class=\"chart__right-legend-cont\">\n\n    <div class=\"chart__canvas-cont\">\n      <p-chart \n        type=\"line\"\n        [data]=\"data\"\n        [options]=\"options\"\n        [plugins]=\"plugins\"\n        height=\"100%\" #chart>\n      </p-chart>\n    </div>\n\n    <chart-legend *ngIf=\"legend.show && legend?.right\" class=\"chart__legend-right\"></chart-legend>\n    \n  </div>\n\n  <chart-legend *ngIf=\"legend.show && !legend?.right\" class=\"chart__legend-bottom\"></chart-legend>\n\n</div>\n\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DataProvider } from './view/data/data-provider';\nimport { OptionsProvider } from './view/options-provider';\nimport { DataConverter } from './view/data/data-converter';\nimport { DisplayManager } from './view/display-manager';\nimport { ChartStore } from './base/chart.store';\nimport { UIChart } from 'primeng';\nimport { BaseChartComponent } from './base/chart-base';\nimport { ChartJsExtension, ExtensionsManager } from './view/drawers/extensions-manager';\nimport { TrackballDrawerPlugin } from './view/drawers/trackball';\nimport { ThresholdDrawerPlugin } from './view/drawers/thresholds';\nimport { TimeRegionsDrawerPlugin } from './view/drawers/time-regions';\n\n@Component({\n  selector: 'widget',\n  templateUrl:'./chart.html',\n  styleUrls: ['./chart.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers:[\n    DataProvider,\n    DataConverter,\n    DisplayManager,\n    ChartStore,\n    \n    ExtensionsManager,\n    TrackballDrawerPlugin,\n    ThresholdDrawerPlugin,\n    TimeRegionsDrawerPlugin\n  ]\n})\nexport class ChartComponent extends BaseChartComponent {\n  \n  options: any;\n  plugins: ChartJsExtension[];\n  @ViewChild( UIChart ) control;\n\n  get legend(){\n    return this.widget?.legend;\n  }\n\n  constructor( store: ChartStore, private extensions: ExtensionsManager ) {\n    super( store )\n\n    this.options = OptionsProvider.getOptions( this );\n\n    this.plugins = extensions.list;\n  }\n\n  ngAfterViewInit(){\n    this.widget.component = this;\n  }\n\n  ngOnDestroy(){\n    this.store.destroy();\n    this.extensions.destroy();\n  }\n}\n","<div class=\"legend__top-wrapper\">\n\n\t<div *ngIf=\"!legend.table; else legendAsTable\" class=\"legend__bottom\"    >\n\t\t<perfect-scrollbar>\n\t\t\t\t\n\t\t\t<div class=\"legend__scroller-cont\"  >\n\n\t\t\t\t<div class=\"legend__series-wrapper\" [@fadeInOut] *ngIf=\"datasets?.length\"  >\n\t\t\t\t\t<div *ngFor=\"let ds of datasets\" class=\"legend__series\"\n\t\t\t\t\t (click)=\"onSeriesClicked(ds, $event)\" [ngClass]=\"{'hidden': ds.hidden }\">\n\n            <div class=\"legend__icon\" [style.color]=\"color( ds )\">\n              <i class=\"fa fa-minus pointer\" ></i>\n            </div>\n              \n            <a class=\"legend__alias pointer\" [title]=\"ds.label\">{{ds.label}}</a>\n\n            <div class=\"legend__value min\" *ngIf=\"legend.min\">{{min(ds)}}</div>\n\n            <div class=\"legend__value max\" *ngIf=\"legend.max\">{{max(ds)}}</div>\n\n            <div class=\"legend__value avg\" *ngIf=\"legend.avg\">{{avg(ds)}}</div>\n\n\t\t\t\t\t\t<div class=\"legend__value current\" *ngIf=\"legend.current\">{{current(ds)}}</div>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"legend__scroller-padding\"></div>\n\t\t\t</div>\n\n\t\t</perfect-scrollbar>\n  </div>\n  \n  <ng-template #legendAsTable>\n\t\t\n    <div class=\"legend__bottom-table\" > \n\t\t\t<perfect-scrollbar>\n\n\t\t\t\t<div class=\"legend__scroller-cont\" [@fadeInOut] *ngIf=\"datasets?.length\">\n\n\t\t\t\t\t<div class=\"legend__series-wrapper legend__full-width\">\n\t\t\t\t\t\t<table class=\"legend__full-width\">\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col class=\"legend__full-width\">\n\t\t\t\t\t\t\t</colgroup>\n\n\t\t\t\t\t\t\t<thead *ngIf=\"datasets && datasets.length > 0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th style=\"text-align: left;\"></th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.min\">min</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.max\">max</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.avg\">avg</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.current\">current</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr *ngFor=\"let ds of datasets\" class=\"legend__series\" [ngClass]=\"{'hidden': ds.hidden }\">\n\n\t\t\t\t\t\t\t\t\t<td (click)=\"onSeriesClicked(ds, $event)\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"legend__icon\" [style.color]=\"color(ds)\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-minus pointer\" ></i>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"legend__alias pointer\" [title]=\"ds.label\">{{ds.label}}</div>\n\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.min\">{{min(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.max\">{{max(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.avg\">{{avg(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.current\">{{current(ds)}}</td>\n\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"legend__scroller-padding\"></div>\n\n\t\t\t\t</div>\n\t\t\t</perfect-scrollbar>\n\t\t</div>\n  </ng-template>\n\n</div>","import { Component, ViewEncapsulation } from '@angular/core';\nimport { FadeInOutAnimation } from 'uilib';\nimport { BaseChartComponent } from '../../base/chart-base';\nimport { ChartStore } from '../../base/chart.store';\nimport { DataSet } from '../../chart.m';\nimport { AxisUnitHelper } from '../helpers/unit-helper';\n\n@Component({\n  selector: 'chart-legend',\n  templateUrl: './legend.html',\n  styleUrls:[ './legend.scss' ],\n\tanimations: [FadeInOutAnimation],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class ChartLegendComponent extends BaseChartComponent {\n\n  get legend(){\n    return this.widget.legend;\n  }\n\n  constructor( store: ChartStore ) {\n    super( store );\n  }\n\n  axis( ds: DataSet ){\n    const x = (<any>this.widget).axes\n    //return ( ds.yAxisID == 'A' ) ?x.leftY :x.rightY\n    return x.leftY;\n  }\n  \n  decimals( ds: DataSet ){\n\t\treturn this.legend.decimals ? this.legend.decimals : 0;\n\t}\n\n  unit( ds: DataSet ){\n\t\treturn this.axis( ds ).unit;\n  }\n  \n  color( ds: DataSet ){\n    return this\n\t\t  .display\n\t\t\t.getLineColor( ds, 1 );\n\t}\n\n  min( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.min, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tmax( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.max,\tthis.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tavg( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.avg, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tcurrent( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.current, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\n  onSeriesClicked( ds: DataSet, e: any ){\n    if( e.ctrlKey ){\n\t\t\tconst selected = ( false == ds.selected );\n\n\t\t\tthis.toggleSeries( ds, selected );\n\t\t} else{\n\t\t\tconst selected = ( ( undefined === ds.selected ) || false == ds.selected ) ?\n\t\t\t\ttrue : undefined;\n\n\t\t\tthis.toggleSeries( ds, selected );\n\t\n\t\t\tthis\n\t\t\t\t.datasets\n\t\t\t\t.filter( x => x != ds )\n\t\t\t\t.forEach( x => this.toggleSeries( x,  true == selected ? false : undefined ) );\n\t\t}\n\t\n\t\tthis.component.control.refresh();\n  }\n\n  toggleSeries( ds: DataSet, selected: boolean ){\n\t\tds.selected = selected;\n\n\t\tif( undefined === selected ){\n\t\t\tdelete ds.hidden;\n\t\t\tdelete ds.selected;\n\t\t} else {\n\t\t\tds.hidden = !selected;\n\t\t}\n\t}\n  \n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EdCommonModule } from 'common';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ChartModule } from 'primeng';\nimport { EdUilibModule } from 'uilib';\nimport { ChartComponent } from './chart.c';\nimport { AxesEditorComponent } from './edit/axes/axes';\nimport { AxisXEditorComponent } from './edit/axes/x-axis/x-axis';\nimport { AxisYEditorComponent } from './edit/axes/y-axis/y-axis';\nimport { DisplayEditorComponent } from './edit/display/display';\nimport { DrawOptionsEditorComponent } from './edit/display/draw-options/options';\nimport { SeriesOverrideEditorComponent } from './edit/display/series-overrides/override';\nimport { SeriesOverridesEditorComponent } from './edit/display/series-overrides/overrides';\nimport { ThresholdEditorComponent } from './edit/display/thresholds/threshold';\nimport { ThresholdsEditorComponent } from './edit/display/thresholds/thresholds';\nimport { TimeRegionEditorComponent } from './edit/display/time-regions/time-region';\nimport { TimeRegionsEditorComponent } from './edit/display/time-regions/time-regions';\nimport { ChartEditorComponent } from './edit/editor';\nimport { GeneralEditorComponent } from './edit/general/general';\nimport { LegendEditorComponent } from './edit/legend/legend';\nimport { MetricsEditorComponent } from './edit/metrics/metrics';\nimport { ChartLegendComponent } from './view/legend/legend';\n\n@NgModule({\n  declarations: [\n    ChartComponent,\n    ChartEditorComponent,\n\n    ChartLegendComponent,\n\n    AxesEditorComponent,\n    AxisXEditorComponent,\n    AxisYEditorComponent,\n\n    GeneralEditorComponent,\n    MetricsEditorComponent,\n    \n    LegendEditorComponent,\n\n    DisplayEditorComponent,\n    DrawOptionsEditorComponent,\n\n    ThresholdsEditorComponent,\n    ThresholdEditorComponent,\n\n    SeriesOverridesEditorComponent,\n    SeriesOverrideEditorComponent,\n    \n    TimeRegionsEditorComponent,\n    TimeRegionEditorComponent\n\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ChartModule,\n\n    EdCommonModule,\n    EdUilibModule,\n    PerfectScrollbarModule\n  ],\n  exports: [\n    ChartComponent,\n    ChartEditorComponent\n  ],\n \n \n})\nexport class ChartWidgetModule { }\n"]}