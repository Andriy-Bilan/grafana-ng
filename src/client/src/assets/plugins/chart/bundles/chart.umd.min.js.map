{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","../../../../app/plugins/widgets/chart/src/base/chart-base-editor.ts","../../../../app/plugins/widgets/chart/src/edit/general/general.ts","../../../../app/plugins/widgets/chart/src/edit/general/general.html","../../../../app/plugins/widgets/chart/src/edit/metrics/metrics.ts","../../../../app/plugins/widgets/chart/src/edit/metrics/metrics.html","../../../../app/plugins/widgets/chart/src/chart.m.ts","../../../../app/plugins/widgets/chart/src/view/helpers/unit-helper.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/units.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/y-axis.ts","../../../../app/plugins/widgets/chart/src/edit/axes/y-axis/y-axis.html","../../../../app/plugins/widgets/chart/src/edit/axes/x-axis/x-axis.ts","../../../../app/plugins/widgets/chart/src/edit/axes/x-axis/x-axis.html","../../../../app/plugins/widgets/chart/src/edit/axes/axes.ts","../../../../app/plugins/widgets/chart/src/edit/legend/legend.ts","../../../../app/plugins/widgets/chart/src/edit/legend/legend.html","../../../../app/plugins/widgets/chart/src/edit/display/draw-options/options.ts","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/override.html","../../../../app/plugins/widgets/chart/src/edit/display/draw-options/options.html","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/override.ts","../../../../app/plugins/widgets/chart/src/edit/display/series-overrides/overrides.ts","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/threshold.html","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/threshold.ts","../../../../app/plugins/widgets/chart/src/edit/display/thresholds/thresholds.ts","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-region.html","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-region.ts","../../../../app/plugins/widgets/chart/src/edit/display/time-regions/time-regions.ts","../../../../app/plugins/widgets/chart/src/edit/display/display.html","../../../../app/plugins/widgets/chart/src/edit/display/display.ts","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/cond.html","../../../../app/plugins/widgets/chart/src/edit/alert/config/conditions/cond.ts","../../../../app/plugins/widgets/chart/src/edit/alert/config/alert-config.html","../../../../app/plugins/widgets/chart/src/edit/alert/config/alert-config.ts","../../../../app/plugins/widgets/chart/src/edit/alert/notifications/alert-nots.ts","../../../../app/plugins/widgets/chart/src/edit/alert/notifications/alert-nots.html","../../../../app/plugins/widgets/chart/src/edit/alert/history/alert-history.ts","../../../../app/plugins/widgets/chart/src/edit/alert/alert.html","../../../../app/plugins/widgets/chart/src/edit/alert/history/alert-history.html","../../../../app/plugins/widgets/chart/src/edit/alert/alert.ts","../../../../app/plugins/widgets/chart/src/edit/time/time.ts","../../../../app/plugins/widgets/chart/src/edit/editor.html","../../../../app/plugins/widgets/chart/src/edit/time/time.html","../../../../app/plugins/widgets/chart/src/edit/editor.ts","../../../../app/plugins/widgets/chart/src/view/display-manager.ts","../../../../app/plugins/widgets/chart/src/view/data/data-converter.ts","../../../../app/plugins/widgets/chart/src/view/data/data-provider.ts","../../../../app/plugins/widgets/chart/src/view/drawers/tooltip.ts","../../../../app/plugins/widgets/chart/src/view/options-provider.ts","../../../../app/plugins/widgets/chart/src/base/chart.store.ts","../../../../app/plugins/widgets/chart/src/base/chart-base.ts","../../../../app/plugins/widgets/chart/src/base/chart-base-extension.ts","../../../../app/plugins/widgets/chart/src/view/drawers/thresholds.ts","../../../../app/plugins/widgets/chart/src/view/drawers/trackball.ts","../../../../app/plugins/widgets/chart/src/view/helpers/pixel-helper.ts","../../../../app/plugins/widgets/chart/src/view/drawers/time-regions.ts","../../../../app/plugins/widgets/chart/src/view/drawers/extensions-manager.ts","../../../../app/plugins/widgets/chart/src/chart.html","../../../../app/plugins/widgets/chart/src/chart.c.ts","../../../../app/plugins/widgets/chart/src/view/legend/legend.html","../../../../app/plugins/widgets/chart/src/view/legend/legend.ts","../../../../app/plugins/widgets/chart/src/chart.mod.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","BaseChartEditorComponent","panel","defineProperty","widget","_a","axes","legend","display","thresholds","timeRegions","overrides","time","TimeRangeMod","alert","component","control","chart","options","refresh","_b","update","comp","datasets","forEach","x","setup","pull","store","dataProvider","GeneralEditorComponent","_super","i0","ɵɵdirectiveInject","PANEL_TOKEN","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","rf","ctx","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵproperty","MetricsEditorComponent","ngOnInit","console","log","ngOnDestroy","ScaleType","AXIS_X","AXIS_Y_LEFT","AXIS_Y_RIGHT","TooltipMode","TooltipSortOrder","DataPointNullValueOption","ThresholdOperator","ThresholdColor","ThresholdAxis","Threshold","operator","Gt","colorType","Critical","fill","line","axis","Left","TimeRegionColor","TimeRegionDay","TimeRegion","Red","fromDay","Any","toDay","OverrideType","AxisUnitType","SeriesOverride","OverrideItem","type","AxisUnit","label","unit","command","AxisUnitHelper","getData","Common_Short","Common_Percent","Common_Percent01","Common_Humidity","Common_Decibel","Common_Hex0x","Common_Hex","Common_SciNotation","Common_LocaleString","Length_Millimetre","Length_Meter","Length_Feet","Length_Kilometer","Length_Mile","Area_SquareMeters","Area_SquareFeet","Area_SquareMiles","Mass_Milligram","Mass_Gram","Mass_Kilogram","Mass_MetricTon","None","getFormattedValue","decimals","toFixed","unitData","toString","toExponential","toLocaleString","getShortFormattedValue","dev","u","menuItems","items","AxisYEditorComponent","_this","left","units","_.cloneDeep","scales","DropDownComponent","wrapEnum","leftY","rightY","yAxes","show","v","chartAxis","scale","Linear","sl","scaleLabel","labelString","undefined","min","ticks","max","inputs","i0.ɵɵtextInterpolate","AxisXEditorComponent","xAxes","AxesEditorComponent","i0.ɵɵelement","LegendEditorComponent","DrawOptionsEditorComponent","availableWidth","wrapArray","availableTooltipModes","availableTooltipSortOrders","availableNullValueOptions","stack","stacked","i0.ɵɵtemplate","i0.ɵɵtextInterpolate1","_r5","showLines","showPoints","tooltipMode","tooltipSortOrder","SeriesOverrideEditorComponent","removed","EventEmitter","cmItems","showColorPicker","createBoolItem","Lines","createNumberItem","LineFill","LineWidth","Staircase","Dashes","DashLength","DashSpace","Points","PointRadius","Stack","createColorItem","Color","YAxis","ZIndex","Legend","HideInTooltip","ContextMenuComponent","wrapItems","onOptionSelected","item","rebuildItems","prop","override","getOverrideType","header","from","to","event","stopPropagation","getPropertyName","onRemoveItem","getItemHeader","replace","toLowerCase","c","toUpperCase","onColorSelected","color","i_r2","index","outputs","$event","emit","_r1","SeriesOverridesEditorComponent","onAdd","onRemove","t","indexOf","splice","ɵɵrestoreView","_r3_1","ɵɵnextContext","_r6_1","ThresholdEditorComponent","availableOperatorValues","availableColorValues","availableAxisValues","threshold","isNaN","Custom","i0.ɵɵpropertyInterpolate1","ThresholdsEditorComponent","TimeRegionEditorComponent","availableColors","availableDays","timeRegion","showCustomColors","fromTime","toTime","TimeRegionsEditorComponent","DisplayEditorComponent","AlertConditionEditorComponent","condition","AlertConfigEditorComponent","availableNoDataOptions","AlertNoDataOption","availableErrorOptions","AlertErrorOption","onAddCondition","conditions","AlertCondition","onRemoveCondition","onTestRule","testing","of","pipe","delay","finalize","subscribe","explorer","content","Notes","message","ErrorMessages","BAD_ALERT_EVAL","viewQuery","JsonExplorerComponent","AlertNotificationsEditorComponent","AlertHistoryEditorComponent","AlertEditorComponent","onAddAlert","AlertRule","onClose","onDelete","TimeEditorComponent","form","FormGroup","FormControl","validateTime","bind","shift","hide","valueChanges","valid","TimeRangeParser","isValid","invalidTime","ChartEditorComponent","router","activatedRoute","location","queryParamMap","params","get","Number","isInteger","onTabSelected","url","createUrlTree","relativeTo","queryParams","tab","queryParamsHandling","go","i1$2","Router","ActivatedRoute","i1$1","Location","DisplayManager","ds","setupLines","setupPoints","setupNullValue","getShowLines","lineWidth","getLineWidth","getFill","opacity","backgroundColor","getLineColor","borderColor","borderWidth","steppedLine","getStaircase","getDashes","len","getDashLength","space","getDashSpace","borderDash","order","getZIndex","getLegend","yAxisID","getYAxis","getShowPoints","pointBorderColor","pointBackgroundColor","pointRadius","getPointRadius","nullValue","Connected","spanGaps","data","y","isNull","Null","NullAsZero","getOverride","lines","overrideColor","ColorHelper","colors","defaultColor","hexToRgbString","useOverride","lineFill","staircase","dashes","dashLength","dashSpace","points","zIndex","yAxis","getOverrideByLabel","find","alias","RegExp","test","ɵɵinject","factory","ɵfac","DataConverter","dispay","toDataSets","dataSets","totalIndex","serie","arr","columns","slice","map","el","toDataSet","filter","values","Moment","valueOf","filteredValues","parseFloat","avg","reduce","a","allNulls","every","allZeros","generateDataSetName","lineTension","Math","apply","current","root","name","tags","keyIndex","keys","key","DataProvider","pluginActivator","dsService","converter","data$","timeSubs","range$","tap","_","request","mergeMap","createDataSourceMetricsBuilder","mb","build","metrics","range","raw","mod","modify","destroy","unsubscribe","tick","loading","proxy","onData","onError","err","details","i1","PluginActivator","DataSourceService","TimeRangeStore","TooltipBuilder","model","ID","TOOLTIP_SELECTOR","Chart","Tooltip","positioners","custom","mode","position","intersect","caretSize","xPadding","bodySpacing","titleAlign","enabled","tooltipEl","document","getElementById","createElement","id","innerHTML","body","appendChild","tooltipElement","classList","remove","yAlign","add","createBody","setPosition","style","canvas","getBoundingClientRect","elWidth","getElementsByClassName","width","negMargin","caretX","window","pageXOffset","top","pageYOffset","caretY","fontFamily","_bodyFontFamily","padding","yPadding","pointerEvents","w","titleLines","title","innerHtml","date","Date","parse","format","sort","seriesName","seriesNameEl","resValue","querySelector","bodyLines","bodyItem","sortOrder","parsedBodyLines","labelColors","lastIndexOf","substring","dataPoints","Increasing","Decreasing","hideInTooltip","OptionsProvider","getOptions","defaults","global","defaultFontColor","defaultFontFamily","defaultFontSize","maintainAspectRatio","animation","tooltips","getAxisX","getAxisY","gridLines","autoSkip","autoSkipPadding","maxRotation","minRotation","displayFormats","second","minute","hour","day","week","month","year","wAxis","zeroLineWidth","userCallback","labels","ChartStore","BehaviorSubject","widget$","asObservable","BaseChartComponent","dataSubs","widgetSubs","onWidgetReady","BaseChartExtension","ThresholdDrawerPlugin","afterDatasetsDraw","ThresholdDrawer","draw","scaleYA","scaleYB","scaleX","scaleY","Right","offset","getPixelForValue","gt","lineColor","getColor","renderLine","renderRectangle","context","beginPath","strokeStyle","moveTo","lineTo","right","stroke","fillStyle","topY","bottomY","h","bottom","fillRect","Ok","Warning","fillColor","TrackballDrawerPlugin","PixelHelper","alignPixel","pixel","devicePixelRatio","currentDevicePixelRatio","halfWidth","round","easing","getMousePos","evt","rect","clientX","clientY","TimeRegionsDrawerPlugin","TimeRegionDrawer","minX","maxX","getSpans","os","start","toDate","oe","end","renderRegion","borders","getSpanBorders","getTime","isSpecificDayOfWeek","getSpansDayOfWeek","getSpansAny","inputFromTime","inputToTime","timeFormat","tf","tt","clone","midnight","res","fromDayName","toDayName","isBefore","set","getHours","getMinutes","margin","subtract","startOf","endOf","offsetStart","offsetEnd","minY","maxY","Green","Blue","Yellow","Gray","ExtensionsManager","trackball","list","ChartComponent","extensions","plugins","ngAfterViewInit","UIChart","i0.ɵɵstyleProp","ChartLegendComponent","hideOnlyZeroes","hideOnlyNulls","onSeriesClicked","ctrlKey","selected","toggleSeries","selected_1","hidden","FadeInOutAnimation","ChartWidgetModule","imports","CommonModule","FormsModule","ReactiveFormsModule","ChartModule","EdCommonModule","EdUilibModule","PerfectScrollbarModule","declarations","exports","NgClass","NgComponentOutlet","NgForOf","NgIf","NgTemplateOutlet","NgStyle","NgSwitch","NgSwitchCase","NgSwitchDefault","NgPlural","NgPluralCase","i2","ɵangular_packages_forms_forms_y","NgSelectOption","ɵangular_packages_forms_forms_x","DefaultValueAccessor","NumberValueAccessor","RangeValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","SelectMultipleControlValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinLengthValidator","MaxLengthValidator","PatternValidator","CheckboxRequiredValidator","EmailValidator","NgModel","NgModelGroup","NgForm","FormControlDirective","FormGroupDirective","FormControlName","FormGroupName","FormArrayName","i3","i4","DialogActionsComponent","DialogComponent","DropDownValueTemplate","DropDownSelectedValueTemplate","PopupComponent","HierarchicalDropDownComponent","HintComponent","PreferencesComponent","EmptyListComponent","InfoBoxComponent","ProgressComponent","FilterBoxComponent","TextBoxComponent","TextBoxValidationTemplate","CheckBoxComponent","AutoFocusDirective","AvatarComponent","GridComponent","ColumnComponent","DeleteColumnComponent","SlideDownComponent","TabStripComponent","TabComponent","TabTitleTemplate","TabContentTemplate","SideTabStripComponent","LoadOrErrorComponent","ErrorPopupComponent","NoteComponent","ModuleLoaderComponent","UserPickerComponent","TeamPickerComponent","PermissionPickerComponent","PermissionRulePickerComponent","PermissionIconComponent","TagPickerComponent","TimeRangePickerComponent","PluginPickerComponent","ColorPickerComponent","PaletteEditorComponent","ColorCircleComponent","IconComponent","LabelIconComponent","RemoveHostDirective","PageComponent","PageHeaderComponent","PageTitleComponent","PageTabsNavigationComponent","PageDropdownNavigationComponent","TagComponent","DashboardExplorerComponent","DashboardExplorerDeleterComponent","DashboardExplorerMoverComponent","CardsLayoutSwitcherComponent","i5","PerfectScrollbarComponent","PerfectScrollbarDirective","AsyncPipe","UpperCasePipe","LowerCasePipe","JsonPipe","SlicePipe","DecimalPipe","PercentPipe","TitleCasePipe","CurrencyPipe","DatePipe","I18nPluralPipe","I18nSelectPipe","KeyValuePipe"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,aAGZO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,YAoGnEK,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,WAGKM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,EC5IX,IAAAU,EAAA,WAiDE,SAAAA,EAAoBC,GAAAzB,KAAAyB,MAAAA,SA/CpBjC,OAAAkC,eAAIF,EAAAtB,UAAA,SAAM,KAAV,WACE,OAAOF,KAAKyB,MAAME,wCAGpBnC,OAAAkC,eAAIF,EAAAtB,UAAA,OAAI,KAAR,iBACE,OAAkB,QAAlB0B,EAAO5B,KAAK2B,cAAM,IAAAC,OAAA,EAAAA,EAAEC,sCAGtBrC,OAAAkC,eAAIF,EAAAtB,UAAA,SAAM,KAAV,iBACE,OAAkB,QAAlB0B,EAAO5B,KAAK2B,cAAM,IAAAC,OAAA,EAAAA,EAAEE,wCAGtBtC,OAAAkC,eAAIF,EAAAtB,UAAA,UAAO,KAAX,iBACE,OAAkB,QAAlB0B,EAAO5B,KAAK2B,cAAM,IAAAC,OAAA,EAAAA,EAAEG,yCAGtBvC,OAAAkC,eAAIF,EAAAtB,UAAA,aAAU,KAAd,WACE,OAAOF,KAAK+B,QAAQC,4CAGtBxC,OAAAkC,eAAIF,EAAAtB,UAAA,cAAW,KAAf,WACE,OAAOF,KAAK+B,QAAQE,6CAGtBzC,OAAAkC,eAAIF,EAAAtB,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK+B,QAAQG,2CAGtB1C,OAAAkC,eAAIF,EAAAtB,UAAA,OAAI,KAAR,iBAGE,OAFAF,KAAK2B,OAAOQ,KAAuB,QAAnBP,EAAG5B,KAAK2B,OAAOQ,YAAI,IAAAP,EAAAA,EAAI,IAAIQ,EAAAA,aAEpCpC,KAAK2B,OAAOQ,sCAGrB3C,OAAAkC,eAAIF,EAAAtB,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK2B,OAAOU,uCAGrB7C,OAAAkC,eAAIF,EAAAtB,UAAA,UAAO,KAAX,WACE,OAAOF,KACJ2B,OACAW,UACAC,QACAC,MACAC,yCAMLjB,EAAAtB,UAAAwC,QAAA,mBAIa,QAHXC,EAEY,QAFZf,EAAA5B,KACG2B,OACAW,iBAAS,IAAAV,OAAA,EAAAA,EACRW,eAAO,IAAAI,GAAAA,EACPD,WAGNlB,EAAAtB,UAAA0C,OAAA,WACE,IAAMC,EAAO7C,KAAK2B,OAAOW,UAEzBO,MAAAA,GAAAA,EACIC,SACDC,SAAS,SAAAC,GAAK,OAAAH,EAAKd,QAAQkB,MAAOD,MAErChD,KAAK0C,WAGPlB,EAAAtB,UAAAgD,KAAA,iBAGc,QAFZtB,EAAA5B,KACG2B,OACAW,iBAAS,IAAAV,GAAAA,EACRuB,MACDC,aACAR,YA5EP,6EAAapB,ICEb,IAAA6B,EAAA,SAAAC,GAEE,SAAAD,EAAmC5B,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAH0BF,EAAAuD,EAAAC,KAA5C,CAA4C9B,oCAA/B6B,GAAsBE,EAAAC,kBAEZC,EAAAA,gDAFVJ,EAAsBK,UAAA,CAAA,CAAA,mBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,mBAAA,CAAA,QAAA,QAAA,aAAA,IAAA,QAAA,KAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,UAAA,sBAAA,CAAA,EAAA,gBAAA,WAAA,CAAA,OAAA,IAAA,cAAA,+CAAA,EAAA,gBAAA,OAAA,EAAA,UAAA,iBAAA,CAAA,QAAA,cAAA,aAAA,IAAA,EAAA,UAAA,kBAAAC,SAAA,SAAAC,EAAAC,SCRnCC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,QAAIC,EAAAA,eAE/BF,EAAAA,eAAAA,EAAAA,aAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,MAAAA,KAIDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,OAAAA,GAAoCC,EAAAA,OAAAA,EAAAA,eAAWC,EAAAA,eAC/CF,EAAAA,eAAAA,EAAAA,WAAAA,GAA8CG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,YAAAA,KAE9CF,EAAAA,OAAAA,EAAAA,UAAAC,EAAAA,eACDA,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,YAAAA,KAGDD,EAAAA,eAEFA,EAAAA,sBAnBGE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,OAQ8CD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,aAM9CD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,wICTH,IAAAC,EAAA,WAEE,SAAAA,EAA2ChD,GAAAzB,KAAAyB,MAAAA,SAG3CgD,EAAAvE,UAAAwE,SAAA,WACEC,QAAQC,IAAK,2BACbD,QAAQC,IAAK5E,KAAKyB,QAGpBgD,EAAAvE,UAAA2E,YAAA,WACEF,QAAQC,IAAK,8BAXjB,oCAAaH,GAAsBlB,EAAAC,kBAEZC,EAAAA,gDAFVgB,EAAsBf,UAAA,CAAA,CAAA,mBAAAG,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,QCTnCE,EAAAA,OAAAA,EAAAA,2CCGO,IAmFKU,EAnFCC,EAAS,QACTC,EAAc,SACdC,EAAe,UAiF5B,SAAYH,GACXA,EAAA,OAAA,SACAA,EAAA,KAAA,OACAA,EAAA,MAAA,QACAA,EAAA,MAAA,QACAA,EAAA,QAAA,UALD,CAAYA,IAAAA,EAAS,KAuCrB,IAcYI,EAKAC,EAMAC,EAMAC,EAKAC,EAOAC,EA3CZC,EAAA,WACCxF,KAAAyF,SAA8BJ,EAAkBK,GAGhD1F,KAAA2F,UAA4BL,EAAeM,SAE3C5F,KAAA6F,MAAgB,EAChB7F,KAAA8F,MAAgB,EAIhB9F,KAAA+F,KAAsBR,EAAcS,OAGrC,SAAYd,GACXA,EAAA,IAAA,MACAA,EAAA,OAAA,SAFD,CAAYA,IAAAA,EAAW,KAKvB,SAAYC,GACXA,EAAA,KAAA,OACAA,EAAA,WAAA,aACAA,EAAA,WAAA,aAHD,CAAYA,IAAAA,EAAgB,KAM5B,SAAYC,GACXA,EAAA,UAAA,YACAA,EAAA,KAAA,OACAA,EAAA,WAAA,aAHD,CAAYA,IAAAA,EAAwB,KAMpC,SAAYC,GACXA,EAAA,GAAA,KACAA,EAAA,GAAA,KAFD,CAAYA,IAAAA,EAAiB,KAK7B,SAAYC,GACXA,EAAA,OAAA,SACAA,EAAA,SAAA,WACAA,EAAA,QAAA,UACAA,EAAA,GAAA,KAJD,CAAYA,IAAAA,EAAc,KAO1B,SAAYC,GACXA,EAAA,KAAA,OACAA,EAAA,MAAA,QAFD,CAAYA,IAAAA,EAAa,KAKzB,IAeYU,EASAC,EAxBZC,EAAA,WACCnG,KAAA2F,UAA6BM,EAAgBG,IAE7CpG,KAAA6F,MAAgB,EAChB7F,KAAA8F,MAAgB,EAIhB9F,KAAAqG,QAAyBH,EAAcI,IACvCtG,KAAAuG,MAAuBL,EAAcI,MAMtC,SAAYL,GACXA,EAAA,KAAA,OACAA,EAAA,IAAA,MACAA,EAAA,MAAA,QACAA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SAND,CAAYA,IAAAA,EAAe,KAS3B,SAAYC,GACXA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MACAA,EAAA,IAAA,MARD,CAAYA,IAAAA,EAAa,KAWzB,IAWYM,EC3NAC,EDgNZC,EAAA,aAKAC,EACC,SAAoBC,EAAoC1F,GAApClB,KAAA4G,KAAAA,EAAoC5G,KAAAkB,MAAAA,IAKzD,SAAYsF,GACXA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,OAAA,IAAA,SACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,MAAA,IAAA,QACAA,EAAAA,EAAA,OAAA,IAAA,SAfD,CAAYA,IAAAA,EAAY,KC3NxB,SAAYC,GACXA,EAAAA,EAAA,KAAA,GAAA,OAEAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,oBAAA,GAAA,sBAEAA,EAAAA,EAAA,kBAAA,IAAA,oBACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,YAAA,IAAA,cAEAA,EAAAA,EAAA,kBAAA,IAAA,oBACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,iBAAA,IAAA,mBAEAA,EAAAA,EAAA,eAAA,IAAA,iBACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,eAAA,IAAA,iBA1BD,CAAYA,IAAAA,EAAY,KA6BxB,IAAAI,EACC,SACQD,EACAE,EACAC,EACAC,GAHAhH,KAAA4G,KAAAA,EACA5G,KAAA8G,MAAAA,EACA9G,KAAA+G,KAAAA,EACA/G,KAAAgH,QAAAA,GAGTC,EAAA,WAAA,SAAAA,YACQA,EAAAC,QAAP,SAAgBH,GACf,QAASA,GAER,KAAKN,EAAaU,aACjB,OAAO,IAAIN,EAAUJ,EAAaU,aAAc,QAAS,IAE1D,KAAKV,EAAaW,eACjB,OAAO,IAAIP,EAAUJ,EAAaW,eAAgB,kBAAmB,KAEtE,KAAKX,EAAaY,iBACjB,OAAO,IAAIR,EAAUJ,EAAaY,iBAAkB,oBAAqB,KAE1E,KAAKZ,EAAaa,gBACjB,OAAO,IAAIT,EAAUJ,EAAaa,gBAAiB,gBAAiB,MAErE,KAAKb,EAAac,eACjB,OAAO,IAAIV,EAAUJ,EAAac,eAAgB,UAAW,MAE9D,KAAKd,EAAae,aACjB,OAAO,IAAIX,EAAUJ,EAAae,aAAc,mBAAoB,IAErE,KAAKf,EAAagB,WACjB,OAAO,IAAIZ,EAAUJ,EAAagB,WAAY,cAAe,IAE9D,KAAKhB,EAAaiB,mBACjB,OAAO,IAAIb,EAAUJ,EAAaiB,mBAAoB,sBAAuB,IAE9E,KAAKjB,EAAakB,oBACjB,OAAO,IAAId,EAAUJ,EAAakB,oBAAqB,gBAAiB,IAIzE,KAAKlB,EAAamB,kBACjB,OAAO,IAAIf,EAAUJ,EAAamB,kBAAmB,kBAAmB,MAEzE,KAAKnB,EAAaoB,aACjB,OAAO,IAAIhB,EAAUJ,EAAaoB,aAAc,YAAa,KAE9D,KAAKpB,EAAaqB,YACjB,OAAO,IAAIjB,EAAUJ,EAAaqB,YAAa,YAAa,MAE7D,KAAKrB,EAAasB,iBACjB,OAAO,IAAIlB,EAAUJ,EAAasB,iBAAkB,iBAAkB,MAEvE,KAAKtB,EAAauB,YACjB,OAAO,IAAInB,EAAUJ,EAAauB,YAAa,YAAa,MAM7D,KAAKvB,EAAawB,kBACjB,OAAO,IAAIpB,EAAUJ,EAAawB,kBAAmB,qBAAsB,MAE5E,KAAKxB,EAAayB,gBACjB,OAAO,IAAIrB,EAAUJ,EAAayB,gBAAiB,oBAAqB,OAEzE,KAAKzB,EAAa0B,iBACjB,OAAO,IAAItB,EAAUJ,EAAa0B,iBAAkB,qBAAsB,OAG3E,KAAK1B,EAAa2B,eACjB,OAAO,IAAIvB,EAAUJ,EAAa2B,eAAgB,iBAAkB,MAErE,KAAK3B,EAAa4B,UACjB,OAAO,IAAIxB,EAAUJ,EAAa4B,UAAW,WAAY,KAE1D,KAAK5B,EAAa6B,cACjB,OAAO,IAAIzB,EAAUJ,EAAa6B,cAAe,gBAAiB,MAEnE,KAAK7B,EAAa8B,eACjB,OAAO,IAAI1B,EAAUJ,EAAa8B,eAAgB,iBAAkB,KAGtE,OAAO,IAAI1B,EAAUJ,EAAa+B,KAAM,OAAQ,KAG1CvB,EAAAwB,kBAAP,SAA0B3B,EAAOC,EAAM2B,GACtC,IAAIxH,EAAQ4F,EAAM6B,QAASD,GACrBE,EAAW3B,EAAeC,QAASH,GAEzC,OAAQ6B,EAAShC,MAChB,KAAKH,EAAagB,WACjB,OAAOX,EAAM+B,SAAU,IAExB,KAAKpC,EAAae,aACjB,MAAO,KAAKV,EAAM+B,SAAU,IAE7B,KAAKpC,EAAaY,iBACjB,OAAY,IAAMP,GAAQ6B,QAASD,GAAU,KAE9C,KAAKjC,EAAaiB,mBACjB,OAAOZ,EAAMgC,cAAcJ,GAE5B,KAAKjC,EAAakB,oBACjB,OAAOb,EAAMiC,iBAEd,KAAKtC,EAAaU,aACjB,OAAOF,EAAe+B,uBAAwBlC,EAAOC,EAAM2B,GAE5D,KAAKjC,EAAa+B,KACjB,OAAOtH,EAIR,QACC,OAAUA,EAAK,IAAI0H,EAAS7B,OAIxBE,EAAA+B,uBAAP,SAA+BlC,EAAOC,EAAM2B,GAK3C,IAAIO,EAAM,EACNC,EAAI,GAqBR,OAnBIpC,GAAS,KAAQA,EAAQ,KAC5BoC,EAAI,IACJD,EAAM,KACInC,GAAS,KAAWA,EAAQ,KACtCoC,EAAI,MACJD,EAAM,KAEEnC,GAAS,KAAcA,EAAQ,MACvCoC,EAAI,MACJD,EAAM,KACInC,GAAS,MAAiBA,EAAQ,MAC5CoC,EAAI,MACJD,EAAM,MAEEnC,GAAS,MAAoBA,EAAQ,OAC7CoC,EAAI,MACJD,EAAM,OAGMnC,EAAQmC,GAAMN,QAASD,GAAS,IAAIQ,KA1InD,GCjCaC,EAAiB,CAE7B,CACCrC,MAAO,OAAQsC,MAAO,CACrBnC,EAAeC,QAAQT,EAAa+B,MACpCvB,EAAeC,QAAQT,EAAaU,cACpCF,EAAeC,QAAQT,EAAaW,gBACpCH,EAAeC,QAAQT,EAAaY,kBACpCJ,EAAeC,QAAQT,EAAaa,iBACpCL,EAAeC,QAAQT,EAAac,gBACpCN,EAAeC,QAAQT,EAAae,cACpCP,EAAeC,QAAQT,EAAagB,YACpCR,EAAeC,QAAQT,EAAaiB,oBACpCT,EAAeC,QAAQT,EAAakB,uBAItC,CACCb,MAAO,SAAUsC,MAAO,CACvBnC,EAAeC,QAAQT,EAAamB,mBACpCX,EAAeC,QAAQT,EAAaoB,cACpCZ,EAAeC,QAAQT,EAAaqB,aACpCb,EAAeC,QAAQT,EAAasB,kBACpCd,EAAeC,QAAQT,EAAauB,eAItC,CACClB,MAAO,OAAQsC,MAAO,CACrBnC,EAAeC,QAAQT,EAAawB,mBACpChB,EAAeC,QAAQT,EAAayB,iBACpCjB,EAAeC,QAAQT,EAAa0B,oBAItC,CACCrB,MAAO,OAAQsC,MAAO,CACrBnC,EAAeC,QAAQT,EAAa2B,gBACpCnB,EAAeC,QAAQT,EAAa4B,WACpCpB,EAAeC,QAAQT,EAAa6B,eACpCrB,EAAeC,QAAQT,EAAa8B,mBChCvCc,EAAA,SAAA/F,GA8FE,SAAA+F,EAAmC5H,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YA7FPsJ,EAAAC,MAAgB,EAEzBD,EAAAE,MAAQC,EAAAA,UAAaN,GACrBG,EAAAI,OAASC,EAAAA,kBAAkBC,SAAU9E,YALGhF,EAAAuJ,EAAA/F,GAOxC9D,OAAAkC,eAAI2H,EAAAnJ,UAAA,OAAI,KAAR,WACE,OAAOF,KAAKuJ,KAAOvJ,KAAK6B,KAAKgI,MAAQ7J,KAAK6B,KAAKiI,wCAGjDtK,OAAAkC,eAAI2H,EAAAnJ,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKyC,QAAQiH,OAAOK,MAAO/J,KAAKuJ,KAAO,EAAI,oCAGpD/J,OAAAkC,eAAI2H,EAAAnJ,UAAA,OAAI,KAAR,WACE,OAAOF,KAAK+F,KAAKiE,UAGnB,SAAUC,GACRjK,KAAK+F,KAAKiE,KAAOhK,KAAKkK,UAAUnI,QAAUkI,EAC1CjK,KAAK0C,2CAGPlD,OAAAkC,eAAI2H,EAAAnJ,UAAA,OAAI,KAAR,WACE,OAAOF,KAAK+F,KAAKgB,UAGnB,SAAUkD,GACRjK,KAAK+F,KAAKgB,KAAOkD,EAEjBjK,KAAK0C,2CAGPlD,OAAAkC,eAAI2H,EAAAnJ,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK+F,KAAKoE,WAGnB,SAAWF,GACTjK,KAAK+F,KAAKoE,MAAQF,EAClBjK,KAAKkK,UAAUtD,KAASqD,GAAKnF,EAAUsF,OAAW,SAAW,cAE7DpK,KAAK0C,2CAGPlD,OAAAkC,eAAI2H,EAAAnJ,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK+F,KAAKe,WAGnB,SAAWmD,GACTjK,KAAK+F,KAAKe,MAAQmD,EAClB,IAAMI,EAAKrK,KAAKkK,UAAUI,WAEtBL,GACFI,EAAGtI,SAAU,EACbsI,EAAGE,YAAcN,IAEjBI,EAAGtI,SAAU,EACbsI,EAAGE,iBAAcC,GAGnBxK,KAAK0C,2CAGPlD,OAAAkC,eAAI2H,EAAAnJ,UAAA,WAAQ,KAAZ,WACE,OAAOF,KAAK+F,KAAK2C,cAGnB,SAAcuB,GACZjK,KAAK+F,KAAK2C,SAAWuB,GAAKA,OAAIO,EAE9BxK,KAAK0C,2CAGPlD,OAAAkC,eAAI2H,EAAAnJ,UAAA,MAAG,KAAP,WACE,OAAOF,KAAK+F,KAAK0E,SAGnB,SAASR,GACPjK,KAAK+F,KAAK0E,IAAMzK,KAAKkK,UAAUQ,MAAMD,IAAMR,GAAKA,OAAIO,EAEpDxK,KAAK0C,2CAGPlD,OAAAkC,eAAI2H,EAAAnJ,UAAA,MAAG,KAAP,WACE,OAAOF,KAAK+F,KAAK4E,SAGnB,SAASV,GACPjK,KAAK+F,KAAK4E,IAAM3K,KAAKkK,UAAUQ,MAAMC,IAAMV,GAAKA,OAAIO,EAEpDxK,KAAK0C,6CA3FT,CAA0ClB,oCAA7B6H,GAAoB9F,EAAAC,kBA8FVC,EAAAA,gDA9FV4F,EAAoB3F,UAAA,CAAA,CAAA,kBAAAkH,OAAA,CAAArB,KAAA,QAAA5F,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,mBAAA,CAAA,aAAA,IAAA,QAAA,OAAA,EAAA,UAAA,iBAAA,CAAA,QAAA,OAAA,QAAA,KAAA,aAAA,IAAA,EAAA,gBAAA,UAAA,OAAA,iBAAA,CAAA,QAAA,QAAA,aAAA,IAAA,QAAA,KAAA,EAAA,UAAA,OAAA,iBAAA,CAAA,EAAA,kBAAA,CAAA,OAAA,SAAA,aAAA,IAAA,QAAA,QAAA,QAAA,IAAA,cAAA,OAAA,EAAA,UAAA,iBAAA,CAAA,OAAA,SAAA,aAAA,IAAA,QAAA,QAAA,QAAA,IAAA,cAAA,OAAA,EAAA,UAAA,iBAAA,CAAA,OAAA,OAAA,aAAA,IAAA,QAAA,WAAA,QAAA,KAAA,cAAA,OAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,QAAA,QAAA,KAAA,EAAA,UAAA,kBAAAC,SAAA,SAAAC,EAAAC,SCZjCC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,GAA+BC,EAAAA,eAE3DF,EAAAA,eAAAA,EAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,KAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,2BAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,KAAAA,KAKDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAKDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,aAAAA,GAKCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,IAAAA,KAEDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,aAAAA,GAKCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,IAAAA,KAEDD,EAAAA,eACDA,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,aAAAA,GAKCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,SAAAA,KAEDD,EAAAA,eAGAF,EAAAA,eAAAA,GAAAA,aAAAA,GAICG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KACDD,EAAAA,eACDA,EAAAA,sBA7D6BE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,KAAAA,SAAAA,WAK3BtG,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAIAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,gBAAAA,OAAAA,CAAwB,UAAAN,EAAA6C,KAAxBvC,CAAwB,OAAAN,EAAAsF,OASxBjF,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,CAAmB,OAAAN,EAAAwF,QAalBnF,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,KASAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,KAUDD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,UASAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,+JCpDF,IAAAsG,EAAA,SAAAxH,GAmBE,SAAAwH,EAAmCrJ,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YApBwBF,EAAAgL,EAAAxH,GAExC9D,OAAAkC,eAAIoJ,EAAA5K,UAAA,OAAI,KAAR,WACE,OAAOF,KAAK6B,KAAKmB,mCAGnBxD,OAAAkC,eAAIoJ,EAAA5K,UAAA,YAAS,KAAb,WACE,OAAOF,KAAKyC,QAAQiH,OAAOqB,MAAO,oCAGpCvL,OAAAkC,eAAIoJ,EAAA5K,UAAA,OAAI,KAAR,WACE,OAAOF,KAAK+F,KAAKiE,UAGnB,SAAUC,GACRjK,KAAK+F,KAAKiE,KAAOhK,KAAKkK,UAAUnI,QAAUkI,EAC1CjK,KAAK0C,6CAhBT,CAA0ClB,oCAA7BsJ,GAAoBvH,EAAAC,kBAmBVC,EAAAA,gDAnBVqH,EAAoBpH,UAAA,CAAA,CAAA,kBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,mBAAA,CAAA,aAAA,IAAA,QAAA,OAAA,EAAA,UAAA,kBAAAC,SAAA,SAAAC,EAAAC,SCRjCC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,UAAMC,EAAAA,eAElCF,EAAAA,eAAAA,EAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,KAAAA,KACDD,EAAAA,eAGDA,EAAAA,sBAJEE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,uFCKF,IAAAwG,EAAA,SAAA1H,GAEE,SAAA0H,EAAmCvJ,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAHuBF,EAAAkL,EAAA1H,KAAzC,CAAyC9B,oCAA5BwJ,GAAmBzH,EAAAC,kBAETC,EAAAA,gDAFVuH,EAAmBtH,UAAA,CAAA,CAAA,gBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,SAAAC,SAAA,SAAAC,EAAAC,SAJ5B+G,EAAAA,UAAAA,EAAAA,iBACAA,EAAAA,UAAAA,EAAAA,gBAAAA,GACAA,EAAAA,UAAAA,EAAAA,wBADe1G,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,wCCAnB,IAAA0G,EAAA,SAAA5H,GAEE,SAAA4H,EAAmCzJ,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAHyBF,EAAAoL,EAAA5H,KAA3C,CAA2C9B,oCAA9B0J,GAAqB3H,EAAAC,kBAEXC,EAAAA,gDAFVyH,EAAqBxH,UAAA,CAAA,CAAA,kBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,mBAAA,CAAA,aAAA,IAAA,QAAA,OAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,WAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,eAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,kBAAA,CAAA,aAAA,IAAA,QAAA,MAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,MAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,MAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,UAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,QAAA,EAAA,UAAA,iBAAA,CAAA,OAAA,SAAA,aAAA,IAAA,QAAA,WAAA,QAAA,IAAA,cAAA,OAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,KAAA,QAAA,kBAAA,EAAA,UAAA,iBAAA,CAAA,aAAA,KAAA,QAAA,kBAAA,EAAA,UAAA,kBAAAC,SAAA,SAAAC,EAAAC,SCRlCC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,WAAOC,EAAAA,eAEnCF,EAAAA,eAAAA,EAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,KAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,MAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,MAAAA,KACDD,EAAAA,eACDA,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,UAAMC,EAAAA,eAElCF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,IAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,IAAAA,KACDD,EAAAA,eACDA,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,IAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,GAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,QAAAA,KACDD,EAAAA,eACDA,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,cAAAA,IAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,MAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,aAAAA,IAMCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,SAAAA,KACDD,EAAAA,eACDA,EAAAA,eAEDA,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,GAAAA,eAAWC,EAAAA,eAEvCF,EAAAA,eAAAA,GAAAA,cAAAA,IAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,cAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,IAGCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,eAAAA,KACDD,EAAAA,eAEDA,EAAAA,sBAjFEE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,MAMAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,OAMAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,OAWCD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,KAMAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,KAQAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,KAMAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,SAQAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,OASAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,UAYDD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,eAMAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAAAA,oHC1EF,IAAA2G,EAAA,SAAA7H,GAqBE,SAAA6H,EAAmC1J,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YApBhBsJ,EAAA8B,eAAiBzB,EAAAA,kBAAkB0B,UAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAE7E/B,EAAAgC,sBAAwB3B,EAAAA,kBAAkBC,SAAU1E,GAEpDoE,EAAAiC,2BAA6B5B,EAAAA,kBAAkBC,SAAUzE,GAEzDmE,EAAAkC,0BAA4B7B,EAAAA,kBAAkBC,SAAUxE,YARVtF,EAAAqL,EAAA7H,GAU9C9D,OAAAkC,eAAIyJ,EAAAjL,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK+B,QAAQ0J,WAGtB,SAAWxB,GACTjK,KAAK+B,QAAQ0J,MAAQxB,EACrBjK,KAAKyC,QAAQiH,OAAOK,MAAO,GAAU2B,QAAUzB,EAE/CjK,KAAK0C,6CAlBT,CAAgDlB,4BCK7C2C,EAAAA,eAAAA,EAAAA,OAAAA,IAAoDC,EAAAA,OAAAA,GAAWC,EAAAA,uDAAXE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,gCAEnDI,EAAAA,UAAAA,EAAAA,eAAAA,2CAAczG,EAAAA,WAAAA,QAAAA,EAAAA,MAAAA,CAAiB,eAAA,uDAVlCL,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,MAAAA,IACCA,EAAAA,eAAAA,EAAAA,OAAAA,IAAMG,EAAAA,WAAAA,SAAAA,WAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,gBAAAA,aAAAA,MACL2G,EAAAA,UAAAA,EAAAA,IAAAA,IACD5G,EAAAA,eAEAD,EAAAA,OAAAA,GACAuH,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IACAA,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,cAAAA,KAAAA,GAAAA,EAAAA,wBAGDtH,EAAAA,eAEDA,EAAAA,gFAPEE,EAAAA,UAAAA,GAAAqH,EAAAA,mBAAAA,IAAAA,EAAAA,cAAAA,GAAAA,MACmBrH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,IAAAA,EAAAA,KAAAA,CAA+B,WAAAqH,qCDLxCV,GAA0B5H,EAAAC,kBAqBhBC,EAAAA,gDArBV0H,EAA0BzH,UAAA,CAAA,CAAA,wBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,mBAAA,CAAA,aAAA,IAAA,QAAA,QAAA,CAAA,aAAA,IAAA,QAAA,QAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,aAAA,IAAA,QAAA,SAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,QAAA,OAAA,aAAA,IAAA,QAAA,IAAA,EAAA,UAAA,OAAA,gBAAA,mBAAA,CAAA,QAAA,aAAA,aAAA,IAAA,QAAA,IAAA,EAAA,UAAA,OAAA,WAAA,gBAAA,mBAAA,CAAA,QAAA,YAAA,aAAA,IAAA,QAAA,IAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,QAAA,eAAA,aAAA,IAAA,QAAA,IAAA,EAAA,UAAA,OAAA,WAAA,gBAAA,mBAAA,CAAA,QAAA,OAAA,aAAA,IAAA,QAAA,IAAA,EAAA,OAAA,UAAA,iBAAA,CAAA,QAAA,aAAA,aAAA,IAAA,QAAA,IAAA,EAAA,OAAA,UAAA,iBAAA,CAAA,aAAA,IAAA,QAAA,QAAA,EAAA,UAAA,iBAAA,CAAA,QAAA,aAAA,EAAA,UAAA,OAAA,aAAA,kBAAAC,SAAA,SAAAC,EAAAC,SEVvCC,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,cAAUC,EAAAA,eAEtC4G,EAAAA,UAAAA,EAAAA,cAAAA,GAKA9G,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,UAAAA,IAAAA,CAA+B,WAAA,WAAA,OAGpBJ,EAAAtB,YACZyB,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,WAAAA,IAAAA,CAAgC,WAAA,WAAA,OAGrBJ,EAAAtB,YACZyB,EAAAA,eAEDA,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,gBAAYC,EAAAA,eAExCF,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,KAAAA,IAAAA,CAA0B,mBAAA,WAAA,OAKPJ,EAAAtB,YACpByB,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,UAAAA,IAAAA,CAA+B,mBAAA,WAAA,OAMZJ,EAAAtB,YACpByB,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,UAAAA,IAAAA,CAA+B,WAAA,WAAA,OAIpBJ,EAAAtB,YACZyB,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,YAAAA,IAAAA,CAAiC,mBAAA,WAAA,OAKdJ,EAAAtB,YAEpByB,EAAAA,eAEDA,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,GAAAA,iBAAaC,EAAAA,eAEzCF,EAAAA,eAAAA,GAAAA,cAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,YAAAA,KAIDD,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,IAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,iBAAAA,KAIDD,EAAAA,eAEDA,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,GAAAA,yBAAqBC,EAAAA,eAEjDF,EAAAA,eAAAA,GAAAA,cAAAA,IACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAGDD,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,cAAAA,IACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,QAAAA,UAAAA,KAIDD,EAAAA,eACDA,EAAAA,sBA7FEE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,WAOAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,YAYAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,KAAAA,CAA0B,OAAAN,EAAAkH,gBAS1B7G,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,UAAAA,CAA+B,OAAAN,EAAAkH,eAA/B5G,CAA+B,YAAAN,EAAAnC,QAAA+J,WAU/BvH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,WAQAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,YAAAA,CAAiC,OAAAN,EAAAkH,eAAjC5G,CAAiC,YAAAN,EAAAnC,QAAAgK,YAejCxH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,sBAAAA,CAA8B,UAAAN,EAAAnC,QAAAiK,aAQ9BzH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,2BAAAA,CAAmC,UAAAN,EAAAnC,QAAAkK,kBAanC1H,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAMAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAAAA,UAAAA,CAA+B,OAAAN,EAAAsH,0BAA/BhH,CAA+B,aAAA,wGCxFjC,IAAA0H,EAAA,SAAA5I,GAWE,SAAA4I,EAAmCzK,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAPNsJ,EAAA6C,QAAU,IAAIC,EAAAA,aAExB9C,EAAA+C,QAAU,GACV/C,EAAAF,MAAQ,IAAIzJ,MACb2J,EAAAgD,iBAAkB,WATgCxM,EAAAoM,EAAA5I,GAelD4I,EAAAhM,UAAAwE,SAAA,WAAA,IAAA4E,EAAAtJ,KAECA,KAAKqM,QAAU,CACdrM,KAAKuM,eAAe,QAAS/F,EAAagG,OAC1CxM,KAAKyM,iBAAiB,YAAajG,EAAakG,UAChD1M,KAAKyM,iBAAiB,aAAcjG,EAAamG,WACjD3M,KAAKuM,eAAe,YAAa/F,EAAaoG,WAC9C5M,KAAKuM,eAAe,SAAU/F,EAAaqG,QAC3C7M,KAAKyM,iBAAiB,cAAejG,EAAasG,YAClD9M,KAAKyM,iBAAiB,aAAcjG,EAAauG,WACjD/M,KAAKuM,eAAe,SAAU/F,EAAawG,QAC3ChN,KAAKyM,iBAAiB,eAAgBjG,EAAayG,YAAa,EAAG,GACnEjN,KAAKuM,eAAe,QAAS/F,EAAa0G,OAC1ClN,KAAKmN,gBAAgB,QAAS3G,EAAa4G,OAE3CpN,KAAKyM,iBAAiB,SAAUjG,EAAa6G,MAAO,EAAG,GACvDrN,KAAKyM,iBAAiB,UAAWjG,EAAa8G,QAAS,EAAG,GAC1DtN,KAAKuM,eAAe,SAAU/F,EAAa+G,QAC3CvN,KAAKuM,eAAe,kBAAmB/F,EAAagH,gBAGrDC,EAAAA,qBAAqBC,UAAW1N,KAAKqM,SAAS,SAAArJ,GAAK,OAAAsG,EAAKqE,iBAAkB3K,EAAE4K,SAE5E5N,KAAK6N,gBAGL3B,EAAAhM,UAAA2N,aAAA,WACA,IAAMzE,EAAQ,IAAIzJ,MAElB,IAAK,IAAImO,KAAQ9N,KAAK+N,SACrB,GAAY,SAARD,EAAiB,CACpB,IAAIlH,EAAO5G,KAAKgO,gBAAgBF,GAEhC1E,EAAMnI,KAAK,IAAI0F,EAAaC,EAAM5G,KAAK+N,SAASD,KAIhD9N,KAAKoJ,MAAQA,EACbpJ,KAAK4C,UAGRsJ,EAAAhM,UAAAqM,eAAA,SAAe0B,EAAgBrH,GAC9B,MAAO,CACNE,MAAOmH,EAAQ7E,MAAO,CACrB,CAAEtC,MAAO,OAAQ5F,OAAO,EAAM0F,KAAMA,GACpC,CAAEE,MAAO,QAAS5F,OAAO,EAAO0F,KAAMA,MAKzCsF,EAAAhM,UAAAuM,iBAAA,SAAiBwB,EAAgBrH,EAAoBsH,EAAkBC,QAAlB,IAAAD,IAAAA,EAAA,QAAkB,IAAAC,IAAAA,EAAA,IAGtE,IAFA,IAAMP,EAAO,CAAE9G,MAAOmH,EAAQ7E,MAAO,IAE5BxI,EAAIsN,EAAMtN,GAAKuN,IAAMvN,EAC7BgN,EAAKxE,MAAMnI,KAAK,CAAE6F,MAAOlG,EAAGM,MAAON,EAAGgG,KAAMA,IAG7C,OAAOgH,GAGR1B,EAAAhM,UAAAiN,gBAAA,SAAgBc,EAAgBrH,GAC/B,MAAO,CACHE,MAAOmH,EACPrH,KAAMA,EACNwC,MAAO,CACT,CAAEtC,MAAO,SAAUF,KAAMA,MAM5BsF,EAAAhM,UAAAyN,iBAAA,SAAiBC,GACCpD,MAAboD,EAAKhH,OAILJ,EAAa4G,OAASQ,EAAKhH,MAC9B5G,KAAKsM,iBAAkB,EACvB8B,MAAMC,oBAENrO,KAAK+N,SAAS/N,KAAKsO,gBAAgBV,IAASA,EAAK1M,MACjDlB,KAAK6N,kBAIP3B,EAAAhM,UAAAqO,aAAA,SAAaX,UACL5N,KAAK+N,SAAS/N,KAAKsO,gBAAgBV,IAC1C5N,KAAK6N,gBAGN3B,EAAAhM,UAAAsO,cAAA,SAAcZ,GACb,OAAOpH,EAAaoH,EAAKhH,MACvB6H,QAAQ,qBAAsB,SAC9BC,eAGHxC,EAAAhM,UAAAoO,gBAAA,SAAgBV,GACf,OAAOpH,EAAaoH,EAAKhH,MAAM6H,QAAQ,OAAO,SAAAE,GAAK,OAAAA,EAAED,kBAGtDxC,EAAAhM,UAAA8N,gBAAA,SAAgBF,GACf,OAAOtH,EAAasH,EAAKW,QAAQ,OAAO,SAAAE,GAAK,OAAAA,EAAEC,mBAGhD1C,EAAAhM,UAAA2O,gBAAA,SAAgBC,GACf,IAAIlB,EAAO5N,KAAKmN,gBAAgB,QAAS3G,EAAa4G,OAEtDpN,KAAK+N,SAAS/N,KAAKsO,gBAAgBV,IAASkB,EAC5C9O,KAAK6N,kBA3HP,CAAmDrM,sDCG3C2C,EAAAA,eAAAA,EAAAA,yBAAAA,GAGEG,EAAAA,WAAAA,WAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,SAAAA,MACFD,EAAAA,mDAHEG,EAAAA,WAAAA,WAAAA,EAAAA,CAAc,QAAAuK,qCDJX7C,GAA6B3I,EAAAC,kBAWnBC,EAAAA,gDAXVyI,EAA6BxI,UAAA,CAAA,CAAA,2BAAAkH,OAAA,CAAAmD,SAAA,WAAAiB,MAAA,SAAAC,QAAA,CAAA9C,QAAA,WAAAxI,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,QAAA,iBAAA,QAAA,KAAA,EAAA,UAAA,iBAAA,CAAA,QAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,UAAA,EAAA,SAAA,CAAA,aAAA,IAAA,CAAA,EAAA,gBAAA,WAAA,CAAA,EAAA,KAAA,WAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,gBAAA,uBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,UAAA,EAAA,SAAA,CAAA,EAAA,KAAA,YAAA,CAAA,EAAA,UAAA,SAAA,iBAAA,CAAA,EAAA,YAAA,CAAA,EAAA,SAAA,CAAA,KAAA,IAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,SAAA,CAAA,EAAA,KAAA,WAAA,OAAA,WAAA,CAAA,QAAA,OAAA,EAAA,OAAA,YAAA,CAAA,QAAA,IAAA,CAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,QAAA,gBAAAC,SAAA,SAAAC,EAAAC,sCFV1CC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,aAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,SAAAA,MAAAA,KAGDD,EAAAA,eAEAsH,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,GAgBAxH,EAAAA,eAAAA,EAAAA,MAAAA,EAAAA,GAAkCG,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,YAAAA,IAAS0F,KAAAkF,MAC1C/K,EAAAA,eAAAA,EAAAA,QAAAA,GACC8G,EAAAA,UAAAA,EAAAA,IAAAA,GACD5G,EAAAA,eACDA,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACC8G,EAAAA,UAAAA,EAAAA,MAAAA,GACD5G,EAAAA,eAGAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,QAAAA,IAAqCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAiI,QAAAgD,KAAAjL,EAAA6J,aAC7C9C,EAAAA,UAAAA,GAAAA,IAAAA,IACD5G,EAAAA,eACDA,EAAAA,eAGDA,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,WAAAA,IAAUG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,gBAAAA,KACRH,EAAAA,eAAAA,GAAAA,oBAAAA,IAAmBG,EAAAA,WAAAA,YAAAA,SAAAA,GAAAA,OAAYJ,EAAA2K,gBAAAK,MAA2B7K,EAAAA,eAC5DA,EAAAA,eAEA4G,EAAAA,UAAAA,GAAAA,kBAAAA,GAAAA,mCA7CE1G,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,SAAAA,OAKID,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAoCID,EAAAA,UAAAA,IAAAC,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,CAA6B,SAAA4K,GAItB7K,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,EAAAA,kMGnBjB,IAAA6K,EAAA,SAAA/L,GAEE,SAAA+L,EAAmC5N,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAEd2E,QAAQC,IAAK0E,EAAKpH,oBAL8BpC,EAAAuP,EAAA/L,GAQlD+L,EAAAnP,UAAAoP,MAAA,WACEtP,KAAKkC,UAAUjB,KAAM,IAAIyF,IAG3B2I,EAAAnP,UAAAqP,SAAA,SAAUC,GACR,IAAMR,EAAQhP,KAAKkC,UAAUuN,QAASD,IAEjC,IAAMR,GACThP,KAAKkC,UAAUwN,OAAQV,EAAO,GAGhChP,KAAK4C,YAnBT,CAAoDpB,sDCEnD2C,EAAAA,eAAAA,EAAAA,kBAAAA,IAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,UAAAA,UAAAA,IAAAA,CAAiC,YAAA,WAAA,OAAAf,EAAAoM,cAAAC,GAAArM,EAAAsM,gBAAAnN,aAElC2B,EAAAA,+CAFCG,EAAAA,WAAAA,UAAAA,EAAAA,UAAAA,+DAUDL,EAAAA,eAAAA,EAAAA,kBAAAA,IAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,UAAAA,UAAAA,IAAAA,CAAiC,YAAA,WAAA,OAAAf,EAAAoM,cAAAG,GAAAvM,EAAAsM,gBAAAnN,aAElC2B,EAAAA,+CAFCG,EAAAA,WAAAA,UAAAA,EAAAA,UAAAA,6CDhBW6K,GAA8B9L,EAAAC,kBAEpBC,EAAAA,gDAFV4L,EAA8B3L,UAAA,CAAA,CAAA,4BAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,WAAA,QAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,sBAAA,CAAA,EAAA,MAAA,cAAA,EAAA,SAAA,CAAA,EAAA,KAAA,WAAA,CAAA,EAAA,WAAA,QAAA,YAAAC,SAAA,SAAAC,EAAAC,SApBvCC,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAIC,EAAAA,OAAAA,EAAAA,8BAA0BC,EAAAA,eAE9BF,EAAAA,eAAAA,EAAAA,OAEEwH,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,yBAAAA,GAMAxH,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GAAgCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAoL,WACvCrE,EAAAA,UAAAA,EAAAA,IAAAA,GAA0B7G,EAAAA,OAAAA,EAAAA,kBAC5BC,EAAAA,eACFA,EAAAA,eAEFA,EAAAA,eACFA,EAAAA,sBAb4BE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,wDEHhC,IAAAuL,EAAA,SAAAzM,GA0BE,SAAAyM,EAAmCtO,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAtBNsJ,EAAA6C,QAAU,IAAIC,EAAAA,aAExB9C,EAAA0G,wBAA0BrG,EAAAA,kBAAkBC,SAAUvE,GAEtDiE,EAAA2G,qBAAuBtG,EAAAA,kBAAkBC,SAAUtE,GAEnDgE,EAAA4G,oBAAsBvG,EAAAA,kBAAkBC,SAAUrE,YAXNzF,EAAAiQ,EAAAzM,GAa5C9D,OAAAkC,eAAIqO,EAAA7P,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKmQ,UAAUjP,WAGxB,SAAWA,GACT,IAAM+I,GAAK/I,EACXlB,KAAKmQ,UAAUjP,MAAQkP,MAAOnG,KAAQ/I,OAAQsJ,EAAYP,mCAG5DzK,OAAAkC,eAAIqO,EAAA7P,UAAA,mBAAgB,KAApB,WACA,OAASoF,EAAe+K,QAAUrQ,KAAKmQ,UAAUxK,6CAvBnD,CAA8CnE,uDCGtC2C,EAAAA,eAAAA,EAAAA,mBAAAA,GAGEG,EAAAA,WAAAA,WAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,SAAAA,MACFD,EAAAA,mDAHEG,EAAAA,WAAAA,YAAAA,EAAAA,CAAe,QAAAuK,qCDJZgB,GAAwBxM,EAAAC,kBA0BdC,EAAAA,gDA1BVsM,EAAwBrM,UAAA,CAAA,CAAA,qBAAAkH,OAAA,CAAAuF,UAAA,YAAAnB,MAAA,SAAAC,QAAA,CAAA9C,QAAA,WAAAxI,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,QAAA,IAAA,EAAA,OAAA,UAAA,QAAA,gBAAA,mBAAA,CAAA,cAAA,QAAA,OAAA,SAAA,QAAA,IAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,QAAA,QAAA,EAAA,OAAA,UAAA,gBAAA,mBAAA,CAAA,QAAA,OAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,WAAA,EAAA,QAAA,CAAA,QAAA,OAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,WAAA,EAAA,QAAA,CAAA,QAAA,SAAA,EAAA,OAAA,UAAA,gBAAA,mBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,gBAAA,UAAA,EAAA,SAAA,CAAA,EAAA,KAAA,YAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,YAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,aAAAC,SAAA,SAAAC,EAAAC,SDVrCC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,cAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,UAAAA,SAAAA,IAAAA,CAAgC,mBAAA,WAAA,OAGbJ,EAAAxB,aACpB2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,aAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,CAAmB,WAAA,WAAA,OAIRJ,EAAAxB,aACZ2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,UAAAA,UAAAA,IAAAA,CAAiC,mBAAA,WAAA,OAEdJ,EAAAxB,aACpB2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,UAAAA,KAAAA,IAAAA,CAA4B,WAAA,WAAA,OAEjBJ,EAAAxB,aACX2B,EAAAA,eAEDsH,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,kBAAAA,GAMAxH,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,UAAAA,KAAAA,IAAAA,CAA4B,WAAA,WAAA,OAEjBJ,EAAAxB,aACZ2B,EAAAA,eAEAsH,EAAAA,WAAAA,EAAAA,EAAAA,EAAAA,EAAAA,kBAAAA,GAMAxH,EAAAA,eAAAA,EAAAA,cAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,UAAAA,KAAAA,IAAAA,CAA4B,mBAAA,WAAA,OAETJ,EAAAxB,aACpB2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,QAAAA,IAAqCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAiI,QAAAgD,KAAAjL,EAAAiM,cAC7ChM,EAAAA,eAAAA,GAAAA,KACC8G,EAAAA,UAAAA,GAAAA,IAAAA,IACD5G,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eAEDA,EAAAA,sBA3DEE,EAAAA,UAAAA,GAAA+L,EAAAA,uBAAAA,QAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAFA9L,EAAAA,WAAAA,OAAAA,EAAAA,wBAAAA,CAAgC,UAAAN,EAAAiM,UAAA1K,UAQhClB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,OAQAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,qBAAAA,CAA6B,UAAAN,EAAAiM,UAAAxK,WAO7BpB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,UAAAA,MAKgBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,kBAOhBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,UAAAA,MAKgBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,kBAOhBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,oBAAAA,CAA4B,UAAAN,EAAAiM,UAAApK,4JEtB9B,IAAAwK,GAAA,SAAAjN,GAEE,SAAAiN,EAAmC9O,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAH6BF,EAAAyQ,EAAAjN,GAO7CiN,EAAArQ,UAAAoP,MAAA,WACEtP,KAAKgC,WAAWf,KAAM,IAAIuE,IAG5B+K,EAAArQ,UAAAqP,SAAA,SAAUC,GACR,IAAMR,EAAQhP,KAAKgC,WAAWyN,QAASD,IAElC,IAAMR,GACThP,KAAKgC,WAAW0N,OAAQV,EAAO,GAGjChP,KAAK0C,aAlBT,CAA+ClB,uDCoB9C2C,EAAAA,eAAAA,EAAAA,kBAAAA,IAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,WAAAA,UAAAA,IAAAA,CAAkC,YAAA,WAAA,OAAAf,EAAAoM,cAAAC,GAAArM,EAAAsM,gBAAAnN,aAEnC2B,EAAAA,+CAFCG,EAAAA,WAAAA,UAAAA,EAAAA,WAAAA,gEAUDL,EAAAA,eAAAA,EAAAA,kBAAAA,IAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,WAAAA,UAAAA,IAAAA,CAAkC,YAAA,WAAA,OAAAf,EAAAoM,cAAAG,GAAAvM,EAAAsM,gBAAAnN,aAEnC2B,EAAAA,+CAFCG,EAAAA,WAAAA,UAAAA,EAAAA,WAAAA,8CDlCW+L,IAAyBhN,EAAAC,kBAEfC,EAAAA,iDAFV8M,GAAyB7M,UAAA,CAAA,CAAA,sBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,WAAA,+CAAA,CAAA,EAAA,YAAA,QAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,sBAAA,CAAA,cAAA,gBAAA,EAAA,MAAA,cAAA,EAAA,SAAA,CAAA,EAAA,KAAA,WAAA,CAAA,EAAA,YAAA,QAAA,YAAAC,SAAA,SAAAC,EAAAC,SAnBlCC,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAIC,EAAAA,OAAAA,EAAAA,cAAUC,EAAAA,eAEdF,EAAAA,eAAAA,EAAAA,MAAAA,GAEEwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,mBAAAA,GAMAxH,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GAAgCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAoL,WACvCrE,EAAAA,UAAAA,EAAAA,IAAAA,GAA0B7G,EAAAA,OAAAA,EAAAA,mBAC5BC,EAAAA,eACFA,EAAAA,eAEFA,EAAAA,eACFA,EAAAA,sBAbsBE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,yDEH1B,IAAAgM,GAAA,SAAAlN,GAyBE,SAAAkN,EAAmC/O,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YArBNsJ,EAAA6C,QAAU,IAAIC,EAAAA,aAExB9C,EAAAmH,gBAAkB9G,EAAAA,kBAAkBC,SAAU3D,GAC9CqD,EAAAoH,cAAgB/G,EAAAA,kBAAkBC,SAAU1D,YARCpG,EAAA0Q,EAAAlN,GAa7C9D,OAAAkC,eAAI8O,EAAAtQ,UAAA,mBAAgB,KAApB,WACA,OAAS+F,EAAgBoK,QAAUrQ,KAAK2Q,WAAWhL,2CAGpDnG,OAAAkC,eAAI8O,EAAAtQ,UAAA,sBAAmB,KAAvB,WACC,OAASF,KAAK4Q,kBAAoB5Q,KAAK2Q,WAAW9K,sCAGnDrG,OAAAkC,eAAI8O,EAAAtQ,UAAA,sBAAmB,KAAvB,WACC,OAASF,KAAK4Q,kBAAoB5Q,KAAK2Q,WAAW7K,sCAOlD0K,EAAAtQ,UAAAwE,SAAA,WACA1E,KAAK6Q,SAAW7Q,KAAK2Q,WAAWE,SAChC7Q,KAAK8Q,OAAS9Q,KAAK2Q,WAAWG,UA/BhC,CAA+CtP,uDCGzC2C,EAAAA,eAAAA,EAAAA,qBAAAA,GAGEG,EAAAA,WAAAA,WAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,SAAAA,MACFD,EAAAA,mDAHEG,EAAAA,WAAAA,aAAAA,EAAAA,CAAgB,QAAAuK,sCDJXyB,IAAyBjN,EAAAC,kBAyBfC,EAAAA,iDAzBV+M,GAAyB9M,UAAA,CAAA,CAAA,uBAAAkH,OAAA,CAAA+F,WAAA,aAAA3B,MAAA,SAAAC,QAAA,CAAA9C,QAAA,WAAAxI,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,iBAAA,CAAA,QAAA,OAAA,EAAA,OAAA,UAAA,gBAAA,mBAAA,CAAA,cAAA,QAAA,QAAA,IAAA,EAAA,UAAA,gBAAA,YAAA,CAAA,QAAA,KAAA,EAAA,OAAA,UAAA,gBAAA,mBAAA,CAAA,QAAA,QAAA,EAAA,OAAA,UAAA,gBAAA,mBAAA,CAAA,QAAA,OAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,WAAA,EAAA,QAAA,CAAA,QAAA,OAAA,EAAA,UAAA,gBAAA,WAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,WAAA,EAAA,QAAA,CAAA,EAAA,gBAAA,UAAA,EAAA,SAAA,CAAA,EAAA,KAAA,YAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,YAAA,CAAA,QAAA,aAAA,EAAA,UAAA,gBAAA,aAAAC,SAAA,SAAAC,EAAAC,SDVtCC,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,QAAAA,GAA6BC,EAAAA,OAAAA,GAAYC,EAAAA,eAC1CA,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,QAAAA,IAAAA,CAAgC,mBAAA,WAAA,OAEbJ,EAAAxB,aACpB2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,aAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,SAAAA,IAAAA,CAAsB,YAAA,WAAA,OAAAJ,EAAAyM,WAAAE,SAAA3M,EAAA2M,SAGoB3M,EAAAxB,aAC3C2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,MAAAA,IAAAA,CAA8B,mBAAA,WAAA,OAEXJ,EAAAxB,aACpB2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,aAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,IAAAA,CAAoB,YAAA,WAAA,OAAAJ,EAAAyM,WAAAG,OAAA5M,EAAA4M,OAGkB5M,EAAAxB,aACvC2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GAECG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,UAAAA,IAAAA,CAAkC,mBAAA,WAAA,OAEfJ,EAAAxB,aACpB2B,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,KAAAA,IAAAA,CAA6B,WAAA,WAAA,OAElBJ,EAAAxB,aACZ2B,EAAAA,eAEAsH,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,kBAAAA,GAMAxH,EAAAA,eAAAA,GAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,WAAAA,KAAAA,IAAAA,CAA6B,WAAA,WAAA,OAElBJ,EAAAxB,aACZ2B,EAAAA,eAEAsH,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,kBAAAA,IAMAxH,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,QAAAA,IAAqCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAiI,QAAAgD,KAAAjL,EAAAyM,eAC7CxM,EAAAA,eAAAA,GAAAA,KACC8G,EAAAA,UAAAA,GAAAA,IAAAA,IACD5G,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eAEDA,EAAAA,sBAtE+BE,EAAAA,UAAAA,GAAAqH,EAAAA,mBAAAA,IAAAA,EAAAA,MAAAA,EAAAA,IAI7BrH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,cAAAA,CAAsB,UAAAN,EAAAyM,WAAAtK,SAOtB9B,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,UAOAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,cAAAA,CAAsB,UAAAN,EAAAyM,WAAApK,OAOtBhC,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,QAOAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,gBAAAA,CAAwB,UAAAN,EAAAyM,WAAAhL,WAOxBpB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,WAAAA,MAKgBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,qBAOhBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,WAAAA,MAKgBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,2KE/BlB,IAAAuM,GAAA,SAAAzN,GAEE,SAAAyN,EAAmCtP,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAH8BF,EAAAiR,EAAAzN,GAM9CyN,EAAA7Q,UAAAoP,MAAA,WACEtP,KAAKiC,YAAYhB,KAAM,IAAIkF,IAG7B4K,EAAA7Q,UAAAqP,SAAA,SAAUC,GACR,IAAMR,EAAQhP,KAAKiC,YAAYwN,QAASD,IAEnC,IAAMR,GACThP,KAAKiC,YAAYyN,OAAQV,EAAO,GAGlChP,KAAK0C,aAjBT,CAAgDlB,yBCzB7CyJ,EAAAA,UAAAA,EAAAA,iDAMgB9G,EAAAA,eAAAA,EAAAA,OAAAA,GAAkDC,EAAAA,OAAAA,GAAsBC,EAAAA,8CAAtBE,EAAAA,UAAAA,GAAAqH,EAAAA,mBAAAA,IAAAA,EAAAA,UAAAA,OAAAA,gCAAlExH,EAAAA,OAAAA,EAAAA,qBAAgBuH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,iCAAyBpH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,UAAAA,+BAGzCyG,EAAAA,UAAAA,EAAAA,qDAMU9G,EAAAA,eAAAA,EAAAA,OAAAA,GAAmDC,EAAAA,OAAAA,GAAuBC,EAAAA,8CAAvBE,EAAAA,UAAAA,GAAAqH,EAAAA,mBAAAA,IAAAA,EAAAA,WAAAA,OAAAA,gCAA7DxH,EAAAA,OAAAA,EAAAA,eAAUuH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,iCAAyBpH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,WAAAA,+BAGnCyG,EAAAA,UAAAA,EAAAA,+CAMY9G,EAAAA,eAAAA,EAAAA,OAAAA,GAAoDC,EAAAA,OAAAA,GAAwBC,EAAAA,8CAAxBE,EAAAA,UAAAA,GAAAqH,EAAAA,mBAAAA,IAAAA,EAAAA,YAAAA,OAAAA,gCAAhExH,EAAAA,OAAAA,EAAAA,iBAAYuH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,iCAAyBpH,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,YAAAA,+BAGrCyG,EAAAA,UAAAA,EAAAA,yDDFU8F,IAA0BxN,EAAAC,kBAEhBC,EAAAA,iDAFVsN,GAA0BrN,UAAA,CAAA,CAAA,wBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,WAAA,+CAAA,CAAA,EAAA,aAAA,QAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,sBAAA,CAAA,cAAA,gBAAA,EAAA,MAAA,cAAA,EAAA,SAAA,CAAA,EAAA,KAAA,WAAA,CAAA,EAAA,aAAA,QAAA,YAAAC,SAAA,SAAAC,EAAAC,SApBrCC,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,MAAIC,EAAAA,OAAAA,EAAAA,gBAAYC,EAAAA,eAEhBF,EAAAA,eAAAA,EAAAA,MAAAA,GAEEwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,qBAAAA,GAMAxH,EAAAA,eAAAA,EAAAA,MAAAA,GACEA,EAAAA,eAAAA,EAAAA,SAAAA,GAAgCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAoL,WACvCrE,EAAAA,UAAAA,EAAAA,IAAAA,GAA0B7G,EAAAA,OAAAA,EAAAA,qBAC5BC,EAAAA,eACFA,EAAAA,eAEFA,EAAAA,eACFA,EAAAA,sBAbwBE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,2DEL1B,IAAAwM,GAAA,SAAA1N,GAIE,SAAA0N,EAAmCvP,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAHhBsJ,EAAA0F,MAAgB,WAF0BlP,EAAAkR,EAAA1N,KAA5C,CAA4C9B,0BCL1C2C,EAAAA,eAAAA,EAAAA,OAAAA,GAAmEC,EAAAA,OAAAA,EAAAA,QAAIC,EAAAA,uCACvEF,EAAAA,eAAAA,EAAAA,OAAAA,GAAmEC,EAAAA,OAAAA,EAAAA,OAAGC,EAAAA,kDDI3D2M,IAAsBzN,EAAAC,kBAIZC,EAAAA,iDAJVuN,GAAsBtN,UAAA,CAAA,CAAA,mBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,SAAA,gBAAA,CAAA,eAAA,IAAA,CAAA,aAAA,IAAA,CAAA,QAAA,aAAA,EAAA,QAAA,CAAA,EAAA,QAAA,SAAAC,SAAA,SAAAC,EAAAC,SDRnCC,EAAAA,eAAAA,EAAAA,mBAAAA,GAAkBG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KACjBH,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,UACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,UACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,UACCwH,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGAA,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEDA,EAAAA,qBAlCkBG,EAAAA,WAAAA,UAAAA,EAAAA,mKGSlB,IAAAyM,GAAA,SAAA3N,GAOE,SAAA2N,EAAmCxP,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YALPsJ,EAAA0F,MAAgB,EAEf1F,EAAA6C,QAAU,IAAIC,EAAAA,sBALyBtM,EAAAmR,EAAA3N,KAAnD,CAAmD9B,uDC4BlD2C,EAAAA,eAAAA,EAAAA,OACCA,EAAAA,eAAAA,EAAAA,yBAAAA,IAGCG,EAAAA,WAAAA,WAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,kBAAAA,MACDD,EAAAA,eACDA,EAAAA,mDAJEE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,YAAAA,EAAAA,CAAe,QAAAuK,sCD9BLkC,IAA6B1N,EAAAC,kBAOnBC,EAAAA,iDAPVwN,GAA6BvN,UAAA,CAAA,CAAA,2BAAAkH,OAAA,CAAAsG,UAAA,YAAAlC,MAAA,SAAAC,QAAA,CAAA9C,QAAA,WAAAxI,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,WAAA,CAAA,QAAA,sCAAA,EAAA,QAAA,CAAA,EAAA,gBAAA,UAAA,EAAA,SAAA,CAAA,EAAA,KAAA,YAAA,CAAA,EAAA,gBAAA,gBAAA,YAAAC,SAAA,SAAAC,EAAAC,SDT1CC,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,MAAAA,GAECwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,GACAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,OAAAA,GACDtH,EAAAA,eAEAD,EAAAA,OAAAA,EAAAA,UAEAD,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,QAAAA,GAAqCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAiI,QAAAgD,KAAAjL,EAAAgN,cAC7CjG,EAAAA,UAAAA,EAAAA,IAAAA,GACD5G,EAAAA,eACDA,EAAAA,eACDA,EAAAA,sBAXoDE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,OACAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,+CGOpD,IAAA2M,GAAA,SAAA7N,GASE,SAAA6N,EAAmC1P,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YALhBsJ,EAAA8H,uBAAyBzH,EAAAA,kBAAkBC,SAAUyH,EAAAA,mBAErD/H,EAAAgI,sBAAwB3H,EAAAA,kBAAkBC,SAAU2H,EAAAA,2BAPNzR,EAAAqR,EAAA7N,GAa9C6N,EAAAjR,UAAAsR,eAAA,iBACExR,KAAKqC,MAAMoP,WAAkC,QAAxB7P,EAAG5B,KAAKqC,MAAMoP,kBAAU,IAAA7P,EAAAA,EAAI,GACjD5B,KAAKqC,MAAMoP,WAAWxQ,KAAM,IAAIyQ,EAAAA,gBAEhC1R,KAAKyB,MAAMN,MAASnB,KAAKyB,MAAMN,WAA+BqJ,EAAvB,sBAGzC2G,EAAAjR,UAAAyR,kBAAA,SAAmBhD,GACjB,IAAMK,EAAQhP,KAAKqC,MAAMoP,WAAWhC,QAASd,IAExC,IAAMK,GACThP,KAAKqC,MAAMoP,WAAW/B,OAAQV,EAAO,IAIzCmC,EAAAjR,UAAA0R,WAAA,WAAA,IAAAtI,EAAAtJ,KACEA,KAAK6R,SAAU,EAEfC,EAAAA,GAAI9R,KAAKqC,OACN0P,KACCC,EAAAA,MAAM,KACNC,EAAAA,UAAU,WAAM,OAAA3I,EAAKuI,SAAU,MAC9BK,WACC,SAAAlP,GACEsG,EAAK6I,SAASC,QAAUpP,KAM1B,SAAArC,WAAK,OAAA0R,EAAAA,MAAMlR,MACO,QADFwB,EACP,QADOf,EACdjB,EAAEQ,aAAK,IAAAS,OAAA,EAAAA,EAAE0Q,eAAO,IAAA3P,EAAAA,EAAI4P,EAAAA,cAAcC,sBA5C9C,CAAgDhR,qCAAnC2P,IAA0B5N,EAAAC,kBAShBC,EAAAA,iDATV0N,GAA0BzN,UAAA,CAAA,CAAA,wBAAA+O,UAAA,SAAAxO,EAAAC,6BAE1BwO,EAAAA,uBAAqB,o8BDblCvO,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,gBAAYC,EAAAA,eAExCF,EAAAA,eAAAA,EAAAA,aAAAA,GAICG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,aAAAA,GAICG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,UAAAA,KACDD,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,aAAAA,GAUCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,KACDD,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,KAAAA,GAA4BC,EAAAA,OAAAA,EAAAA,cAAUC,EAAAA,eAEtCsH,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAQAxH,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,QAAAA,GAAqCG,EAAAA,WAAAA,SAAAA,WAAAA,OAASJ,EAAAsN,oBAC7CvG,EAAAA,UAAAA,GAAAA,IAAAA,GACD5G,EAAAA,eACDA,EAAAA,eACDA,EAAAA,sBA1CEE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,MAQCD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,WAaAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,KAQGD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,MAAAA,yGE7BN,IAAAmO,GAAA,SAAArP,GAEE,SAAAqP,EAAmClR,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAHqCF,EAAA6S,EAAArP,KAAvD,CAAuD9B,qCAA1CmR,IAAiCpP,EAAAC,kBAEvBC,EAAAA,iDAFVkP,GAAiCjP,UAAA,CAAA,CAAA,+BAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,QCR9CE,EAAAA,OAAAA,EAAAA,uDCQA,IAAAwO,GAAA,SAAAtP,GAEE,SAAAsP,EAAmCnR,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAH+BF,EAAA8S,EAAAtP,KAAjD,CAAiD9B,yBCL9CyJ,EAAAA,UAAAA,EAAAA,6CAMA7G,EAAAA,OAAAA,EAAAA,yCAGA6G,EAAAA,UAAAA,EAAAA,oDAMAA,EAAAA,UAAAA,EAAAA,4EAMA9G,EAAAA,eAAAA,EAAAA,YAAAA,GAICG,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,aAEAH,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,MAAAA,IACCC,EAAAA,OAAAA,EAAAA,sDACAD,EAAAA,eAAAA,EAAAA,MAAAA,IACCC,EAAAA,OAAAA,EAAAA,8DACDC,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eAGAF,EAAAA,eAAAA,EAAAA,qBACCA,EAAAA,eAAAA,EAAAA,SAAAA,IAAQG,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,cAA4CF,EAAAA,OAAAA,EAAAA,UAAMC,EAAAA,eAC1DF,EAAAA,eAAAA,EAAAA,SAAAA,IAAQG,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,cAAAA,GAAAA,aAAiDF,EAAAA,OAAAA,GAAAA,UAAMC,EAAAA,eAChEA,EAAAA,eACDA,EAAAA,oEA5CHF,EAAAA,eAAAA,EAAAA,mBAAAA,GAAkBG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,MAAAA,KACjBH,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,UACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,GAAAA,EAAAA,cAAAA,GAuBDtH,EAAAA,eAEDA,EAAAA,+CAhDkBG,EAAAA,WAAAA,UAAAA,EAAAA,4DAmDjBL,EAAAA,eAAAA,EAAAA,MAAAA,IACCA,EAAAA,eAAAA,EAAAA,MAAAA,IACCA,EAAAA,eAAAA,EAAAA,SAAAA,IAAgCG,EAAAA,WAAAA,SAAAA,WAAAA,OAAAA,EAAAA,cAAAA,GAAAA,EAAAA,gBAAAA,gBAC/B2G,EAAAA,UAAAA,EAAAA,IAAAA,IACA7G,EAAAA,OAAAA,EAAAA,kBACDC,EAAAA,eACDA,EAAAA,eACDA,EAAAA,kDDlDYuO,IAA2BrP,EAAAC,kBAEjBC,EAAAA,iDAFVmP,GAA2BlP,UAAA,CAAA,CAAA,yBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAE,SAAA,SAAAC,EAAAC,QERxCE,EAAAA,OAAAA,EAAAA,iDCQA,IAAAyO,GAAA,SAAAvP,GAIE,SAAAuP,EAAmCpR,GAAnC,IAAA6H,EACEhG,EAAAzC,KAAAb,KAAOyB,IAAOzB,YAHhBsJ,EAAA0F,MAAgB,EAKdrK,QAAQC,IAAK0E,EAAK3H,iBAPoB7B,EAAA+S,EAAAvP,GAUxCuP,EAAA3S,UAAAwE,SAAA,aAIAmO,EAAA3S,UAAA4S,WAAA,WAEE9S,KAAK2B,OAAOU,MAAQ,IAAI0Q,EAAAA,WAG1BF,EAAA3S,UAAA8S,QAAA,WACEhT,KAAKgP,MAAQ,GAGf6D,EAAA3S,UAAA+S,SAAA,WAEEjT,KAAK2B,OAAOU,WAAQmI,EAEpBxK,KAAKgT,aA3BT,CAA0CxR,qCAA7BqR,IAAoBtP,EAAAC,kBAIVC,EAAAA,iDAJVoP,GAAoBnP,UAAA,CAAA,CAAA,iBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,UAAA,gBAAA,EAAA,OAAA,YAAA,CAAA,aAAA,IAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,SAAA,gBAAA,CAAA,eAAA,IAAA,CAAA,aAAA,IAAA,CAAA,SAAA,iBAAA,CAAA,SAAA,UAAA,CAAA,SAAA,eAAA,aAAA,cAAA,UAAA,OAAA,EAAA,SAAA,CAAA,EAAA,eAAA,CAAA,EAAA,sBAAA,CAAA,EAAA,uBAAA,CAAA,EAAA,MAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,MAAA,cAAA,EAAA,SAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,sBAAA,CAAA,EAAA,MAAA,cAAA,EAAA,SAAA,CAAA,EAAA,UAAA,kBAAAC,SAAA,SAAAC,EAAAC,YFRjCyH,EAAAA,WAAAA,EAAAA,GAAAA,GAAAA,EAAAA,mBAAAA,GAkDAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,qDAlDsCnH,EAAAA,WAAAA,OAAAA,EAAAA,MAAAA,CAA8B,WAAA4K,0MGSpE,IAAA8D,GAAA,SAAA5P,GAIE,SAAA4P,EAAmCzR,UACjC6B,EAAAzC,KAAAb,KAAOyB,IAAOzB,YALuBF,EAAAoT,EAAA5P,GAQvC4P,EAAAhT,UAAAwE,SAAA,WAAA,QAAA4E,EAAAtJ,KAEAA,KAAKmT,KAAO,IAAIC,EAAAA,UAAU,CACzBlF,KAAQ,IAAImF,EAAAA,YAA2B,QAAhBzR,EAAE5B,KAAKmC,KAAK+L,YAAI,IAAAtM,EAAAA,EAAI,GAAI5B,KAAKsT,aAAaC,KAAMvT,OACpEwT,MAAS,IAAIH,EAAAA,YAA2B,QAAhB1Q,EAAC3C,KAAKmC,KAAKqR,aAAK,IAAA7Q,EAAAA,EAAI,GAAK3C,KAAKsT,aAAaC,KAAMvT,OACzEyT,KAAQ,IAAIJ,EAAAA,YAAYrT,KAAKmC,KAAKsR,QAGpCzT,KACGmT,KACAO,aACAxB,WAAW,SAAAjI,GACV,GAAIX,EAAK6J,KAAKQ,MAAO,CACnB,IAAIzQ,GAAO,EAERoG,EAAKnH,KAAK+L,OAASjE,EAAEiE,OACtB5E,EAAKnH,KAAK+L,KAAOjE,EAAEiE,KACnBhL,GAAO,GAGLoG,EAAKnH,KAAKqR,QAAUvJ,EAAEuJ,QACxBlK,EAAKnH,KAAKqR,MAAQvJ,EAAEuJ,MACpBtQ,GAAO,GAGLoG,EAAKnH,KAAKsR,OAASxJ,EAAEwJ,OACvBnK,EAAKnH,KAAKsR,KAAOxJ,EAAEwJ,MAGjBvQ,GACFoG,EAAKpG,YAMfgQ,EAAAhT,UAAAoT,aAAA,SAAa3E,GACX,IAAKA,EAAEzN,MACL,OAAO,KAGT,IAAM+I,EAAI,SAAS0E,EAAEzN,MAErB,OAAS0S,EAAAA,gBAAgBC,QAAS5J,GAAS,KAAO,CAAE6J,aAAa,MAnDrE,CAAyCtS,yBCHtCyJ,EAAAA,UAAAA,EAAAA,wCAMAA,EAAAA,UAAAA,EAAAA,wCAMAA,EAAAA,UAAAA,EAAAA,qCAMAA,EAAAA,UAAAA,EAAAA,uCAMAA,EAAAA,UAAAA,EAAAA,wCAMAA,EAAAA,UAAAA,EAAAA,sCAMAA,EAAAA,UAAAA,EAAAA,iDDjCUiI,IAAmB3P,EAAAC,kBAITC,EAAAA,iDAJVyP,GAAmBxP,UAAA,CAAA,CAAA,gBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,aAAA,CAAA,IAAA,IAAA,CAAA,EAAA,UAAA,iBAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,WAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,KAAA,cAAA,CAAA,EAAA,gBAAA,YAAA,CAAA,QAAA,OAAA,aAAA,IAAA,QAAA,IAAA,cAAA,KAAA,kBAAA,QAAA,CAAA,QAAA,SAAA,aAAA,IAAA,QAAA,IAAA,cAAA,KAAA,kBAAA,SAAA,CAAA,EAAA,kBAAA,CAAA,aAAA,KAAA,QAAA,IAAA,QAAA,0BAAA,kBAAA,SAAAC,SAAA,SAAAC,EAAAC,SEThCC,EAAAA,eAAAA,EAAAA,OAAAA,EAAAA,GACCA,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,OAAAA,GACC8G,EAAAA,UAAAA,EAAAA,IAAAA,GACD5G,EAAAA,eACAF,EAAAA,eAAAA,EAAAA,OAAAA,GAAqCC,EAAAA,OAAAA,EAAAA,0BAAsBC,EAAAA,eAC5DA,EAAAA,eAEA4G,EAAAA,UAAAA,EAAAA,aAAAA,GAOD5G,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,OAAAA,GACC8G,EAAAA,UAAAA,GAAAA,IAAAA,GACD5G,EAAAA,eACAF,EAAAA,eAAAA,GAAAA,OAAAA,GAAqCC,EAAAA,OAAAA,GAAAA,kBAAcC,EAAAA,eACpDA,EAAAA,eAEA4G,EAAAA,UAAAA,GAAAA,aAAAA,GAOD5G,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,MAAAA,IACCA,EAAAA,eAAAA,GAAAA,MAAAA,GACCA,EAAAA,eAAAA,GAAAA,OAAAA,GACC8G,EAAAA,UAAAA,GAAAA,IAAAA,GACD5G,EAAAA,eACDA,EAAAA,eAEA4G,EAAAA,UAAAA,GAAAA,cAAAA,IAMD5G,EAAAA,eAEDA,EAAAA,eACDA,EAAAA,qBArDMG,EAAAA,WAAAA,YAAAA,EAAAA,iNCWJ,SAAAuP,EACUC,EACAC,EACAC,GAHV,IAAA5K,EAAAtJ,KACUA,KAAAgU,OAAAA,EACAhU,KAAAiU,eAAAA,EACAjU,KAAAkU,SAAAA,EALVlU,KAAAgP,MAAgB,EAMZhP,KACGiU,eACAE,cACAjC,WAAU,SAACkC,GACV,IAAMxU,EAAIwU,EAAOC,IAAK,OAElBC,OAAOC,WAAY3U,KACrB0J,EAAK0F,OAASpP,aAKxBmU,EAAA7T,UAAAsU,cAAA,SAAexF,GACb,IAAMyF,EAAMzU,KACTgU,OACAU,cAAc,GAAI,CACjBC,WAAY3U,KAAKiU,eACjBW,YAAa,CAACC,IAAK7F,GACnB8F,oBAAqB,UAEtBjM,WAEH7I,KAAKkU,SAASa,GAAGN,2CA7BRV,IAAoBxQ,EAAAC,kBAAAwR,EAAAC,QAAA1R,EAAAC,kBAAAwR,EAAAE,gBAAA3R,EAAAC,kBAAA2R,EAAAC,8CAApBrB,GAAoBrQ,UAAA,CAAA,CAAA,kBAAAG,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,SAAA,QAAA,EAAA,UAAA,gBAAA,YAAA,CAAA,SAAA,WAAA,CAAA,eAAA,IAAA,CAAA,SAAA,WAAA,CAAA,SAAA,QAAA,CAAA,SAAA,UAAA,CAAA,SAAA,WAAA,CAAA,SAAA,SAAA,CAAA,SAAA,eAAAC,SAAA,SAAAC,EAAAC,SFRjCC,EAAAA,eAAAA,EAAAA,cAAAA,GACCG,EAAAA,WAAAA,iBAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,IAAAA,CAAmB,YAAA,SAAA4K,GAAA,OACPhL,EAAAsQ,cAAAtF,MAEZ/K,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,SAAAA,GACCwH,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,SAAAA,GACCwH,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEAF,EAAAA,eAAAA,GAAAA,SAAAA,GACCwH,EAAAA,WAAAA,GAAAA,GAAAA,EAAAA,EAAAA,cAAAA,GAGDtH,EAAAA,eAEDA,EAAAA,qBA7CCG,EAAAA,WAAAA,UAAAA,EAAAA,4IGMD,IAAA6Q,GAAA,WAmBC,SAAAA,EAA6C5T,GAAAzB,KAAAyB,MAAAA,SAjB7CjC,OAAAkC,eAAY2T,EAAAnV,UAAA,UAAO,KAAnB,WACC,OAAOF,KACLyB,MACAE,OACAI,yCAGHvC,OAAAkC,eAAY2T,EAAAnV,UAAA,UAAO,KAAnB,WACC,OAAOF,KACLyB,MACAE,OACAW,UACAC,QACAC,MACAC,yCAOH4S,EAAAnV,UAAA+C,MAAA,SAAMqS,GACLtV,KAAKuV,WAAYD,GACjBtV,KAAKwV,YAAaF,GAClBtV,KAAKyV,eAAgBH,IAGdD,EAAAnV,UAAAqV,WAAA,SAAYD,GACnB,IAAMxJ,EAAY9L,KAAK0V,aAAcJ,GAC/BK,EAAY3V,KAAK4V,aAAcN,GAC/BzP,EAAO7F,KAAK6V,QAASP,GAEvBQ,EAAYjQ,EAAO,GAUvB,GATAyP,EAAGzP,KAAyBA,EAAO,EACnCyP,EAAGS,gBAAkB/V,KAAKgW,aAAcV,EAAIQ,GAE5CA,EAAWhK,GAAa6J,EAAa,EAAI,EACzCL,EAAGW,YAAcjW,KAAKgW,aAAcV,EAAIQ,GACxCR,EAAGY,YAAcP,EAEhBL,EAAGa,YAAcnW,KAAKoW,aAAcd,GAEjCtV,KAAKqW,UAAWf,GAAM,CACzB,IAAMgB,EAAMtW,KAAKuW,cAAejB,GAC1BkB,EAAQxW,KAAKyW,aAAcnB,GACjCA,EAAGoB,WAAa,CAAEJ,EAAKE,QAGvBlB,EAAGoB,gBAAalM,EAGjB8K,EAAGqB,MAAQ3W,KAAK4W,UAAWtB,GAC3BA,EAAGxT,OAAS9B,KAAK6W,UAAWvB,GAE5BA,EAAGwB,QAAY,GAAK9W,KAAK+W,SAAUzB,GAAStQ,EAAaC,GAGlDoQ,EAAAnV,UAAAsV,YAAA,SAAaF,GACpB,IAAMvJ,EAAa/L,KAAKgX,cAAe1B,GAEjCQ,EAAU/J,EAAa,EAAI,EAC3B+C,EAAQ9O,KAAKgW,aAAcV,EAAIQ,GAErCR,EAAG2B,iBAAmB,GAAGnI,EACzBwG,EAAG4B,qBAAuB,GAAGpI,EAE7BwG,EAAG6B,YAAcpL,EAAa/L,KAAKoX,eAAgB9B,GAAO,GAGnDD,EAAAnV,UAAAuV,eAAA,SAAgBH,GACvB,OAAStV,KAAK+B,QAAQsV,WACrB,KAAKjS,EAAyBkS,UAC7BtX,KAAKyC,QAAQ8U,UAAW,EACxBjC,EAAGkC,KAAKzU,SAAS,SAAAnD,GAAK,OAAAA,EAAE6X,EAAI7X,EAAE8X,OAAS,KAAO9X,EAAE6X,KAChD,MAED,KAAKrS,EAAyBuS,KAC7B3X,KAAKyC,QAAQ8U,UAAW,EACxBjC,EAAGkC,KAAKzU,SAAS,SAAAnD,GAAK,OAAAA,EAAE6X,EAAI7X,EAAE8X,OAAS,KAAO9X,EAAE6X,KAChD,MAED,KAAKrS,EAAyBwS,WAC7B5X,KAAKyC,QAAQ8U,UAAW,EACxBjC,EAAGkC,KAAKzU,SAAS,SAAAnD,GAAK,OAAAA,EAAE6X,EAAI7X,EAAE8X,OAAS,EAAI9X,EAAE6X,OAKhDpC,EAAAnV,UAAAwV,aAAA,SAAaJ,GACZ,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEyX,MAAUzX,EAAEyX,MAAQ9X,KAAK+B,QAAQ+J,WAG/DuJ,EAAAnV,UAAA0V,aAAA,SAAaN,GACZ,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEsV,UAActV,EAAEsV,UAAY3V,KAAK+B,QAAQ4T,WAGvEN,EAAAnV,UAAA8V,aAAA,SAAaV,EAAaQ,GACzB,IAMIiC,EANE1X,EAAIL,KAAK6X,YAAavC,GAEtBxG,EAAQkJ,EAAAA,YAAYC,OAAO3C,EAAGtG,MAAQgJ,EAAAA,YAAYC,OAAO3W,QACzD4W,EAAeF,EAAAA,YAAYG,eAAgBrJ,EAAOgH,GAElDsC,EAAgB/X,GAAKmK,MAAanK,EAAEyO,MAO1C,OAJIsJ,IACHL,EAAgBC,EAAAA,YAAYG,eAAgB9X,EAAEyO,MAAOgH,IAG/C,EAAkBiC,EAAgBG,GAG1C7C,EAAAnV,UAAA2V,QAAA,SAASP,GACR,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEgY,SAAahY,EAAEgY,SAAWrY,KAAK+B,QAAQ8D,MAGrEwP,EAAAnV,UAAAkW,aAAA,SAAcd,GACb,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEiY,UAAcjY,EAAEiY,UAAYtY,KAAK+B,QAAQuW,WAGvEjD,EAAAnV,UAAAmW,UAAA,SAAWf,GACV,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,SAASjV,GAAKmK,MAAanK,EAAEkY,SAAWlY,EAAEkY,QAG3ClD,EAAAnV,UAAAqW,cAAA,SAAejB,GACd,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEmY,WAAenY,EAAEmY,WAAa,GAG5DnD,EAAAnV,UAAAuW,aAAA,SAAcnB,GACb,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEoY,UAAcpY,EAAEoY,UAAY,GAG1DpD,EAAAnV,UAAA8W,cAAA,SAAe1B,GACd,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEqY,OAAWrY,EAAEqY,OAAS1Y,KAAK+B,QAAQgK,YAGjEsJ,EAAAnV,UAAAkX,eAAA,SAAgB9B,GACf,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAE8W,YAAgB9W,EAAE8W,YAAcnX,KAAK+B,QAAQoV,aAG3E9B,EAAAnV,UAAA2W,UAAA,SAAWvB,GACV,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEyB,QAAWzB,EAAEyB,QAG3CuT,EAAAnV,UAAA0W,UAAA,SAAWtB,GACV,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEsY,OAAWtY,EAAEsY,OAAS,GAGpDtD,EAAAnV,UAAA6W,SAAA,SAAUzB,GACT,IAAMjV,EAAIL,KAAK6X,YAAavC,GAE5B,OAASjV,GAAKmK,MAAanK,EAAEuY,MAAUvY,EAAEuY,MAAQ,GAGlDvD,EAAAnV,UAAA2X,YAAA,SAAavC,GACZ,OAAOtV,KAAK6Y,mBAAoBvD,EAAGxO,QAGpCuO,EAAAnV,UAAA2Y,mBAAA,SAAoB/R,GACnB,OAAO9G,KACL+B,QACAG,UACA4W,MAAM,SAAA9V,GAAK,OAAAA,EAAE+V,OAAS,IAAIC,OAAQhW,EAAE+V,OAAQE,KAAMnS,SA1LtD,qCAAauO,IAAc9R,EAAA2V,SAmBHzV,EAAAA,oDAnBX4R,GAAc8D,QAAd9D,GAAc+D,OCD3B,IAAAC,GAAA,WAEC,SAAAA,EAAqBC,GAAAtZ,KAAAsZ,OAAAA,SAIrBD,EAAAnZ,UAAAqZ,WAAA,SAAW/B,GAAX,IAAAlO,EAAAtJ,KACC,IAAKwX,GAAQ,IAAMA,EAAKlW,OACvB,MAAO,GAGR,IAAIkY,EAAW,GACXC,EAAa,EAgBjB,OAdAjC,EAAKzU,SAAQ,SAAA2W,GACZ,IAEMC,EAAMvY,EAFIsY,EAAME,QAAQC,MAAM,GAEZC,KAAI,SAACC,EAAI/K,GAChC,OAAA1F,EAAK0Q,UAAUN,EAAO1K,EAAQ,EAAGyK,SAChCQ,QAAO,SAAAjX,GAAK,OAAAA,MAEdwW,EAAQpY,EAAOoY,EAAaG,IAEnB5W,SAAS,SAAAC,GAAK,OAAAsG,EAAKgQ,OAAOrW,MAAOD,SAKpCwW,GAGAH,EAAAnZ,UAAA8Z,UAAA,SAAUN,EAAe1K,EAAeyK,GAC/C,IAAMS,EAASR,EACbQ,OACAJ,KAAI,SAAA9W,GACJ,IAAM0U,EAAU,MAAQ1U,EAAEgM,GAE1B,MAAO,CACNhM,EAAGmX,EAAAA,OAAOC,QAASpX,EAAE,IACrByU,EAAczU,EAAEgM,GAChB0I,OAAQA,MAIL2C,EAAiBH,EACrBJ,KAAI,SAAAla,GAAK,OAAAA,EAAE6X,KACXwC,QAAO,SAAAra,GAAK,OAAA,MAAQA,KACpBka,KAAI,SAAAla,GAAK,OAAA0a,WAAW1a,MAEtB,GAAI,GAAKya,EAAe/Y,OAAxB,CAIA,IAAMiZ,EAAOF,EAAeG,QAAO,SAACC,EAAGlb,GAAM,OAAAkb,EAAIlb,KAAK8a,EAAe/Y,OAE/DoZ,EAAWL,EAAeM,OAAM,SAAA3X,GAAK,OAAK,MAALA,KACrC4X,EAAWP,EAAeM,OAAM,SAAA3X,GAAK,OAAK,GAALA,KAuB3C,MArBW,CACV8D,MAAO9G,KAAK6a,oBAAoBnB,EAAO1K,GACvCwI,KAAM0C,EACNY,YAAa,EACbrQ,IAAKsQ,KAAKtQ,IAAGuQ,MAARD,KAAI3Z,EAAQiZ,IACjB1P,IAAKoQ,KAAKpQ,IAAGqQ,MAARD,KAAI3Z,EAAQiZ,IACjBE,IAAKA,EACLU,QAASZ,EAAeR,OAAO,GAAG,GAClCa,SAAUA,EACVE,SAAUA,EACV5L,MAAOyK,EACPtC,YAAY,EACZlB,YAAa,aAYPoD,EAAAnZ,UAAA2a,oBAAA,SAAqBnB,EAAe1K,GAC3C,IAAIkM,EAAUxB,EAAMyB,KAAI,IAAIzB,EAAME,QAAS5K,GAEvCoM,EAAO,GAEPC,GADO7b,OAAO8b,KAAK5B,EAAM0B,MACd,GAEf,IAAI,IAAIG,KAAO7B,EAAM0B,KACpBA,IAAWC,EAAW,EAAI,KAAM,IAAKE,EAAG,KAAK7B,EAAM0B,KAAMG,GACzDF,IASD,OAJID,IACHF,EAAUA,EAAI,KAAKE,EAAI,KAGjBF,KApGT,qCAAa7B,IAAa9V,EAAA2V,SAAA7D,2CAAbgE,GAAaF,QAAbE,GAAaD,OCG1B,IAAAoC,GAAA,WAoBC,SAAAA,EACSC,EACAC,EACAC,EACAxZ,EACuBV,GALhC,IAAA6H,EAAAtJ,KACSA,KAAAyb,gBAAAA,EACAzb,KAAA0b,UAAAA,EACA1b,KAAA2b,UAAAA,EACA3b,KAAAmC,KAAAA,EACuBnC,KAAAyB,MAAAA,EArBhCzB,KAAA4b,MAAQ,IAAIxP,EAAAA,aAuBVpM,KAAK6b,SAAW7b,KACdmC,KACA2Z,OACA/J,KACAgK,EAAAA,KAAK,SAAAC,GAAK,OAAA1S,EAAK2S,QAAU,MACzBC,EAAAA,UAAU,SAAAF,GAAK,OAAA1S,EAAKmS,gBAAgBU,+BAAgC1a,MACpEya,EAAAA,UAAU,SAAAE,GAAM,OAAAA,EAAGC,MAAO/S,EAAKgT,QAAShT,EAAKiT,WAC7CrK,WAAW,SAAAlP,GAAK,OAAAsG,EAAKpG,KAAcF,aA5BvCxD,OAAAkC,eAAI8Z,EAAAtb,UAAA,UAAO,KAAX,mBACC,OAAyB,QAAzByC,EAAiB,QAAjBf,EAAO5B,KAAKyB,aAAK,IAAAG,OAAA,EAAAA,EAAED,cAAM,IAAAgB,OAAA,EAAAA,EAAE2Z,yCAG5B9c,OAAAkC,eAAI8Z,EAAAtb,UAAA,QAAK,KAAT,mBACOqc,EAAmBvc,KAAKmC,KAAKoa,MAAMC,IACnCC,EAAwB,QAArB9Z,EAAa,QAAbf,EAAG5B,KAAKyB,aAAK,IAAAG,OAAA,EAAAA,EAAED,cAAM,IAAAgB,OAAA,EAAAA,EAAER,KAEhC,OAAOnC,KACLmC,KACAwZ,UACAe,OAAQH,EAAOE,oCAoBlBjB,EAAAtb,UAAAyc,QAAA,iBACc,QAAb/a,EAAA5B,KAAK6b,gBAAQ,IAAAja,GAAAA,EAAEgb,eAGhBpB,EAAAtb,UAAA0C,OAAA,WACC5C,KAAKmC,KAAK0a,QAGHrB,EAAAtb,UAAAgD,KAAA,SAAM+Y,GAAN,IAAA3S,EAAAtJ,KACHA,KAAKic,UAAYA,IAIrBjc,KAAKic,QAAUA,EAEftX,QAAQC,IAAK,SAASqX,GAEjBA,GAGJjc,KAAKyB,MAAMqb,SAAU,EAErB9c,KACE0b,UACAqB,MAAO,EAAGd,GACVlK,KACAE,EAAAA,UAAS,WAAM,OAAA3I,EAAK7H,MAAMqb,SAAU,MACpC5K,WACA,SAAAlP,GAAK,OAAAsG,EAAK0T,OAAQha,MAClB,SAAArC,GAAK,OAAA2I,EAAK2T,QAAStc,EAAEQ,WAXvBnB,KAAKgd,OAAO,MAeNxB,EAAAtb,UAAA8c,OAAA,SAAQha,GACfhD,KAAKyB,MAAMN,WAAQqJ,EAEnBxK,KAAK4b,MAAMzM,KAAM,CAChBrM,SAAU9C,KAAK2b,UAAUpC,WAAYvW,MAI/BwY,EAAAtb,UAAA+c,QAAA,SAAQC,GACfld,KAAKyB,MAAMN,MAAQ+b,EAAIC,QAEvBnd,KAAK4b,MAAMzM,KAAM,CAChBrM,SAAU,QAlFb,qCAAa0Y,IAAYjY,EAAA2V,SAAAkE,EAAAC,iBAAA9Z,EAAA2V,SAAAkE,EAAAE,mBAAA/Z,EAAA2V,SAAAG,IAAA9V,EAAA2V,SAAAkE,EAAAG,gBAAAha,EAAA2V,SAyBdzV,EAAAA,oDAzBE+X,GAAYrC,QAAZqC,GAAYpC,OCDzB,IAAAoE,GAAA,WA2CC,SAAAA,EAAqBC,EAAenb,GAAftC,KAAAyd,MAAAA,EAAezd,KAAAsC,UAAAA,EAzC3BtC,KAAA0d,GAAK,kBACL1d,KAAA2d,iBAAmB,oBAErBH,EAAAnB,MAAP,SAAcxZ,GAQb,OAPA+a,MAAMC,QAAQC,YAAYC,OAAS,SAAC/B,EAAG5N,GACtC,MAAO,CACNpL,EAAGoL,EAAMpL,EACTyU,EAAGrJ,EAAMqJ,IAIJ,CACNuG,KAAM,QACNC,SAAU,SACVlY,KAAM,IACNmY,WAAW,EACXC,UAAW,EACXC,SAAU,GACVC,YAAa,EACbC,WAAY,QACZC,SAAS,EACTR,OAAQ,SAAEN,GAAW,OAAA,IAAID,EAAgBC,EAAO5a,GAAO1C,YAIzDX,OAAAkC,eAAI8b,EAAAtd,UAAA,OAAI,KAAR,WACC,IAAIse,EAAYC,SAASC,eAAe1e,KAAK0d,IAY7C,OATIc,KACHA,EAAYC,SAASE,cAAc,QACzBC,GAAK5e,KAAK0d,GAEpBc,EAAUK,UAAY,6CAA6C7e,KAAK2d,iBAAgB,WAExFc,SAASK,KAAKC,YAAYP,IAGpBA,mCAORhB,EAAAtd,UAAAC,OAAA,WACC,IAAI6e,EAAiBhf,KAAKkb,KAGC,IAAvBlb,KAAKyd,MAAM3H,SAKfkJ,EAAeC,UAAUC,OAAO,QAAS,QAAS,gBAE9Clf,KAAKyd,MAAM0B,OACdH,EAAeC,UAAUG,IAAIpf,KAAKyd,MAAM0B,QAExCH,EAAeC,UAAUG,IAAI,gBAG1Bpf,KAAKyd,MAAMqB,MACd9e,KAAKqf,aAGNrf,KAAKsf,eAhBJN,EAAeO,MAAMzJ,QAAU,KAmBzB0H,EAAAtd,UAAAof,YAAA,WACP,IAAIN,EAAiBhf,KAAKkb,KAItB+C,EAFUje,KAAKsC,UAAUC,QAAQC,MAGnCgd,OACAC,wBAEIC,EAAUjB,SACdkB,uBAAuB3f,KAAK2d,kBAAmB,GAC/C8B,wBACAG,MAEIC,EAAc7f,KAAKyd,MAAMqC,OAASJ,EAAUzB,EAAS2B,MAC1DF,EAAW,EAAI1f,KAAKyd,MAAMW,SAAW,EAEtCY,EAAeO,MAAMzJ,QAAU,IAC/BkJ,EAAeO,MAAMtB,SAAW,WAChCe,EAAeO,MAAMhW,KAAO0U,EAAS1U,KAAOwW,OAAOC,YAAchgB,KAAKyd,MAAMqC,OAASD,EAAY,KACjGb,EAAeO,MAAMU,IAAMhC,EAASgC,IAAMF,OAAOG,YAAclgB,KAAKyd,MAAM0C,OAAS,KACnFnB,EAAeO,MAAMa,WAAapgB,KAAKyd,MAAM4C,gBAC7CrB,EAAeO,MAAMe,QAAUtgB,KAAKyd,MAAM8C,SAAW,MAAQvgB,KAAKyd,MAAMW,SAAW,KACnFY,EAAeO,MAAMiB,cAAgB,QAG9BhD,EAAAtd,UAAAmf,WAAA,WACP,IAAIL,EAAiBhf,KAAKkb,KACtB1Y,EAAQxC,KAAKsC,UACbme,EAAIzgB,KAAKsC,UAAUa,MAAM1B,MAAME,OAE/B+e,EAAa1gB,KAAKyd,MAAMkD,OAAS,GACjCC,EAAY,GAEhBF,EAAW3d,SAAQ,SAAS4d,GAC3B,IAAME,EAAOC,KAAKC,MAAOJ,GACnBxe,EAAOgY,EAAAA,OAAO6G,OAASH,GAC7BD,GAAa,mCAAmCze,EAAI,YAG7BnC,KAAKihB,OAEble,SAAS,SAAC+b,EAAMle,GACvB,IAAAsgB,EAA6BpC,EAAIoC,WAArBhgB,EAAiB4d,EAAI5d,MAErCigB,EAAe,oGAFkBrC,EAAIhQ,MAII,WAAWoS,EAAU,oBAQ5Dnb,EALKvD,EACTgV,KACA1U,SACAgW,MAAM,SAAA9V,GAAK,OAAAA,EAAE8D,OAASoa,KAEJpK,SAAW9R,EAAgByb,EAAE5e,KAAKgI,MAAQ4W,EAAE5e,KAAKiI,OAE/DpB,EAAW+X,EAAE3e,OAAO4G,SAAW+X,EAAE3e,OAAO4G,SAAW,EAEnD0Y,EAAWna,EAAewB,kBAAmBvH,EAAO6E,EAAKgB,KAAM2B,GAUrEkY,GANW,8DAEPO,EAAY,gBAJF,qCAAqCC,EAAQ,UAKhD,sBAMIpC,EAAeqC,cAAc,IAAIrhB,KAAK2d,kBAC5CkB,UAAY+B,GAGfpD,EAAAtd,UAAA+gB,KAAA,WAAA,IAAA3X,EAAAtJ,KAKP,IAAIshB,EAAYthB,KAAKyd,MAAMqB,KAAKhF,KAJhC,SAAiByH,GAChB,OAAOA,EAASzJ,SAKX0J,EAAYxhB,KAChBsC,UACAX,OACAI,QACAkK,iBAEIwV,EAAkB,GAYxB,OAVAH,EAAUve,SAAQ,SAAC+b,EAAMle,GACxB,IAAIqX,EAAS3O,EAAKmU,MAAMiE,YAAa9gB,GACjCkO,EAAQkJ,EAAAA,YAAYG,eAAgBF,EAAOlC,iBAE3C/G,EAAQ8P,EAAM,GAAI6C,YAAa,KAC7BT,EAAapC,EAAM,GAAI8C,UAAW,EAAG5S,GACrC9N,EAAQoZ,WAAWhR,EAAKmU,MAAMoE,WAAYjhB,GAAIM,OACpDugB,EAAgBxgB,KAAM,CAACigB,WAAUA,EAAEhgB,MAAKA,EAAE4N,MAAKA,OAGxC0S,GACP,KAAKrc,EAAiB2c,WACrBL,EAAgBR,MAAM,SAACxG,EAAGlb,GAAM,OAAAkb,EAAEvZ,MAAQ3B,EAAE2B,SAC5C,MAED,KAAKiE,EAAiB4c,WACrBN,EAAgBR,MAAM,SAACxG,EAAGlb,GAAM,OAAAA,EAAE2B,MAAQuZ,EAAEvZ,SAa9C,OARYugB,EAAgBxH,QAAQ,SAAAjX,SACnC,QAGoC,QAH7BpB,EAAC0H,EACNhH,UACAP,QACA8W,mBAAoB7V,EAAEke,mBAAY,IAAAtf,OAAA,EAAAA,EACjCogB,qBA5LN,GCDAC,GAAA,WAAA,SAAAA,YAEQA,EAAAC,WAAP,SAAmBrf,GAClB+a,MAAMuE,SAASC,OAAOC,iBAAmB,UACzCzE,MAAMuE,SAASC,OAAOE,kBAAoB,SAC1C1E,MAAMuE,SAASC,OAAOG,gBAAkB,GAExC,IAAM9B,EAAI5d,EAAKlB,OAEf,MAAO,CACN6gB,qBAAqB,EACrBC,WAAW,EAEXC,SAAUlF,GAAenB,MAAOxZ,GAEhCf,OAAQ,CACPC,SAAS,GAGVwV,UAAU,EAEV7N,OAAQ,CACPqB,MAAO,CAAC/K,KAAK2iB,SAAUlC,IACvB1W,MAAO,CAAE/J,KAAK4iB,SAAUnC,GAAG,GAAQzgB,KAAK4iB,SAAUnC,GAAG;sFAMzCwB,EAAAU,SAAP,SAAiBlC,GACxB,MAAO,CACN7B,GAAI7Z,EACJ6B,KAAM,OACNic,UAAW,CACV/T,MAAO,2BAERpE,MAAO,CACNoY,UAAU,EACVC,gBAAiB,GACjBC,YAAa,EACbC,YAAa,GAEd9gB,KAAM,CACL+gB,eAAgB,CACfC,OAAQ,WACRC,OAAQ,QACRC,KAAM,QACNC,IAAK,YACLC,KAAM,MACNC,MAAO,MACPC,KAAM,WAGR1hB,QAAS0e,EAAE5e,KAAKmB,EAAEgH,OAILiY,EAAAW,SAAP,SAAgBnC,EAAUlX,GACjC,IAAMma,EAAQna,EAAOkX,EAAE5e,KAAKgI,MAAQ4W,EAAE5e,KAAKiI,OA8B3C,MA3Ba,CACZ8U,GAHUrV,EAAOvE,EAAcC,EAI/BlD,QAAS2hB,EAAM1Z,KACfpD,KAAS8c,EAAMvZ,OAASuZ,EAAMvZ,OAASrF,EAAUsF,OAAsB,cAAX,SAC5DyY,UAAW,CACV/T,MAAO,0BACP6U,cAAe,GAEhB1F,SAAU1U,EAAO,OAAS,QAC1Be,WAAW,CACVvI,QAAS2hB,EAAM5c,MACfyD,YAAamZ,EAAM5c,OAEpB4D,MAAM,CACLD,IAAKiZ,EAAMjZ,IACXE,IAAK+Y,EAAM/Y,IACXiZ,aAAc,SAAC9c,EAAOkI,EAAO6U,GAC5B,KAAIA,EAAOviB,OAAS,IAAQ0N,EAAQ,EAIpC,OAAO/H,EAAewB,kBAAmB3B,EAAO4c,EAAM3c,KAAM2c,EAAMhb,YAGpEgD,QAAS+U,EAAE1e,QAAQ0J,UArFtB,GCGAqY,GAAA,WAQC,SAAAA,EACQ1gB,EACArB,EACuBN,GAH/B,IAAA6H,EAAAtJ,KACQA,KAAAoD,aAAAA,EACApD,KAAA+B,QAAAA,EACuB/B,KAAAyB,MAAAA,EATvBzB,KAAA2B,OAAiC,IAAIoiB,EAAAA,gBAAgB,MACpD/jB,KAAAgkB,QAA6BhkB,KAAK2B,OAAOsiB,eAE1CjkB,KAAAwX,KAAmC,IAAIuM,EAAAA,gBAAgB,MACtD/jB,KAAA4b,MAA+B5b,KAAKwX,KAAKyM,eAOhD7gB,EACEwY,MACA1J,WAAW,SAAAlP,GAAC,IAAApB,EAAI,OAAA0H,EAAKkO,KAAKzW,KAAiB,QAAba,EAAEoB,MAAAA,OAAC,EAADA,EAAGF,gBAAQ,IAAAlB,EAAAA,EAAI,OAEjD5B,KAAK2B,OAAOZ,KAAMU,EAAME,eAG1BmiB,EAAA5jB,UAAAyc,QAAA,WACC3c,KAAKoD,aAAauZ,UAClB3c,KAAK2B,OAAOT,MAAMoB,eAAYkI,KAtBhC,qCAAasZ,IAAUvgB,EAAA2V,SAAAsC,IAAAjY,EAAA2V,SAAA7D,IAAA9R,EAAA2V,SAWZzV,EAAAA,oDAXEqgB,GAAU3K,QAAV2K,GAAU1K,OCFvB,IAAA8K,GAAA,WAmBC,SAAAA,EAAoB/gB,GAApB,IAAAmG,EAAAtJ,KAAoBA,KAAAmD,MAAAA,EAEjBnD,KAAKmkB,SAAWhhB,EACbyY,MACA1J,WAAW,SAAAlP,GAAK,OAAAsG,EAAKkO,KAAO,CAC3B1U,SAAUE,MAGdhD,KAAKokB,WAAajhB,EACf6gB,QACA9R,WAAW,SAAAlP,GACVsG,EAAK3H,OAASqB,EAEVA,GACFsG,EAAK+a,0BA7Bb7kB,OAAAkC,eAAIwiB,EAAAhkB,UAAA,WAAQ,KAAZ,iBACE,OAAgB,QAAhB0B,EAAO5B,KAAKwX,YAAI,IAAA5V,OAAA,EAAAA,EAAEkB,0CAMpBtD,OAAAkC,eAAIwiB,EAAAhkB,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK2B,OAAOW,2CAGrB9C,OAAAkC,eAAIwiB,EAAAhkB,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKmD,MAAMpB,yCAsBpBmiB,EAAAhkB,UAAAmkB,cAAA,aAIAH,EAAAhkB,UAAA2E,YAAA,mBACe,QAAbjD,EAAA5B,KAAKmkB,gBAAQ,IAAAviB,GAAAA,EAAEgb,cACA,QAAfja,EAAA3C,KAAKokB,kBAAU,IAAAzhB,GAAAA,EAAEia,iBA5CrB,qCAAasH,IAAkB3gB,EAAAC,kBAAAsgB,wCAAlBI,KCFb,IAAAI,GAAA,WAKE,SAAAA,EAAoBnhB,GAApB,IAAAmG,EAAAtJ,KAAoBA,KAAAmD,MAAAA,EAClBnD,KAAKokB,WAAajhB,EACf6gB,QACA9R,WAAW,SAAAlP,GAAK,OAAAsG,EAAK3H,OAASqB,YAGnCshB,EAAApkB,UAAAyc,QAAA,iBAEiB,QAAf/a,EAAA5B,KAAKokB,kBAAU,IAAAxiB,GAAAA,EAAEgb,iBAbrB,qCAAa0H,IAAkB/gB,EAAAC,kBAAAsgB,wCAAlBQ,KCCb,IAAAC,GAAA,SAAAjhB,GAEC,SAAAihB,EAAaphB,UACZG,EAAAzC,KAAAb,KAAOmD,IAAOnD,YAH2BF,EAAAykB,EAAAjhB,GAM1CihB,EAAArkB,UAAAskB,kBAAA,SAAkBhiB,EAAOwZ,WAGd,QAFVrZ,EACQ,QADRf,EAAA5B,KACE2B,cAAM,IAAAC,OAAA,EAAAA,EACLG,eAAO,IAAAY,GAAAA,EACPX,WACDe,SAAS,SAAAyM,GAAK,OAAA,IAAIiV,GAAiBjiB,EAAOgN,GAAIkV,aAXlD,CAA2CJ,sCAA9BC,IAAqBhhB,EAAA2V,SAAA4K,2CAArBS,GAAqBpL,QAArBoL,GAAqBnL,OAelC,IAAAqL,GAAA,WAKC,SAAAA,EAAqBjiB,EAAoB2N,GAApBnQ,KAAAwC,MAAAA,EAAoBxC,KAAAmQ,UAAAA,SAJzC3Q,OAAAkC,eAAI+iB,EAAAvkB,UAAA,UAAO,KAAX,WACC,OAAOF,KAAKwC,MAAMA,MAAM0B,qCAOzBugB,EAAAvkB,UAAAwkB,KAAA,WACC,GAA4Bla,MAAxBxK,KAAKmQ,UAAUjP,MAAnB,CAIA,IAAMyjB,EAAU3kB,KAAKwC,MAAMkH,OAAmB,OACxCkb,EAAU5kB,KAAKwC,MAAMkH,OAAoB,OACzCmb,EAAS7kB,KAAKwC,MAAMkH,OAAc,MAElCob,EAAW9kB,KAAKmQ,UAAUpK,MAAQR,EAAcwf,OAASH,EAC9DA,EAAUD,EAELK,EAASF,EAAOG,iBAAiBjlB,KAAKmQ,UAAUjP,OAEhDgkB,EAAOllB,KAAKmQ,UAAU1K,UAAYJ,EAAkBK,GAO1D,MAJIwf,GAAMllB,KAAKmQ,UAAUjP,MAAQ4jB,EAAOra,KACrCya,GAAMllB,KAAKmQ,UAAUjP,MAAQ4jB,EAAOna,MACnC3K,KAAKwC,MAAMgV,KAAK1U,SAASxB,QAE7B,CAUA,GAAItB,KAAKmQ,UAAUrK,KAAM,CACxB,IAAMqf,EAAYnlB,KAAKolB,UAAU,GACjCplB,KAAKqlB,WAAYR,EAAQM,EAAWH,GAGjChlB,KAAKmQ,UAAUtK,MAClB7F,KAAKslB,gBAAiBT,EAAQC,EAAQE,MAIhCP,EAAAvkB,UAAAmlB,WAAA,SAAWR,EAAQ/V,EAAOkW,GACjChlB,KAAKulB,QAAQC,YACbxlB,KAAKulB,QAAQE,YAAc3W,EAAQ,KACnC9O,KAAKulB,QAAQ5P,UAAY,EACzB3V,KAAKulB,QAAQG,OAAQb,EAAOtb,KAAMyb,GAClChlB,KAAKulB,QAAQI,OAAQd,EAAOe,MAAOZ,GACnChlB,KAAKulB,QAAQM,UAGNpB,EAAAvkB,UAAAolB,gBAAA,SAAiBT,EAAQC,EAAQE,GACxC,IAAMlW,EAAQ9O,KAAKolB,UAAU,GAEvBF,EAAOllB,KAAKmQ,UAAU1K,UAAYJ,EAAkBK,GAC1D1F,KAAKulB,QAAQO,UAAYhX,EAAQ,KAEjC,IAAM9L,EAAI6hB,EAAOtb,KACXkX,EAAIoE,EAAOjF,MAEXmG,EAAOjB,EAAOG,iBAAiBH,EAAOna,KACtCqb,EAAUlB,EAAOG,iBAAiBH,EAAOra,KAEzCgN,EAAIyN,EAAKa,EAAOhL,KAAKpQ,IAAKob,EAAMf,GAClCiB,EAAIf,EAAKF,EAASF,EAAO7E,IAAM6E,EAAOoB,OAASlB,EAEnDiB,EAAIlL,KAAKtQ,IAAKub,EAAUD,EAAME,GAE9BjmB,KAAKulB,QAAQY,SAAUnjB,EAAGyU,EAAGgJ,EAAGwF,IAGzBxB,EAAAvkB,UAAAklB,SAAA,SAASvf,GAChB,OAAQ7F,KAAKmQ,UAAUxK,WACtB,KAAKL,EAAeM,SACnB,MAAO,UAER,KAAKN,EAAe8gB,GACnB,MAAO,UAER,KAAK9gB,EAAe+gB,QACnB,MAAO,UAGT,IAAMnO,EAAe,UAErB,OAAIrS,EACI7F,KAAKmQ,UAAUmW,UAAYtmB,KAAKmQ,UAAUmW,UAAYpO,EAGvDlY,KAAKmQ,UAAUgV,UAAYnlB,KAAKmQ,UAAUgV,UAAYjN,KAjG/D,GChBAqO,ICLA,WAAA,SAAAC,KACeA,EAAAC,WAAP,SAAmBjkB,EAAOkkB,EAAO9G,GACvC,IAAI+G,EAAmBnkB,EAAMokB,wBACzBC,EAAYjH,EAAQ,EACxB,OAAO7E,KAAK+L,OAAOJ,EAAQG,GAAaF,GAAoBA,EAAmBE,GAJjF,GDKA,WAEC,SAAAN,EAAqBpjB,GAAAnD,KAAAmD,MAAAA,SAIrBojB,EAAArmB,UAAAskB,kBAAA,SAAkBhiB,EAAOukB,KAqCzBR,EAAArmB,UAAA8mB,YAAA,SAAYxH,EAAQyH,GACnB,GAAKA,EAAL,CAIE,IAAIC,EAAO1H,EAAOC,wBAClB,MAAO,CACLzc,EAAGikB,EAAIE,QAAUD,EAAK3d,KACtBkO,EAAGwP,EAAIG,QAAUF,EAAKjH,SAnD5B,sCAAasG,IAAqBhjB,EAAA2V,SAAA4K,2CAArByC,GAAqBpN,QAArBoN,GAAqBnN,OEElC,IAAAiO,GAAA,SAAA/jB,GAUC,SAAA+jB,EAAalkB,UACZG,EAAAzC,KAAAb,KAAOmD,IAAOnD,YAX6BF,EAAAunB,EAAA/jB,GAE5C+jB,EAAAnnB,UAAAskB,kBAAA,SAAkBhiB,EAAOwZ,WAGd,QAFVrZ,EACQ,QADRf,EAAA5B,KACE2B,cAAM,IAAAC,OAAA,EAAAA,EACLG,eAAO,IAAAY,GAAAA,EACPV,YACDc,SAAS,SAAAyM,GAAK,OAAA,IAAI8X,GAAkB9kB,EAAOgN,GAAIkV,aAPnD,CAA6CJ,sCAAhC+C,IAAuB9jB,EAAA2V,SAAA4K,2CAAvBuD,GAAuBlO,QAAvBkO,GAAuBjO,OAepC,IAAAkO,GAAA,WAMC,SAAAA,EAAqB9kB,EAAoBmO,GAApB3Q,KAAAwC,MAAAA,EAAoBxC,KAAA2Q,WAAAA,SAJzCnR,OAAAkC,eAAI4lB,EAAApnB,UAAA,UAAO,KAAX,WACC,OAAOF,KAAKwC,MAAMA,MAAM0B,qCAOzBojB,EAAApnB,UAAAwkB,KAAA,WAAA,IAAApb,EAAAtJ,KACO6kB,EAAS7kB,KAAKwC,MAAMkH,OAAc,MAElC6d,EAAOpN,EAAAA,OAAOha,OAAQ0kB,EAAOpa,KAC7B+c,EAAOrN,EAAAA,OAAOha,OAAS0kB,EAAOla,KAEpC3K,KACEynB,SAAUF,EAAMC,GAChBzkB,SAAS,SAAAC,GACT,IAAI0kB,EAAK7C,EAAOI,iBAAiBjiB,EAAE2kB,MAAMC,UACrCC,EAAKhD,EAAOI,iBAAiBjiB,EAAE8kB,IAAIF,UAEhCC,EAAMhD,EAAOtb,MAAQme,EAAK7C,EAAOe,QACvC8B,EAAK3M,KAAKpQ,IAAK+c,EAAI7C,EAAOtb,MAC1Bse,EAAK9M,KAAKtQ,IAAKod,EAAIhD,EAAOe,OAE1Btc,EAAKye,aAAcL,EAAIG,QAKnBP,EAAApnB,UAAAunB,SAAA,SAAUhd,EAAKE,GACtB,IAAMqd,EAAUhoB,KAAKioB,eAAgBxd,EAAKE,GACpCxI,EAAOnC,KAAKkoB,UAElB,OAAOloB,KAAKmoB,sBACXnoB,KAAKooB,kBAAmBJ,EAAS7lB,GACjCnC,KAAKqoB,YAAaL,EAAS7lB,IAGrBmlB,EAAApnB,UAAAgoB,QAAA,WACP,IAAMC,EAAsBnoB,KAAKmoB,sBAE7BG,EAAgBtoB,KAAK2Q,WAAWE,SAChC0X,EAAcvoB,KAAK2Q,WAAWG,OAE5B0X,EAAa,QAEfC,EAAKtO,EAAAA,OAAOha,OAAOmoB,EAAeE,GAClCE,EAAKvO,EAAAA,OAAOha,OAAOooB,EAAaC,GAEpC,GAAKC,EAAG5U,WAAc6U,EAAG7U,UAMd4U,EAAG5U,YAAc6U,EAAG7U,UAC9B6U,EAAKD,EAAGE,SACGF,EAAG5U,WAAa6U,EAAG7U,YAC9B4U,EAAKC,EAAGC,cARR,GAAIR,EAAqB,CACxB,IAAMS,EAAWzO,EAAAA,OAAOha,OAAQ,QAASqoB,GACzCC,EAAKG,EAASD,QACdD,EAAKE,EAASD,QAQhB,MAAO,CACNza,KAAQua,EAAG5U,UAAc4U,EAAGb,cAAWpd,EACvC2D,GAAMua,EAAG7U,UAAc6U,EAAGd,cAAWpd,IAG/B8c,EAAApnB,UAAAkoB,kBAAA,SAAmBJ,EAAS7lB,GAUnC,IATA,IAAMwI,EAAMqd,EAAQ7Z,GAGhB8M,EAFQ+M,EAAQ9Z,KAEFya,QACdE,EAAM,GAENC,EAAc9oB,KAAK2Q,WAAWtK,QAC9B0iB,EAAY/oB,KAAK2Q,WAAWpK,MAEzB0U,EAAUtQ,GAAK,CACrB,IAAIgd,EAAQ1M,EAAQ0N,QAAQrF,IAAKwF,GAC7BhB,EAAMH,EAAMgB,QAAQrF,IAAKyF,GAEzBjB,EAAIkB,SAAUrB,IACjBG,EAAI1I,IAAK,EAAG,SAGbuI,EAAMsB,IAAI,CACT5F,KAASlhB,EAAK+L,KAAKgb,WACnB9F,OAAYjhB,EAAK+L,KAAKib,eAGvBrB,EAAImB,IAAI,CACP5F,KAASlhB,EAAKgM,GAAG+a,WACjB9F,OAAYjhB,EAAKgM,GAAGgb,eAGrBN,EAAI5nB,KAAM,CAAE0mB,MAAKA,EAAEG,IAAGA,IAEtB7M,EAAQmE,IAAK,EAAG,SAGjB,OAAOyJ,GAGAvB,EAAApnB,UAAAmoB,YAAA,SAAaL,EAAS7lB,GAC7B,IAAMwI,EAAMqd,EAAQ7Z,GAGhB8M,EAFQ+M,EAAQ9Z,KAEFya,QACdE,EAAM,GAEV,IAAK1mB,EAAK+L,OAAS/L,EAAKgM,GACvB,OAAO0a,EAGR,KAAO5N,EAAUtQ,GAAK,CACrB,IAAIgd,EAAQ1M,EAAQ0N,QAAQM,IAAI,CAC/B5F,KAASlhB,EAAK+L,KAAKgb,WACnB9F,OAAYjhB,EAAK+L,KAAKib,eAGnBrB,EAAM7M,EAAQ0N,QAAQM,IAAI,CAC7B5F,KAASlhB,EAAKgM,GAAG+a,WACjB9F,OAAYjhB,EAAKgM,GAAGgb,eAGjBrB,EAAIkB,SAAUrB,IACjBG,EAAI1I,IAAK,EAAG,QAGbyJ,EAAI5nB,KAAM,CAAE0mB,MAAKA,EAAEG,IAAGA,IAEtB7M,EAAQmE,IAAK,EAAG,QAGjB,OAAOyJ,GAGAvB,EAAApnB,UAAA+nB,eAAA,SAAgBxd,EAAKE,GAC5B,IAAMye,EAASppB,KAAKmoB,sBAAwB,EAAI,EAYhD,MAAO,CAAEja,KAVIzD,EACXke,QACAU,SAAUD,EAAQ,QAClBE,QAAS,OAOInb,GALJxD,EACTge,QACAvJ,IAAKgK,EAAQ,QACbG,MAAO,SAKFjC,EAAApnB,UAAAioB,oBAAA,WACP,OAASnoB,KAAK2Q,WAAWtK,SAAWH,EAAcI,KAC/CtG,KAAK2Q,WAAWpK,OAASL,EAAcI,KAGnCghB,EAAApnB,UAAA6nB,aAAA,SAAcyB,EAAaC,GAElC,IAAM9E,EAAU3kB,KAAKwC,MAAMkH,OAAmB,OACxCmb,EAAS7kB,KAAKwC,MAAMkH,OAAc,MAElCggB,EAAO/E,EAAQ1E,IACf0J,EAAOhF,EAAQuB,OAEjBlmB,KAAK2Q,WAAW7K,OACf+e,EAAOtb,MAAQigB,GAClBxpB,KAAKqlB,WAAYqE,EAAMC,EAAMH,GAG1B3E,EAAOe,OAAS6D,GAAaA,GAAaD,GAC7CxpB,KAAKqlB,WAAYqE,EAAMC,EAAMF,IAI3BzpB,KAAK2Q,WAAW9K,MAAQ4jB,GAAaD,GACxCxpB,KAAKslB,gBAAiBoE,EAAMC,EAAMH,EAAaC,IAIzCnC,EAAApnB,UAAAmlB,WAAA,SAAYqE,EAAMC,EAAM3E,GAC/B,IAAMlW,EAAQ9O,KAAKolB,UAAU,GAE7BplB,KAAKulB,QAAQC,YACbxlB,KAAKulB,QAAQE,YAAc3W,EAAQ,KACnC9O,KAAKulB,QAAQ5P,UAAY,EACzB3V,KAAKulB,QAAQG,OAAQV,EAAQ0E,GAC7B1pB,KAAKulB,QAAQI,OAAQX,EAAQ2E,GAC7B3pB,KAAKulB,QAAQM,UAGNyB,EAAApnB,UAAAolB,gBAAA,SAAiBoE,EAAMC,EAAMH,EAAaC,GACjD,IAAM3a,EAAQ9O,KAAKolB,UAAU,GAE7BplB,KAAKulB,QAAQO,UAAYhX,EAAQ,KAEjC,IAAM9L,EAAIwmB,EACJ/I,EAAIgJ,EAAYD,EAEhB/R,EAAIiS,EACJzD,EAAI0D,EAAOD,EAEjB1pB,KAAKulB,QAAQY,SAAUnjB,EAAGyU,EAAGgJ,EAAGwF,IAGzBqB,EAAApnB,UAAAklB,SAAA,SAAUvf,GACjB,OAAQ7F,KAAK2Q,WAAWhL,WACvB,KAAKM,EAAgBG,IACpB,MAAO,UAER,KAAKH,EAAgB2jB,MACpB,MAAO,UAER,KAAK3jB,EAAgB4jB,KACpB,MAAO,UAER,KAAK5jB,EAAgB6jB,OACpB,MAAO,UAER,KAAK7jB,EAAgB8jB,KACpB,MAAO,UAGT,IAAM7R,EAAe,UAErB,OAAIrS,EACI7F,KAAK2Q,WAAW2V,UAAYtmB,KAAK2Q,WAAW2V,UAAYpO,EAGzDlY,KAAK2Q,WAAWwU,UAAYnlB,KAAK2Q,WAAWwU,UAAYjN,KAvOjE,GCjBA8R,GAAA,WASC,SAAAA,EACShoB,EACAioB,EACAhoB,GAFAjC,KAAAgC,WAAAA,EACAhC,KAAAiqB,UAAAA,EACAjqB,KAAAiC,YAAAA,SAVTzC,OAAAkC,eAAIsoB,EAAA9pB,UAAA,OAAI,KAAR,WACC,MAAO,CACNF,KAAKgC,WACLhC,KAAKiC,8CAWP+nB,EAAA9pB,UAAAyc,QAAA,WACC3c,KAAKkqB,KAAKnnB,SAAS,SAAAC,GAAK,OAAAA,EAAE2Z,gBAjB5B,yBCQI1R,EAAAA,UAAAA,EAAAA,eAAAA,yBAIFA,EAAAA,UAAAA,EAAAA,eAAAA,qCDZW+e,IAAiBzmB,EAAA2V,SAAAqL,IAAAhhB,EAAA2V,SAAAqN,IAAAhjB,EAAA2V,SAAAmO,2CAAjB2C,GAAiB7Q,QAAjB6Q,GAAiB5Q,0BEkC5B,SAAA+Q,EAAahnB,EAA2BinB,GAAxC,IAAA9gB,EACEhG,EAAAzC,KAAAb,KAAOmD,IAAOnD,YADwBsJ,EAAA8gB,WAAAA,EAGtC9gB,EAAK7G,QAAUwf,GAAgBC,WAAY5Y,GAE3CA,EAAK+gB,QAAUD,EAAWF,cAfMpqB,EAAAqqB,EAAA7mB,GAMlC9D,OAAAkC,eAAIyoB,EAAAjqB,UAAA,SAAM,KAAV,iBACE,OAAkB,QAAlB0B,EAAO5B,KAAK2B,cAAM,IAAAC,OAAA,EAAAA,EAAEE,wCAWtBqoB,EAAAjqB,UAAAoqB,gBAAA,WACEtqB,KAAK2B,OAAOW,UAAYtC,MAG1BmqB,EAAAjqB,UAAA2E,YAAA,WACE7E,KAAKmD,MAAMwZ,UACX3c,KAAKoqB,WAAWzN,cAxBgBuH,8BCbxB/f,EAAAA,eAAAA,EAAAA,MAAAA,IAAkDC,EAAAA,OAAAA,GAAWC,EAAAA,4EAAXE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,IAAAA,+BAElD1G,EAAAA,eAAAA,EAAAA,MAAAA,IAAkDC,EAAAA,OAAAA,GAAWC,EAAAA,4EAAXE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,IAAAA,+BAElD1G,EAAAA,eAAAA,EAAAA,MAAAA,IAAkDC,EAAAA,OAAAA,GAAWC,EAAAA,4EAAXE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,IAAAA,+BAExD1G,EAAAA,eAAAA,EAAAA,MAAAA,IAA0DC,EAAAA,OAAAA,GAAeC,EAAAA,4EAAfE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,QAAAA,uCDOnDsf,IAAc5mB,EAAAC,kBAAAsgB,IAAAvgB,EAAAC,kBAAAwmB,wCAAdG,GAAczmB,UAAA,CAAA,CAAA,WAAA+O,UAAA,SAAAxO,EAAAC,6BAIbqmB,EAAAA,SAAO,oGAhBT,CACR/O,GACAnC,GACAhE,GACAyO,GAEAkG,GACAzD,GACAhC,GACA8C,KACD9jB,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,4BAAA,CAAA,EAAA,sBAAA,CAAA,OAAA,OAAA,SAAA,OAAA,EAAA,OAAA,UAAA,WAAA,CAAA,QAAA,IAAA,CAAA,QAAA,sBAAA,EAAA,QAAA,CAAA,QAAA,uBAAA,EAAA,QAAA,CAAA,EAAA,uBAAA,CAAA,EAAA,yBAAAC,SAAA,SAAAC,EAAAC,SD5BHC,EAAAA,eAAAA,EAAAA,MAAAA,GAEEA,EAAAA,eAAAA,EAAAA,MAAAA,GAEEA,EAAAA,eAAAA,EAAAA,MAAAA,GACE8G,EAAAA,UAAAA,EAAAA,UAAAA,EAAAA,GAOF5G,EAAAA,eAEAsH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GAEFtH,EAAAA,eAEAsH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,eAAAA,GAEFtH,EAAAA,sBAbQE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,KAAAA,CAAa,UAAAN,EAAAzB,QAAb+B,CAAa,UAAAN,EAAAmmB,SAOH9lB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,OAAAA,MAAAA,EAAAA,OAAAA,KAAAA,EAAAA,OAAAA,QAIFD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,QAAAA,MAAAA,EAAAA,QAAAA,EAAAA,OAAAA,4lDEVXL,EAAAA,eAAAA,EAAAA,MAAAA,GACCG,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,cAAAA,GAAAA,gBAAAA,EAAAA,MAEMH,EAAAA,eAAAA,EAAAA,MAAAA,IACE8G,EAAAA,UAAAA,EAAAA,IAAAA,IACF5G,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,IAAAA,IAAoDC,EAAAA,OAAAA,GAAYC,EAAAA,eAEhEsH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,IAEAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,IAEAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,IAENA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,IAEDtH,EAAAA,8DAhBuCG,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,GAAAA,EAAAA,SAEND,EAAAA,UAAAA,GAAAimB,EAAAA,YAAAA,QAAAA,EAAAA,MAAAA,IAIOjmB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,EAAAA,OAAmBD,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,OAErBtG,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KAEAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KAEAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KAEFD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,oCAhBrCL,EAAAA,eAAAA,EAAAA,MAAAA,GACCwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,GAAAA,MAAAA,GAmBDtH,EAAAA,8CApBoCG,EAAAA,WAAAA,kBAAAA,GAC9BD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,6CANTL,EAAAA,eAAAA,EAAAA,MAAAA,GACCA,EAAAA,eAAAA,EAAAA,qBAECA,EAAAA,eAAAA,EAAAA,MAAAA,GAECwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAsBAV,EAAAA,UAAAA,EAAAA,MAAAA,GACD5G,EAAAA,eAEDA,EAAAA,eACAA,EAAAA,6CA1BmDE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,MAAAA,EAAAA,SAAAA,KAAAA,EAAAA,SAAAA,gCA4C5CL,EAAAA,eAAAA,EAAAA,KAAAA,IAAuCC,EAAAA,OAAAA,EAAAA,OAAGC,EAAAA,uCAC1CF,EAAAA,eAAAA,EAAAA,KAAAA,IAAuCC,EAAAA,OAAAA,EAAAA,OAAGC,EAAAA,uCAC1CF,EAAAA,eAAAA,EAAAA,KAAAA,IAAuCC,EAAAA,OAAAA,EAAAA,OAAGC,EAAAA,uCAC1CF,EAAAA,eAAAA,EAAAA,KAAAA,IAA2CC,EAAAA,OAAAA,EAAAA,WAAOC,EAAAA,0CANpDF,EAAAA,eAAAA,EAAAA,SACCA,EAAAA,eAAAA,EAAAA,MACC8G,EAAAA,UAAAA,EAAAA,KAAAA,IACAU,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IACAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IACDtH,EAAAA,eACDA,EAAAA,8CALsBE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KACAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KACAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KACAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,oCAepBL,EAAAA,eAAAA,EAAAA,KAAAA,IAA6CC,EAAAA,OAAAA,GAAWC,EAAAA,4EAAXE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,IAAAA,+BAE7C1G,EAAAA,eAAAA,EAAAA,KAAAA,IAA6CC,EAAAA,OAAAA,GAAWC,EAAAA,4EAAXE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,IAAAA,+BAE7C1G,EAAAA,eAAAA,EAAAA,KAAAA,IAA6CC,EAAAA,OAAAA,GAAWC,EAAAA,4EAAXE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,IAAAA,+BAE7C1G,EAAAA,eAAAA,EAAAA,KAAAA,IAAiDC,EAAAA,OAAAA,GAAeC,EAAAA,4EAAfE,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,QAAAA,yDAhBlD1G,EAAAA,eAAAA,EAAAA,KAAAA,IAECA,EAAAA,eAAAA,EAAAA,KAAAA,IAAIG,EAAAA,WAAAA,SAAAA,SAAAA,GAAAA,EAAAA,cAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAAAA,OAAAA,EAAAA,cAAAA,GAAAA,gBAAAA,EAAAA,MACHH,EAAAA,eAAAA,EAAAA,MAAAA,IACC8G,EAAAA,UAAAA,EAAAA,IAAAA,IACD5G,EAAAA,eAEAF,EAAAA,eAAAA,EAAAA,MAAAA,IAAsDC,EAAAA,OAAAA,GAAYC,EAAAA,eACnEA,EAAAA,eAEAsH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IAEAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IAEAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IAEAA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,IAEDtH,EAAAA,8DAlB+DG,EAAAA,WAAAA,UAAAA,EAAAA,gBAAAA,EAAAA,GAAAA,EAAAA,SAGnCD,EAAAA,UAAAA,GAAAimB,EAAAA,YAAAA,QAAAA,EAAAA,MAAAA,IAISjmB,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,EAAAA,OAAmBD,EAAAA,UAAAA,GAAAsG,EAAAA,kBAAAA,EAAAA,OAG7BtG,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KAEAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KAEAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,KAEAD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,OAAAA,oCAnC/BL,EAAAA,eAAAA,EAAAA,MAAAA,GAECA,EAAAA,eAAAA,EAAAA,MAAAA,IACCA,EAAAA,eAAAA,EAAAA,QAAAA,IACCA,EAAAA,eAAAA,EAAAA,YACC8G,EAAAA,UAAAA,EAAAA,MAAAA,IACD5G,EAAAA,eAEAsH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,IAUAxH,EAAAA,eAAAA,EAAAA,SACCwH,EAAAA,WAAAA,EAAAA,GAAAA,GAAAA,GAAAA,KAAAA,IAmBDtH,EAAAA,eACDA,EAAAA,eACDA,EAAAA,eAEA4G,EAAAA,UAAAA,EAAAA,MAAAA,GAED5G,EAAAA,8CA5CmCG,EAAAA,WAAAA,kBAAAA,GAQzBD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,EAAAA,UAAAA,EAAAA,SAAAA,OAAAA,GAWFD,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,UAAAA,EAAAA,6CAtBRL,EAAAA,eAAAA,EAAAA,MAAAA,IACDA,EAAAA,eAAAA,EAAAA,qBAECwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,IA6CDtH,EAAAA,eACDA,EAAAA,6CA9CkDE,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,OAAAA,MAAAA,EAAAA,SAAAA,KAAAA,EAAAA,SAAAA,SC1BpD,IAAAimB,GAAA,SAAAnnB,GAoBE,SAAAmnB,EAAatnB,UACXG,EAAAzC,KAAAb,KAAOmD,IAAOnD,YArBwBF,EAAA2qB,EAAAnnB,GAExC9D,OAAAkC,eAAI+oB,EAAAvqB,UAAA,SAAM,KAAV,WACE,OAAOF,KAAK2B,OAAOG,wCAGtBtC,OAAAkC,eAAI+oB,EAAAvqB,UAAA,mBAAgB,KAApB,WACC,IAAI4C,EAAW9C,KAAK8C,SAASmX,QAAQ,SAAA3E,GAAM,OAAAA,EAAGxT,UAU9C,OARI9B,KAAK8B,OAAO4oB,iBACf5nB,EAAWA,EAASmX,QAAQ,SAAAjX,GAAK,OAACA,EAAE4X,aAGjC5a,KAAK8B,OAAO6oB,gBACf7nB,EAAWA,EAASmX,QAAQ,SAAAjX,GAAK,OAACA,EAAE0X,aAG9B5X,mCAOP2nB,EAAAvqB,UAAA6F,KAAA,SAAMuP,GACN,IAAMzT,EAAO7B,KAAK2B,OAAOE,KACvB,OAASyT,EAAGwB,SAAW9R,EAAgBnD,EAAKgI,MAAOhI,EAAKiI,QAG1D2gB,EAAAvqB,UAAAwI,SAAA,SAAU4M,GACV,OAAOtV,KAAK8B,OAAO4G,SAAW1I,KAAK8B,OAAO4G,SAAW,GAGrD+hB,EAAAvqB,UAAA6G,KAAA,SAAMuO,GACN,OAAOtV,KAAK+F,KAAMuP,GAAKvO,MAGvB0jB,EAAAvqB,UAAA4O,MAAA,SAAOwG,GACL,OAAOtV,KACN+B,QACDiU,aAAcV,EAAI,IAGpBmV,EAAAvqB,UAAAuK,IAAA,SAAK6K,GACL,OAAOrO,EAAewB,kBAAmB6M,EAAG7K,IAAKzK,KAAK+G,KAAMuO,GAAMtV,KAAK0I,SAAU4M,KAGlFmV,EAAAvqB,UAAAyK,IAAA,SAAK2K,GACJ,OAAOrO,EAAewB,kBAAmB6M,EAAG3K,IAAK3K,KAAK+G,KAAMuO,GAAMtV,KAAK0I,SAAU4M,KAGlFmV,EAAAvqB,UAAAqa,IAAA,SAAKjF,GACJ,OAAOrO,EAAewB,kBAAmB6M,EAAGiF,IAAKva,KAAK+G,KAAMuO,GAAMtV,KAAK0I,SAAU4M,KAGlFmV,EAAAvqB,UAAA+a,QAAA,SAAS3F,GACR,OAAOrO,EAAewB,kBAAmB6M,EAAG2F,QAASjb,KAAK+G,KAAMuO,GAAMtV,KAAK0I,SAAU4M,KAIrFmV,EAAAvqB,UAAA0qB,gBAAA,SAAiBtV,EAAa3U,GAA9B,IAAA2I,EAAAtJ,KACE,GAAIW,EAAEkqB,QAAS,CAChB,IAAMC,EAAa,GAASxV,EAAGwV,SAE/B9qB,KAAK+qB,aAAczV,EAAIwV,OAClB,CACL,IAAME,OAAexgB,IAAc8K,EAAGwV,UAAc,GAASxV,EAAGwV,eACxDtgB,EAERxK,KAAK+qB,aAAczV,EAAI0V,GAEvBhrB,KACE8C,SACAmX,QAAQ,SAAAjX,GAAK,OAAAA,GAAKsS,KAClBvS,SAAS,SAAAC,GAAK,OAAAsG,EAAKyhB,aAAc/nB,EAAI,GAAQgoB,QAAmBxgB,MAGnExK,KAAKsC,UAAUC,QAAQG,WAGvB+nB,EAAAvqB,UAAA6qB,aAAA,SAAczV,EAAawV,GAC3BxV,EAAGwV,SAAWA,OAEVtgB,IAAcsgB,UACVxV,EAAG2V,cACH3V,EAAGwV,UAEVxV,EAAG2V,QAAUH,KAvFhB,CAA0C5G,sCAA7BuG,IAAoBlnB,EAAAC,kBAAAsgB,wCAApB2G,GAAoB/mB,UAAA,CAAA,CAAA,iBAAAC,SAAA,CAAAJ,EAAAK,4BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,uBAAA,CAAA,QAAA,iBAAA,EAAA,OAAA,YAAA,CAAA,gBAAA,IAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,yBAAA,CAAA,QAAA,yBAAA,EAAA,QAAA,CAAA,EAAA,4BAAA,CAAA,EAAA,0BAAA,CAAA,QAAA,iBAAA,EAAA,UAAA,QAAA,EAAA,QAAA,WAAA,CAAA,EAAA,iBAAA,EAAA,UAAA,SAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,KAAA,WAAA,WAAA,CAAA,EAAA,gBAAA,UAAA,EAAA,SAAA,CAAA,QAAA,oBAAA,EAAA,QAAA,CAAA,QAAA,oBAAA,EAAA,QAAA,CAAA,QAAA,oBAAA,EAAA,QAAA,CAAA,QAAA,wBAAA,EAAA,QAAA,CAAA,EAAA,gBAAA,OAAA,CAAA,EAAA,gBAAA,OAAA,CAAA,EAAA,gBAAA,OAAA,CAAA,EAAA,gBAAA,WAAA,CAAA,EAAA,wBAAA,CAAA,QAAA,wBAAA,EAAA,QAAA,CAAA,EAAA,yBAAA,sBAAA,CAAA,EAAA,sBAAA,CAAA,EAAA,QAAA,CAAA,QAAA,iBAAA,EAAA,UAAA,EAAA,QAAA,WAAA,CAAA,EAAA,aAAA,QAAA,CAAA,QAAA,UAAA,EAAA,QAAA,CAAA,EAAA,WAAA,CAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,SAAA,CAAA,QAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,kBAAAC,SAAA,SAAAC,EAAAC,YDdjCC,EAAAA,eAAAA,EAAAA,MAAAA,GAECwH,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAiCCA,EAAAA,WAAAA,EAAAA,GAAAA,EAAAA,EAAAA,cAAAA,KAAAA,EAAAA,EAAAA,wBAsDFtH,EAAAA,4CAvFME,EAAAA,UAAAA,GAAAC,EAAAA,WAAAA,QAAAA,EAAAA,OAAAA,MAAAA,CAAyC,WAAA4K,qwFCSlC,CAAC8b,EAAAA,8BC2Ed,8CAAaC,mEAAAA,KAAiBC,QAAA,CAjBnB,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,YAEAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,4FASSR,GAAiB,CAAAS,aAAA,CArD1BzB,GACApW,GAEA0W,GAEAzf,EACAF,EACAzB,EAEAhG,EACAoB,EAEAyG,EAEA8F,GACA7F,EAEAoF,GACAR,EAEAV,EACAnD,EAEA6E,GACAP,GAEA0C,GAEAL,GACA1B,GACAF,GACA2B,GACAD,IAAiCyY,QAAA,CAKjCC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,YAEAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,wBAAsBE,QAAA,CAGtB1B,GACApW,4BAhDAoW,GAAc,CAAAhV,EAAA2W,QAAA3W,EAAA4W,kBAAA5W,EAAA6W,QAAA7W,EAAA8W,KAAA9W,EAAA+W,iBAAA/W,EAAAgX,QAAAhX,EAAAiX,SAAAjX,EAAAkX,aAAAlX,EAAAmX,gBAAAnX,EAAAoX,SAAApX,EAAAqX,aAAAC,EAAAC,gCAAAD,EAAAE,eAAAF,EAAAG,gCAAAH,EAAAI,qBAAAJ,EAAAK,oBAAAL,EAAAM,mBAAAN,EAAAO,6BAAAP,EAAAQ,2BAAAR,EAAAS,mCAAAT,EAAAU,0BAAAV,EAAAW,gBAAAX,EAAAY,qBAAAZ,EAAAa,kBAAAb,EAAAc,mBAAAd,EAAAe,mBAAAf,EAAAgB,iBAAAhB,EAAAiB,0BAAAjB,EAAAkB,eAAAlB,EAAAmB,QAAAnB,EAAAoB,aAAApB,EAAAqB,OAAArB,EAAAsB,qBAAAtB,EAAAuB,mBAAAvB,EAAAwB,gBAAAxB,EAAAyB,cAAAzB,EAAA0B,cAAAC,EAAA7D,QAAA8D,EAAAC,uBAAAD,EAAAE,gBAAAF,EAAA1kB,kBAAA0kB,EAAAG,sBAAAH,EAAAI,8BAAAJ,EAAAK,eAAAL,EAAA5gB,qBAAA4gB,EAAAM,8BAAAN,EAAAO,cAAAP,EAAAQ,qBAAAR,EAAAS,mBAAAT,EAAAU,iBAAAV,EAAAW,kBAAAX,EAAAY,mBAAAZ,EAAAa,iBAAAb,EAAAc,0BAAAd,EAAAe,kBAAAf,EAAAgB,mBAAAhB,EAAAiB,gBAAAjB,EAAAkB,cAAAlB,EAAAmB,gBAAAnB,EAAAoB,sBAAApB,EAAAqB,mBAAArB,EAAAsB,kBAAAtB,EAAAuB,aAAAvB,EAAAwB,iBAAAxB,EAAAyB,mBAAAzB,EAAA0B,sBAAA1B,EAAA2B,qBAAA3B,EAAA4B,oBAAA5B,EAAA6B,cAAA7B,EAAA8B,sBAAA9B,EAAA+B,oBAAA/B,EAAAgC,oBAAAhC,EAAAiC,0BAAAjC,EAAAkC,8BAAAlC,EAAAmC,wBAAAnC,EAAAoC,mBAAApC,EAAAqC,yBAAArC,EAAAsC,sBAAAtC,EAAAuC,qBAAAvC,EAAAwC,uBAAAxC,EAAAyC,qBAAAzC,EAAA0C,cAAA1C,EAAA2C,mBAAA3C,EAAA4C,oBAAA5C,EAAA6C,cAAA7C,EAAA8C,oBAAA9C,EAAA+C,mBAAA/C,EAAAgD,4BAAAhD,EAAAiD,gCAAAjD,EAAAkD,aAAAlD,EAAAmD,2BAAAnD,EAAAoD,kCAAApD,EAAAqD,gCAAArD,EAAAsD,6BAAAtD,EAAA3b,sBAAAkf,EAAAC,0BAAAD,EAAAE,0BAAd3H,GACApW,GAEA0W,GAEAzf,EACAF,EACAzB,EAEAhG,EACAoB,EAEAyG,EAEA8F,GACA7F,EAEAoF,GACAR,EAEAV,EACAnD,EAEA6E,GACAP,GAEA0C,GAEAL,GACA1B,GACAF,GACA2B,GACAD,IAAiC,CAAAwC,EAAA4c,UAAA5c,EAAA6c,cAAA7c,EAAA8c,cAAA9c,EAAA+c,SAAA/c,EAAAgd,UAAAhd,EAAAid,YAAAjd,EAAAkd,YAAAld,EAAAmd,cAAAnd,EAAAod,aAAApd,EAAAqd,SAAArd,EAAAsd,eAAAtd,EAAAud,eAAAvd,EAAAwd","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Directive } from '@angular/core';\nimport { Panel, TimeRangeMod, AlertRule } from 'common';\nimport { Axes, Chart, Display, Legend,\n  SeriesOverride, Threshold, TimeRegion } from '../chart.m';\n\n@Directive() \nexport class BaseChartEditorComponent {\n\n  get widget() : Chart{\n    return this.panel.widget;\n  }\n\n  get axes() : Axes {\n    return this.widget?.axes;\n  }\n\n  get legend() : Legend{\n    return this.widget?.legend;\n  }\n\n  get display() : Display{\n    return this.widget?.display;\n  }\n\n  get thresholds(): Threshold[]{\n    return this.display.thresholds;\n  }\n\n  get timeRegions(): TimeRegion[]{\n    return this.display.timeRegions;\n  }\n\n  get overrides(): SeriesOverride[]{\n    return this.display.overrides;\n  }\n\n  get time(): TimeRangeMod{\n    this.widget.time = this.widget.time ?? new TimeRangeMod();\n    \n    return this.widget.time;\n  }\n\n  get alert(): AlertRule{\n    return this.widget.alert;\n  }\n\n  get options(){\n    return this\n      .widget\n      .component\n      .control\n      .chart\n      .options;\n  }\n\n  constructor( public panel: Panel){\n  }\n\n  refresh(){\n    this\n      .widget\n      .component\n      ?.control\n      ?.refresh();\n  }\n\n  update(){\n    const comp = this.widget.component;\n\n    comp\n      ?.datasets\n      .forEach( x => comp.display.setup( x ) );\n\n    this.refresh();\n  }\n\n  pull(){\n    this\n      .widget\n      .component\n      ?.store\n      .dataProvider\n      .update();\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-general',\n  templateUrl: './general.html'\n})\nexport class GeneralEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Info</h5>\r\n\r\n\t\t<ed-textbox \r\n\t\t\t[(ngModel)]=\"panel.title\"\r\n\t\t\tlabel=\"Title\"\r\n\t\t\tlabelWidth=\"7\"\r\n\t\t\twidth=\"25\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<div class=\"gf-form gf-form--v-stretch\">\r\n\t\t\t<span class=\"gf-form-label width-7\">Description</span>\r\n\t\t\t<textarea class=\"gf-form-input w-23\" rows=\"3\" [(ngModel)]=\"panel.description\"\r\n\t\t\t\tplaceholder=\"Panel description, supports markdown & links\">\r\n\t\t\t</textarea>\r\n\t\t</div>\r\n\r\n\t\t<ed-checkbox \r\n\t\t\t[(ngModel)]=\"panel.transparent\"\r\n\t\t\tlabel=\"Transparent\"\r\n\t\t\tlabelWidth=\"7\">\r\n\t\t</ed-checkbox>\r\n  \r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\n\n\n\n@Component({\n  selector: 'editor-metrics',\n  templateUrl: './metrics.html'\n})\nexport class MetricsEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) private panel: Panel){\n    \n  }\n  ngOnInit(){\n    console.log( 'create MetricsComponent' )\n    console.log( this.panel );\n  }\n\n  ngOnDestroy(){\n    console.log( 'detroy MetricsComponent' )\n  }\n}\n","metrics will be here","import { TimeRangeMod, AlertRule } from 'common';\r\nimport { ChartComponent } from './chart.c';\r\n\r\nexport const AXIS_X = \"xAxis\";\r\nexport const AXIS_Y_LEFT = \"yAxisL\";\r\nexport const AXIS_Y_RIGHT = \"yAxisR\";\r\n\r\nexport interface ChartData{\r\n\tdatasets: DataSet[];\r\n}\r\n\r\nexport interface DataSet{\r\n\tlabel: string;\r\n\tdata: DataPoint[];\r\n\r\n\tmin?: number;\r\n\tmax?: number\r\n\tavg?: number;\r\n\tcurrent?: number;\r\n\r\n\tallNulls?: boolean;\r\n\tallZeros?: boolean;\r\n\r\n\tindex: number;\r\n\r\n\t//display\r\n\tfill?: boolean;\r\n\tbackgroundColor?:string; \r\n\tborderColor?: string;\r\n\tborderWidth?: number;\r\n\r\n\tpointBorderColor?: string; \r\n\tpointBackgroundColor?: string; \r\n\tpointRadius?: number; \r\n\r\n\tsteppedLine?: boolean;\r\n\r\n\tborderDash?: number[]\r\n\r\n\torder?: number;\r\n\r\n\tlegend?: boolean;\r\n\thidden?: boolean;\r\n\tselected?: boolean;\r\n\r\n\tyAxisID?: string;\r\n}\r\n\r\nexport interface DataPoint{\r\n\tx?: number;\r\n\ty?: number;\r\n\tisNull: boolean;\r\n}\r\n\r\nexport interface Chart{\r\n\tlegend: Legend;\r\n\taxes: Axes;\r\n\tdisplay: Display;\r\n\ttime: TimeRangeMod;\r\n\talert: AlertRule;\r\n\r\n\tcomponent: ChartComponent;\r\n}\r\n\r\nexport interface Legend{\r\n\tshow: boolean;\r\n\ttable: boolean;\r\n\tright: boolean;\r\n\r\n\tmin: number;\r\n\tmax: number;\r\n\tavg: number;\r\n\tcurrent: number;\r\n\ttotal: number;\r\n\tdecimals? : number;\r\n\r\n\thideOnlyNulls: boolean;\r\n\thideOnlyZeroes: boolean;\r\n}\r\n\r\nexport interface Axes{\r\n\tleftY: Axis;\r\n\trightY?: Axis;\r\n\tx: any;\r\n}\r\n\r\nexport enum ScaleType {\r\n\tLinear = \"linear\",\r\n\tLog2 = \"log2\",\r\n\tLog10 = \"log10\",\r\n\tLog32 = \"log32\",\r\n\tLog1024 = \"log1024\"\r\n}\r\n\r\nexport interface Axis{\r\n\tshow: boolean;\r\n\tunit:any;\r\n\tscale: ScaleType;\r\n\tmin?: number;\r\n\tmax?: number;\r\n\tdecimals?: number;\r\n\tlabel?: string;\r\n}\r\n\r\nexport interface Display{\r\n\tshowLines: boolean;\r\n\tshowPoints: boolean;\r\n\tshowBars: boolean;\r\n\r\n\tfill: number;\r\n\tlineWidth: number;\r\n\tpointRadius: number;\r\n\r\n\tstaircase: boolean;\r\n\ttooltipMode: TooltipMode;\r\n\ttooltipSortOrder: TooltipSortOrder;\r\n\t\r\n\tstack: boolean;\r\n\tnullValue: DataPointNullValueOption;\r\n\r\n\tthresholds: Threshold[];\r\n\ttimeRegions: TimeRegion[];\r\n\toverrides: SeriesOverride[];\r\n}\r\n\r\nexport class Threshold{\r\n\toperator: ThresholdOperator = ThresholdOperator.Gt;\r\n\tvalue?: number;\r\n\r\n\tcolorType: ThresholdColor = ThresholdColor.Critical;\r\n\r\n\tfill: boolean = true;\r\n\tline: boolean = true;\r\n\tfillColor: any;\r\n\tlineColor: any;\r\n\r\n\taxis: ThresholdAxis = ThresholdAxis.Left;\r\n}\r\n\r\nexport enum TooltipMode {\r\n\tAll = \"all\",\r\n\tSingle = \"single\"\r\n}\r\n\r\nexport enum TooltipSortOrder {\r\n\tNone = \"none\",\r\n\tIncreasing = \"increasing\",\r\n\tDecreasing = \"decreasing\"\r\n}\r\n\r\nexport enum DataPointNullValueOption {\r\n\tConnected = \"connected\",\r\n\tNull = \"null\",\r\n\tNullAsZero = \"nullAsZero\"\r\n}\r\n\r\nexport enum ThresholdOperator {\r\n\tGt = \"gt\",\r\n\tLt = \"lt\",\r\n}\r\n\r\nexport enum ThresholdColor {\r\n\tCustom = \"custom\",\r\n\tCritical = \"critical\",\r\n\tWarning = \"warning\",\r\n\tOk = \"ok\"\r\n}\r\n\r\nexport enum ThresholdAxis {\r\n\tLeft = \"left\",\r\n\tRight = \"right\"\r\n}\r\n\r\nexport class TimeRegion{\r\n\tcolorType: TimeRegionColor = TimeRegionColor.Red;\r\n\r\n\tfill: boolean = true;\r\n\tline: boolean = true;\r\n\tfillColor: string;\r\n\tlineColor: string;\r\n\r\n\tfromDay: TimeRegionDay = TimeRegionDay.Any;\r\n\ttoDay: TimeRegionDay = TimeRegionDay.Any;\r\n\r\n\tfromTime?: string;\r\n\ttoTime?: string;\r\n}\r\n\r\nexport enum TimeRegionColor {\r\n\tGray = \"gray\",\r\n\tRed = \"red\",\r\n\tGreen = \"green\",\r\n\tBlue = \"blue\",\r\n\tYellow = \"yellow\",\r\n\tCustom = \"custom\"\r\n}\r\n\r\nexport enum TimeRegionDay {\r\n\tAny = \"any\",\r\n\tMon = \"mon\",\r\n\tTue = \"tue\",\r\n\tWed = \"wed\",\r\n\tThu = \"thu\",\r\n\tFri = \"fri\",\r\n\tSat = \"sat\",\r\n\tSun = \"sun\"\r\n}\r\n\r\nexport class SeriesOverride{\r\n\talias: string;\r\n\titems: OverrideItem[];\r\n}\r\n\r\nexport class OverrideItem{\r\n\tconstructor( public type: OverrideType | string, public value: any ){\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport enum OverrideType{\r\n\tLines,\r\n\tPoints,\r\n\tPointRadius,\r\n\tStack,\r\n\tLineFill,\r\n\tLineWidth,\r\n\tStaircase,\r\n\tDashes,\r\n\tDashLength,\r\n\tDashSpace,\r\n\tLegend,\r\n\tHideInTooltip,\r\n\tColor,\r\n\tYAxis,\r\n\tZIndex,\r\n}\r\n\r\n","export enum AxisUnitType {\r\n\tNone, \r\n\r\n\tCommon_Short,\r\n\tCommon_Percent,\r\n\tCommon_Percent01,\r\n\tCommon_Humidity,\r\n\tCommon_Decibel,\r\n\tCommon_Hex0x,\r\n\tCommon_Hex,\r\n\tCommon_SciNotation,\r\n\tCommon_LocaleString,\r\n\r\n\tLength_Millimetre,\r\n\tLength_Meter,\r\n\tLength_Feet,\r\n\tLength_Kilometer,\r\n\tLength_Mile,\r\n\r\n\tArea_SquareMeters,\r\n\tArea_SquareFeet,\r\n\tArea_SquareMiles,\r\n\r\n\tMass_Milligram,\r\n\tMass_Gram,\r\n\tMass_Kilogram,\r\n\tMass_MetricTon\r\n}\r\n\r\nexport class AxisUnit{\r\n\tconstructor( \r\n\t\tpublic type: AxisUnitType,\r\n\t\tpublic label: string,\r\n\t\tpublic unit: string,\r\n\t\tpublic command?: (event?: any) => void ){}\r\n}\r\n\r\nexport class AxisUnitHelper{\r\n\tstatic getData( unit: AxisUnitType ){\r\n\t\tswitch( +unit ){\r\n\r\n\t\t\tcase AxisUnitType.Common_Short:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Short, \"short\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Percent, \"percent (0-100)\", \"%\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent01:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Percent01, \"percent (0.0-1.0)\", \"%\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Humidity:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Humidity, \"humidity (%H)\", \"%H\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Decibel:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Decibel, \"decibel\", \"dB\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex0x:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Hex0x, \"hexadecimal (0x)\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_Hex, \"hexadecimal\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_SciNotation:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_SciNotation, \"scientific notation\", \"\" );\r\n\r\n\t\t\tcase AxisUnitType.Common_LocaleString:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Common_LocaleString, \"locale string\", \"\" );\r\n\r\n\r\n\r\n\t\t\tcase AxisUnitType.Length_Millimetre:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Millimetre, \"millimetre (mm)\", \"mm\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Meter:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Meter, \"meter (m)\", \"m\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Feet:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Feet, \"feet (ft)\", \"ft\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Kilometer:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Kilometer, \"kilometer (km)\", \"km\" );\r\n\r\n\t\t\tcase AxisUnitType.Length_Mile:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Length_Mile, \"mile (mi)\", \"mi\" );\r\n\r\n\r\n\r\n\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareMeters:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareMeters, \"Square Meters (m²)\", \"m²\" );\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareFeet:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareFeet, \"Square Feet (ft²)\", \"ft²\" );\r\n\r\n\t\t\tcase AxisUnitType.Area_SquareMiles:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Area_SquareMiles, \"Square Miles (mi²)\", \"mi²\" );\r\n\r\n\r\n\t\t\tcase AxisUnitType.Mass_Milligram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Milligram, \"milligram (mg)\", \"mg\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_Gram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Gram, \"gram (g)\", \"g\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_Kilogram:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_Kilogram, \"kilogram (kg)\", \"kg\" );\r\n\r\n\t\t\tcase AxisUnitType.Mass_MetricTon:\r\n\t\t\t\treturn new AxisUnit( AxisUnitType.Mass_MetricTon, \"metric ton (t)\", \"t\" );\r\n\t\t}\r\n\r\n\t\treturn new AxisUnit( AxisUnitType.None, \"none\", \"\" );\r\n\t}\r\n\r\n\tstatic getFormattedValue( label, unit, decimals ){\r\n\t\tlet value = label.toFixed( decimals );\r\n\t\tconst unitData = AxisUnitHelper.getData( unit);\r\n\r\n\t\tswitch( unitData.type ){\r\n\t\t\tcase AxisUnitType.Common_Hex: \r\n\t\t\t\treturn label.toString( 16 );\r\n\r\n\t\t\tcase AxisUnitType.Common_Hex0x: \r\n\t\t\t\treturn `0x${label.toString( 16 )}`;\r\n\r\n\t\t\tcase AxisUnitType.Common_Percent01: \r\n\t\t\t\treturn `${( 100 * label ).toFixed( decimals )} %`;\r\n\r\n\t\t\tcase AxisUnitType.Common_SciNotation: \r\n\t\t\t\treturn label.toExponential(decimals);\r\n\r\n\t\t\tcase AxisUnitType.Common_LocaleString:\r\n\t\t\t\treturn label.toLocaleString();\r\n\r\n\t\t\tcase AxisUnitType.Common_Short:\r\n\t\t\t\treturn AxisUnitHelper.getShortFormattedValue( label, unit, decimals );\r\n\r\n\t\t\tcase AxisUnitType.None:\r\n\t\t\t\treturn value;\r\n\r\n\r\n\r\n\t\t\tdefault: \r\n\t\t\t\treturn `${value} ${unitData.unit}`;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic getShortFormattedValue( label, unit, decimals ){\r\n\t\t// if( label < 1000 ){\r\n\t\t// \treturn label;\r\n\t\t// }\r\n\t\t\r\n\t\tlet dev = 1;\r\n\t\tlet u = '';\r\n\r\n\t\tif( label >= 1000 && label < 1000000 ){\r\n\t\t\tu = 'K';\r\n\t\t\tdev = 1000;\r\n\t\t} else if( label >= 1000000 && label < 1000000000 ){\r\n\t\t\tu = 'Mil';\r\n\t\t\tdev = 1000000;\r\n\t\t}\r\n\t\telse if( label >= 1000000000 && label < 1000000000000 ){\r\n\t\t\tu = 'Bil';\r\n\t\t\tdev = 1000000000;\r\n\t\t} else if( label >= 1000000000000 && label < 1000000000000000 ){\r\n\t\t\tu = 'Tri';\r\n\t\t\tdev = 1000000000000;\r\n\t\t}\r\n\t\telse if( label >= 1000000000000000 && label < 1000000000000000000 ){\r\n\t\t\tu = 'Qdr';\r\n\t\t\tdev = 1000000000000000;\r\n\t\t}\r\n\r\n\t\treturn  `${( label / dev ).toFixed( decimals)} ${u}`;\r\n\t}\r\n} ","import { AxisUnitHelper, AxisUnitType } from '../../../view/helpers/unit-helper';\r\n\r\n\r\n\r\nexport const menuItems: any = [\r\n\r\n\t{\r\n\t\tlabel: \"none\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.None),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Short),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Percent),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Percent01),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Humidity),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Decibel),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Hex0x),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_Hex),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_SciNotation),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Common_LocaleString)\r\n\t\t\t\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tlabel: \"length\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Millimetre),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Meter),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Feet),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Kilometer),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Length_Mile)\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tlabel: \"area\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareMeters),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareFeet),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Area_SquareMiles)\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tlabel: \"mass\", items: [\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Milligram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Gram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_Kilogram),\r\n\t\t\tAxisUnitHelper.getData(AxisUnitType.Mass_MetricTon)\r\n\t\t]\r\n\t},\r\n];","import { Component, Inject, Input } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { ScaleType } from '../../../chart.m';\nimport { menuItems } from './units';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'editor-axis-y',\n  templateUrl: './y-axis.html'\n})\nexport class AxisYEditorComponent extends BaseChartEditorComponent {\n \n  @Input() left: boolean = true;\n\n  units = _.cloneDeep( menuItems );\n  scales = DropDownComponent.wrapEnum( ScaleType );\n\n  get axis(){\n    return this.left ? this.axes.leftY : this.axes.rightY;\n  }\n\n  get chartAxis(){\n    return this.options.scales.yAxes[ this.left ? 0 : 1 ];\n  }\n\n  get show(): boolean{\n    return this.axis.show;\n  }\n\n  set show( v: boolean ){\n    this.axis.show = this.chartAxis.display = v;\n    this.refresh();\n  }\n\n  get unit(): boolean{\n    return this.axis.unit;\n  }\n\n  set unit( v: boolean ){\n    this.axis.unit = v;\n\n    this.refresh();\n  }\n\n  get scale(): ScaleType{\n    return this.axis.scale;\n  }\n\n  set scale( v: ScaleType ){\n    this.axis.scale = v;\n    this.chartAxis.type = ( v == ScaleType.Linear ) ? \"linear\" : \"logarithmic\";\n\n    this.refresh();\n  }\n\n  get label(): string{\n    return this.axis.label;\n  }\n\n  set label( v: string ){\n    this.axis.label = v;\n    const sl = this.chartAxis.scaleLabel;\n\n    if( v ){\n      sl.display = true;\n      sl.labelString = v;\n    } else{\n      sl.display = false;\n      sl.labelString = undefined;\n    }\n\n    this.refresh();\n  }\n\n  get decimals(): number{\n    return this.axis.decimals;\n  }\n\n  set decimals( v: number ){\n    this.axis.decimals = v ? +v : undefined;\n\n    this.refresh();\n  }\n\n  get min(): number{\n    return this.axis.min;\n  }\n\n  set min( v: number ){\n    this.axis.min = this.chartAxis.ticks.min = v ? +v : undefined;\n\n    this.refresh();\n  }\n\n  get max(): number{\n    return this.axis.max;\n  }\n\n  set max( v: number ){\n    this.axis.max = this.chartAxis.ticks.max = v ? +v : undefined;\n\n    this.refresh();\n  }\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n}\n","<div class=\"section gf-form-group\" >\r\n\t<h5 class=\"section-heading\">{{left ? 'Left Y' : 'Right Y'}}</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"show\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-hierarchical-dropdown\r\n\t\t[valueProperty]=\"'type'\"\r\n\t\t[(ngModel)]=\"unit\"\r\n\t\t[data]=\"units\"\r\n\t\tlabel=\"Unit\"\r\n\t\twidth=\"16\"\r\n\t\tlabelWidth=\"6\"  >\r\n\t</ed-hierarchical-dropdown>\r\n\r\n\t<ed-dropdown\r\n\t\t[(ngModel)]=\"scale\"\r\n\t\tlabel=\"Scale\"\r\n\t\t[data]=\"scales\"\r\n\t\tlabelWidth=\"6\"\r\n\t\twidth=\"16\"  >\r\n\t</ed-dropdown>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Y-Min\"\r\n\t\t\twidth=\"5\"\r\n\t\t\t[(ngModel)]=\"min\"\r\n\t\t\tplaceholder=\"auto\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Y-Max\"\r\n\t\t\twidth=\"5\"\r\n\t\t\t[(ngModel)]=\"max\"\r\n\t\t\tplaceholder=\"auto\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n\t<ed-textbox \r\n\t\ttype=\"text\"\r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Decimals\"\r\n\t\twidth=\"16\"\r\n\t\t[(ngModel)]=\"decimals\"\r\n\t\tplaceholder=\"auto\">\r\n\t</ed-textbox>\r\n\t<!-- <input type=\"text\" [(ngModel)]=\"decimals\" /> -->\r\n\r\n\t<ed-textbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Label\"\r\n\t\twidth=\"16\"\r\n\t\t[(ngModel)]=\"label\">\r\n\t</ed-textbox>\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-axis-x',\n  templateUrl: './x-axis.html'\n})\nexport class AxisXEditorComponent extends BaseChartEditorComponent {\n   \n  get axis(){\n    return this.axes.x;\n  }\n\n  get chartAxis(){\n    return this.options.scales.xAxes[ 0 ];\n  }\n\n  get show(): boolean{\n    return this.axis.show;\n  }\n\n  set show( v: boolean ){\n    this.axis.show = this.chartAxis.display = v;\n    this.refresh();\n  }\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n    \n  }\n}\n","<div class=\"section gf-form-group\" >\r\n\t<h5 class=\"section-heading\">X-Axis</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"6\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"show\">\r\n\t</ed-checkbox>\r\n\r\n\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-axes',\n  template: `\n    <editor-axis-y ></editor-axis-y>\n    <editor-axis-y [left]=\"false\" ></editor-axis-y>\n    <editor-axis-x></editor-axis-x>`\n})\nexport class AxesEditorComponent extends BaseChartEditorComponent {\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n    \n  }\n} \n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-legend',\n  templateUrl: './legend.html'\n})\nexport class LegendEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Options</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"Show\"\r\n\t\t[(ngModel)]=\"legend.show\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"As Table\"\r\n\t\t[(ngModel)]=\"legend.table\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"To the right\"\r\n\t\t[(ngModel)]=\"legend.right\">\r\n\t</ed-checkbox>\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Values</h5>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Min\"\r\n\t\t\t[(ngModel)]=\"legend.min\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Min\"\r\n\t\t\t[(ngModel)]=\"legend.max\">\r\n\t\t</ed-checkbox>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Avg\"\r\n\t\t\t[(ngModel)]=\"legend.avg\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Current\"\r\n\t\t\t[(ngModel)]=\"legend.current\">\r\n\t\t</ed-checkbox>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-checkbox \r\n\t\t\tlabelWidth=\"4\"\r\n\t\t\tlabel=\"Total\"\r\n\t\t\t[(ngModel)]=\"legend.total\">\r\n\t\t</ed-checkbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\ttype=\"number\"\r\n\t\t\tlabelWidth=\"6\"\r\n\t\t\tlabel=\"Decimals\"\r\n\t\t\twidth=\"4\"\r\n\t\t\tplaceholder=\"auto\"\r\n\t\t\t[(ngModel)]=\"legend.decimals\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Hide series</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"10\"\r\n\t\tlabel=\"With only nulls\"\r\n\t\t[(ngModel)]=\"legend.hideOnlyNulls\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"10\"\r\n\t\tlabel=\"With only zeros\"\r\n\t\t[(ngModel)]=\"legend.hideOnlyZeroes\">\r\n\t</ed-checkbox>\r\n\r\n</div>","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { DataPointNullValueOption, TooltipMode, TooltipSortOrder } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-draw-options',\n  templateUrl: './options.html'\n})\nexport class DrawOptionsEditorComponent extends BaseChartEditorComponent {\n \n  availableWidth = DropDownComponent.wrapArray( [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] );\n\n  availableTooltipModes\t= DropDownComponent.wrapEnum( TooltipMode );\n\n  availableTooltipSortOrders = DropDownComponent.wrapEnum( TooltipSortOrder );\n\n  availableNullValueOptions = DropDownComponent.wrapEnum( DataPointNullValueOption );\n\n  get stack(): boolean{\n    return this.display.stack;\n  }\n\n  set stack( v: boolean ){\n    this.display.stack = v;\n    this.options.scales.yAxes[ 0 /*?*/ ].stacked = v\n\n    this.refresh();\n  }\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","<div class=\"ed-form-inline\">\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"override.alias\"\r\n\t\tlabel=\"alias or regex\"\r\n\t\twidth=\"15\">\r\n\t</ed-textbox>\r\n\r\n\t<div *ngFor=\"let i of items\" class=\"gf-form\"  >\r\n\r\n\t\t<div class=\"gf-form-label\">\r\n\t\t\t<span (click)=\"onRemoveItem( i )\">\r\n\t\t\t\t<i class=\"fa fa-times mr-2 pointer\" ></i>\r\n\t\t\t</span>\r\n\t\t\t\r\n\t\t\t{{getItemHeader( i )}}:\r\n\t\t\t<span class=\"ml-1\" *ngIf=\"i.type != 12;else color\" >{{i.value}}</span>\r\n\t\t\t<ng-template #color>\r\n\t\t\t\t<color-circle [value]=\"i.value\" class=\"ml-1\" [canBeActive]=false></color-circle>\r\n\t\t\t</ng-template>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form\" #menuTarget  (click)=\"cm.show( $event )\">\r\n\t\t<label class=\"gf-form-label pointer\">\r\n\t\t\t<i class=\"fa fa-plus\"></i>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form gf-form--grow\">\r\n\t\t<div class=\"gf-form-label gf-form-label--grow\"></div>\r\n\t</div>\r\n\t\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( override )\">\r\n\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t</label>\r\n\t</div>\r\n\r\n\r\n</div>\r\n\r\n<ed-popup [(visible)]=\"showColorPicker\" [anchor]=\"menuTarget\">\r\n  <ed-palette-editor (selected)='onColorSelected( $event )'></ed-palette-editor>\r\n</ed-popup>\r\n\r\n<ed-context-menu [items]=\"cmItems\" #cm></ed-context-menu>\r\n\r\n","<div class=\"section gf-form-group\">\r\n\r\n\t<h5 class=\"section-heading\">Draw Modes</h5>\r\n\r\n\t<ed-checkbox \r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Bars\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.showLines\"\r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Lines\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.showPoints\"\r\n\t\tlabelWidth=\"5\"\r\n\t\tlabel=\"Points\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Mode Options</h5>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.fill\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Fill\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(selectionChange)=\"update()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.lineWidth\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Line Width\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t[disabled]=\"!display.showLines\"\r\n\t\t(selectionChange)=\"update()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"display.staircase\"\r\n\t\tlabel=\"Staircase\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(checked)=\"update()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.pointRadius\"\r\n\t\t[data]=\"availableWidth\"\r\n\t\tlabel=\"Point Radius\"\r\n\t\tlabelWidth=\"8\"\r\n\t\twidth=\"5\"\r\n\t\t(selectionChange)=\"update()\"\r\n\t\t[disabled]=\"!display.showPoints\">\r\n\t</ed-dropdown>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Hover tooltip</h5>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableTooltipModes\"\r\n\t\t[(ngModel)]=\"display.tooltipMode\"\r\n\t\tlabel=\"Mode\"\r\n\t\tlabelWidth=\"9\"\r\n\t\twidth=\"9\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableTooltipSortOrders\"\r\n\t\t[(ngModel)]=\"display.tooltipSortOrder\" \r\n\t\tlabel=\"Sort Order\"\r\n\t\tlabelWidth=\"9\"\r\n\t\twidth=\"9\" >\r\n\t</ed-dropdown>\r\n\r\n</div>\r\n\r\n<div class=\"section gf-form-group\">\r\n\t<h5 class=\"section-heading\">Stacking & Null value</h5>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"stack\"\r\n\t\tlabelWidth=\"7\"\r\n\t\tlabel=\"Stack\" >\r\n\t</ed-checkbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[(ngModel)]=\"display.nullValue\"\r\n\t\t[data]=\"availableNullValueOptions\" \r\n\t\tlabel=\"Null Value\"\r\n\t\t[labelWidth]=\"7\" >\r\n\t</ed-dropdown>\r\n</div>","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { ContextMenuComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { OverrideItem, SeriesOverride, OverrideType } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-series-override',\n  templateUrl: './override.html'\n})\nexport class SeriesOverrideEditorComponent extends BaseChartEditorComponent {\n\n  @Input() override: SeriesOverride;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<SeriesOverride>();\n\n  cmItems = [];\n  items = new Array<OverrideItem>();\n\tshowColorPicker = false;\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n  \n\tngOnInit() {\n\t\t\n\t\tthis.cmItems = [\n\t\t\tthis.createBoolItem(\"Lines\", OverrideType.Lines),\n\t\t\tthis.createNumberItem(\"Line fill\", OverrideType.LineFill),\n\t\t\tthis.createNumberItem(\"Line width\", OverrideType.LineWidth),\n\t\t\tthis.createBoolItem(\"Staircase\", OverrideType.Staircase),\n\t\t\tthis.createBoolItem(\"Dashes\", OverrideType.Dashes),\n\t\t\tthis.createNumberItem(\"Dash length\", OverrideType.DashLength),\n\t\t\tthis.createNumberItem(\"Dash space\", OverrideType.DashSpace),\n\t\t\tthis.createBoolItem(\"Points\", OverrideType.Points),\n\t\t\tthis.createNumberItem(\"Point radius\", OverrideType.PointRadius, 0, 5),\n\t\t\tthis.createBoolItem(\"Stack\", OverrideType.Stack),\n\t\t\tthis.createColorItem(\"Color\", OverrideType.Color),\n\n\t\t\tthis.createNumberItem(\"Y-axis\", OverrideType.YAxis, 1, 2),\n\t\t\tthis.createNumberItem(\"Z-index\", OverrideType.ZIndex, -3, 3),\n\t\t\tthis.createBoolItem(\"Legend\", OverrideType.Legend),\n\t\t\tthis.createBoolItem(\"Hide in tooltip\", OverrideType.HideInTooltip),\n\t\t]\n\n\t\tContextMenuComponent.wrapItems( this.cmItems, x => this.onOptionSelected( x.item ) )\n\n\t\tthis.rebuildItems();\n  }\n  \n  rebuildItems() {\n\t\tconst items = new Array<OverrideItem>();\n\n\t\tfor (var prop in this.override) {\n\t\t\tif (prop != 'alias') {\n\t\t\t\tvar type = this.getOverrideType(prop);\n\n\t\t\t\titems.push(new OverrideItem(type, this.override[prop]))\n\t\t\t}\n\t\t}\n\n    this.items = items;\n    this.update();\n  }\n\n\tcreateBoolItem(header: string, type: OverrideType) {\n\t\treturn {\n\t\t\tlabel: header, items: [\n\t\t\t\t{ label: 'true', value: true, type: type },\n\t\t\t\t{ label: 'false', value: false, type: type },\n\t\t\t]\n\t\t}\n\t}\n\n\tcreateNumberItem(header: string, type: OverrideType, from: number = 0, to: number = 10) {\n\t\tconst item = { label: header, items: [] };\n\n\t\tfor (var i = from; i <= to; ++i) {\n\t\t\titem.items.push({ label: i, value: i, type: type })\n\t\t}\n\n\t\treturn item;\n\t}\n\n\tcreateColorItem(header: string, type: OverrideType)  {\n\t\treturn {\n      label: header,\n      type: type,\n      items: [\n\t\t\t\t{ label: \"change\", type: type }\n\t\t\t]\n\t\t};\n\t}\n\n\n\tonOptionSelected(item) {\n\t\tif (item.type == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (OverrideType.Color == item.type) {\n\t\t\tthis.showColorPicker = true\n\t\t\tevent.stopPropagation();\n\t\t} else {\n\t\t\tthis.override[this.getPropertyName(item)] = item.value;\n\t\t\tthis.rebuildItems();\n\t\t}\n\t}\n\n\tonRemoveItem(item: OverrideItem) {\n\t\tdelete this.override[this.getPropertyName(item)];\n\t\tthis.rebuildItems();\n\t}\n\n\tgetItemHeader(item: OverrideItem) {\n\t\treturn OverrideType[item.type]\n\t\t\t.replace(/([a-z0-9])([A-Z])/g, '$1 $2')\n\t\t\t.toLowerCase();\n\t}\n\n\tgetPropertyName(item) {\n\t\treturn OverrideType[item.type].replace(/^\\w/, c => c.toLowerCase())\n\t}\n\n\tgetOverrideType(prop) {\n\t\treturn OverrideType[prop.replace(/^\\w/, c => c.toUpperCase())];\n\t}\n\n\tonColorSelected(color) {\n\t\tvar item = this.createColorItem(\"Color\", OverrideType.Color);\n\n\t\tthis.override[this.getPropertyName(item)] = color;\n\t\tthis.rebuildItems();\n\t}\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { SeriesOverride } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-series-overrides',\n  template: `\n    <div class=\"gf-form-group\">\n      <h5>Series specific overrides </h5>\n\n      <div>\n\n        <editor-series-override *ngFor=\"let t of overrides; let i = index\"\n          [override]=\"t\" \n          [index]=\"i\"\n          (removed)=\"onRemove( $event )\">\n        </editor-series-override>\n\n        <div class=\"gf-form-button-row\">\n          <button class=\"btn btn-inverse\" (click)=\"onAdd()\">\n            <i class=\"fa fa-plus\"></i>&nbsp;Add Override\n          </button>\n        </div>\n        \n      </div>\n    </div>`\n})\nexport class SeriesOverridesEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    console.log( this.overrides );\n  }\n\n  onAdd(){\n    this.overrides.push( new SeriesOverride() );\n  }\n\n  onRemove( t: SeriesOverride ){\n    const index = this.overrides.indexOf( t )\n\n    if( -1 !== index ){\n      this.overrides.splice( index, 1 );\n    }\n\n    this.update();\n  }\n  \n  \n}\n","<div class=\"ed-form-inline\">\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableOperatorValues\"\r\n\t\t[(ngModel)]=\"threshold.operator\"\r\n\t\tlabel=\"T{{index+1}}\"\r\n\t\twidth=\"6\"\r\n\t\t(selectionChange)=\"refresh()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"value\"\r\n\t\tplaceholder=\"value\"\r\n\t\ttype=\"number\"\r\n\t\twidth=\"8\"\r\n\t\t(changed)=\"refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableColorValues\"\r\n\t\t[(ngModel)]=\"threshold.colorType\"\r\n\t\tlabel=\"Color\"\r\n\t\t(selectionChange)=\"refresh()\">\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"threshold.fill\"\r\n\t\tlabel=\"Fill\"\r\n\t\t(checked)=\"refresh()\">\r\n\t </ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomColors\"\t\r\n\t\tlabel=\"Fill color\"\r\n\t\t[(ngModel)]=\"threshold.fillColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"threshold.line\"\r\n\t\tlabel=\"Line\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomColors\"\t\r\n\t\tlabel=\"Line color\"\r\n\t\t[(ngModel)]=\"threshold.lineColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableAxisValues\"\r\n\t\t[(ngModel)]=\"threshold.axis\"\r\n\t\tlabel=\"Y-Axis\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( threshold )\">\r\n\t\t\t<a>\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { ThresholdOperator, ThresholdColor, ThresholdAxis, Threshold } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-threshold',\n  templateUrl: './threshold.html'\n})\nexport class ThresholdEditorComponent extends BaseChartEditorComponent {\n\n  @Input() threshold: Threshold;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<Threshold>();\n\n  availableOperatorValues = DropDownComponent.wrapEnum( ThresholdOperator );\n\n  availableColorValues = DropDownComponent.wrapEnum( ThresholdColor );\n\n  availableAxisValues = DropDownComponent.wrapEnum( ThresholdAxis );\n  \n  get value(){\n    return this.threshold.value;\n  }\n\n  set value( value ){\n    const v = +value;\n    this.threshold.value = isNaN( v ) || !value ? undefined : v;\n  }\n\n  get showCustomColors(){\n\t\treturn ( ThresholdColor.Custom == this.threshold.colorType );\n\t}\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { Threshold } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-thresholds',\n  template: `\n    <div class=\"gf-form-group\">\n      <h5>Thresholds</h5>\n\n      <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n\n        <editor-threshold *ngFor=\"let t of thresholds; let i = index\"\n          [threshold]=\"t\" \n          [index]=\"i\"\n          (removed)=\"onRemove( $event )\">\n        </editor-threshold>\n\n        <div class=\"gf-form-button-row\">\n          <button class=\"btn btn-inverse\" (click)=\"onAdd()\" ng-disabled=\"ctrl.disabled\">\n            <i class=\"fa fa-plus\"></i>&nbsp;Add Threshold\n          </button>\n        </div>\n        \n      </div>\n    </div>`})\nexport class ThresholdsEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n  }\n  \n  onAdd(){\n    this.thresholds.push( new Threshold() );\n  }\n\n  onRemove( t: Threshold ){\n    const index = this.thresholds.indexOf( t )\n\n    if( -1 !== index ){\n      this.thresholds.splice( index, 1 );\n    }\n\n    this.refresh();\n  }\n}\n","<div class=\"ed-form-inline\">\r\n\t\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label\">T{{index+1}}</label>\r\n\t</div>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableDays\"\r\n\t\t[(ngModel)]=\"timeRegion.fromDay\"\r\n\t\tlabel=\"From\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"fromTime\"\r\n\t\tplaceholder=\"hh:mm\"\r\n\t\twidth=\"8\"\r\n\t\t(focusout)=\"timeRegion.fromTime=fromTime; refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableDays\"\r\n\t\t[(ngModel)]=\"timeRegion.toDay\"\r\n\t\tlabel=\"To\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-textbox\r\n\t\t[(ngModel)]=\"toTime\"\r\n\t\tplaceholder=\"hh:mm\"\r\n\t\twidth=\"8\"\r\n\t\t(focusout)=\"timeRegion.toTime=toTime; refresh()\">\r\n\t</ed-textbox>\r\n\r\n\t<ed-dropdown \r\n\t\t[data]=\"availableColors\"\r\n\t\t[(ngModel)]=\"timeRegion.colorType\"\r\n\t\tlabel=\"Color\"\r\n\t\t(selectionChange)=\"refresh()\" >\r\n\t</ed-dropdown>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"timeRegion.fill\" \r\n\t\tlabel=\"Fill\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomFillColor\"\t\r\n\t\tlabel=\"Fill color\"\r\n\t\t[(ngModel)]=\"timeRegion.fillColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<ed-checkbox \r\n\t\t[(ngModel)]=\"timeRegion.line\" \r\n\t\tlabel=\"Line\"\r\n\t\t(checked)=\"refresh()\">\r\n\t</ed-checkbox>\r\n\r\n\t<ed-color-picker *ngIf=\"showCustomLineColor\"\t\r\n\t\tlabel=\"Line color\"\r\n\t\t[(ngModel)]=\"timeRegion.lineColor\"\r\n\t\t(selected)=\"refresh()\">\r\n\t</ed-color-picker>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit( timeRegion )\">\r\n\t\t\t<a  >\r\n\t\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t\t</a>\r\n\t\t</label>\r\n\t</div>\r\n\r\n</div>\r\n\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { DropDownComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { TimeRegion, TimeRegionColor, TimeRegionDay } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-time-region',\n  templateUrl: './time-region.html'\n})\nexport class TimeRegionEditorComponent extends BaseChartEditorComponent {\n\n  @Input() timeRegion: TimeRegion;\n  @Input() index: number;\n\n  @Output() removed = new EventEmitter<TimeRegion>();\n\n  availableColors = DropDownComponent.wrapEnum( TimeRegionColor )\n  availableDays = DropDownComponent.wrapEnum( TimeRegionDay )\n\n  fromTime: string;\n\ttoTime: string;\n\n  get showCustomColors(){\n\t\treturn ( TimeRegionColor.Custom == this.timeRegion.colorType );\n\t}\n\n\tget showCustomFillColor(){\n\t\treturn ( this.showCustomColors && this.timeRegion.fill );\n\t}\n\n\tget showCustomLineColor(){\n\t\treturn ( this.showCustomColors && this.timeRegion.line );\n\t}\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  ngOnInit(){\n\t\tthis.fromTime = this.timeRegion.fromTime;\n\t\tthis.toTime = this.timeRegion.toTime;\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\nimport { TimeRegion } from '../../../chart.m';\n\n@Component({\n  selector: 'editor-time-regions',\n  template: `\n  <div class=\"gf-form-group\">\n    <h5>Time regions</h5>\n\n    <div ng-class=\"{'thresholds-form-disabled': ctrl.disabled}\">\n\n      <editor-time-region *ngFor=\"let t of timeRegions; let i = index\"\n        [timeRegion]=\"t\" \n        [index]=\"i\"\n        (removed)=\"onRemove( $event )\">\n      </editor-time-region>\n\n      <div class=\"gf-form-button-row\">\n        <button class=\"btn btn-inverse\" (click)=\"onAdd()\" ng-disabled=\"ctrl.disabled\">\n          <i class=\"fa fa-plus\"></i>&nbsp;Add Time Region\n        </button>\n      </div>\n      \n    </div>\n  </div>`\n})\nexport class TimeRegionsEditorComponent extends BaseChartEditorComponent {\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n  \n  onAdd(){\n    this.timeRegions.push( new TimeRegion() );\n  }\n\n  onRemove( t: TimeRegion  ){\n    const index = this.timeRegions.indexOf( t )\n\n    if( -1 !== index ){\n      this.timeRegions.splice( index, 1 );\n    }\n\n    this.refresh();\n  }\n}\n","<ed-side-tabstrip [(ngModel)]=\"index\">\r\n\t<ed-tab header=\"Draw options\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-draw-options></editor-draw-options>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tSeries overrides<span class=\"muted ml-1\" *ngIf=\"overrides.length\">({{overrides.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-series-overrides></editor-series-overrides>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tThresholds<span class=\"muted ml-1\" *ngIf=\"thresholds.length\">({{thresholds.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-thresholds></editor-thresholds>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tTime regions<span class=\"muted ml-1\" *ngIf=\"timeRegions.length\">({{timeRegions.length}})</span>\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-time-regions></editor-time-regions>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-side-tabstrip>\r\n\r\n\r\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-display',\n  templateUrl: './display.html'\n})\nexport class DisplayEditorComponent extends BaseChartEditorComponent  {\n \n  index: number = 1;\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n  }\n}\n","<div class=\"gf-form-inline\">\r\n\t<div class=\"gf-form\">\r\n\t\t\r\n\t\t<span class=\"gf-form-label query-keyword width-5\" *ngIf=\"index==0\">WHEN</span>\r\n\t\t<span class=\"gf-form-label query-keyword width-5\" *ngIf=\"index!=0\">And</span>\r\n\t</div>\r\n\r\n\tcond\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"removed.emit(condition)\">\r\n\t\t\t<i class=\"fa fa-trash\"></i>\r\n\t\t</label>\r\n\t</div>\r\n</div>\r\n","import { Component, EventEmitter, Inject, Input, Output } from '@angular/core';\nimport { AlertCondition, Panel, PANEL_TOKEN } from 'common';\n\nimport { BaseChartEditorComponent } from '../../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-condition',\n  templateUrl: './cond.html'\n})\nexport class AlertConditionEditorComponent extends BaseChartEditorComponent  {\n\n  @Input() condition: AlertCondition;\n  @Input() index: number = 0;\n\n  @Output() removed = new EventEmitter<AlertCondition>();\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  \n}\n","<div class=\"gf-form-group\">\r\n\r\n\t<h5 class=\"section-heading\">Alert Config</h5>\r\n\r\n\t<ed-textbox \r\n\t\tlabel=\"Name\"\r\n\t\tlabelWidth=\"6\"\r\n\t\twidth=\"20\"\r\n\t\t[(ngModel)]=\"alert.name\">\r\n\t</ed-textbox>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<ed-textbox \r\n\t\t\tlabel=\"Evaluate every\"\r\n\t\t\tlabelWidth=\"9\"\r\n\t\t\twidth=\"6\"\r\n\t\t\t[(ngModel)]=\"alert.frequency\">\r\n\t\t</ed-textbox>\r\n\r\n\t\t<ed-textbox \r\n\t\t\tlabel=\"For\"\r\n\t\t\tlabelWidth=\"5\"\r\n\t\t\twidth=\"6\"\r\n\t\t\tplaceholder=\"5m\"\r\n\t\t\thint=\"If an alert rule has a configured For and the query violates\r\n\t\t\t\tthe configured threshold it will first go from OK to Pending. \r\n\t\t\t\tGoing from OK to Pending Grafana will not send any notifications.\r\n\t\t\t\tOnce the alert rule has been firing for more than For duration,\r\n\t\t\t\tit will change to Alerting and send alert notifications. \"\r\n\t\t\t[(ngModel)]=\"alert.for\">\r\n\t\t</ed-textbox>\r\n\t</div>\r\n</div>\r\n\r\n<div class=\"gf-form-group \">\r\n\t<h5 class=\"section-heading\">Conditions</h5>\r\n\r\n\t<div *ngFor=\"let c of alert.conditions;let i = index\" >\r\n\t\t<editor-alert-condition \r\n\t\t\t[condition]=\"c\" \r\n\t\t\t[index]=\"i\"\r\n\t\t\t(removed)=\"onRemoveCondition( $event )\">\r\n\t\t</editor-alert-condition>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form\">\r\n\t\t<label class=\"gf-form-label pointer\" (click)=\"onAddCondition()\">\r\n\t\t\t<i class=\"fa fa-plus\"></i>\r\n\t\t</label>\r\n\t</div>\r\n</div>\r\n<!-- \r\n<div class=\"gf-form-group \">\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<div class=\"gf-form\">\r\n\t\t\t<span class=\"gf-form-label width-18\">If no data or all values are null</span>\r\n\t\t\t<span class=\"gf-form-label query-keyword\">SET STATE TO</span>\r\n\t\t</div>\r\n\r\n\t\t<ed-dropdown\r\n\t\t\twidth=\"11\"\r\n\t\t\t[data]=\"availableNoDataOptions\"\r\n\t\t\t[(ngModel)]=\"alert.noDataOption\" >\r\n\t\t</ed-dropdown>\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-inline\">\r\n\t\t<div class=\"gf-form\">\r\n\t\t\t<span class=\"gf-form-label width-18\">If execution error or timeout</span>\r\n\t\t\t<span class=\"gf-form-label query-keyword\">SET STATE TO</span>\r\n\t\t</div>\r\n\r\n\t\t<ed-dropdown\r\n\t\t\twidth=\"11\"\r\n\t\t\t[data]=\"availableErrorOptions\"\r\n\t\t\t[(ngModel)]=\"alert.errorOption\" >\r\n\t\t</ed-dropdown>\r\n\r\n\t\r\n\t</div>\r\n\r\n\t<div class=\"gf-form-button-row ed-flex\">\r\n\t\t<button class=\"btn btn-inverse\" (click)=\"onTestRule()\" [disabled]=\"testing\">\r\n\t\t\tTest Rule\r\n\t\t</button>\r\n\r\n\t\t<ed-progress message=\"evaluating rule...\"\t*ngIf=\"testing\"></ed-progress>\r\n\t</div>\r\n\r\n</div>\r\n\r\n<div class=\"gf-form-group\" ng-if=\"ctrl.testResult\">\r\n\t<ed-json-explorer #jsonExplorer></ed-json-explorer>\r\n</div> -->\r\n\r\n","import { Component, Inject, ViewChild } from '@angular/core';\nimport { Panel, PANEL_TOKEN, AlertNoDataOption, AlertErrorOption, AlertCondition } from 'common';\nimport { of } from 'rxjs';\nimport { delay, finalize } from 'rxjs/operators';\nimport { DropDownComponent, ErrorMessages, Notes, JsonExplorerComponent } from 'uilib';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-config',\n  templateUrl: './alert-config.html'\n})\nexport class AlertConfigEditorComponent extends BaseChartEditorComponent  {\n\n  @ViewChild(JsonExplorerComponent) explorer; \n  testing : boolean;\n\n  availableNoDataOptions = DropDownComponent.wrapEnum( AlertNoDataOption );\n\n  availableErrorOptions = DropDownComponent.wrapEnum( AlertErrorOption );\n  \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  onAddCondition(){\n    this.alert.conditions = this.alert.conditions ?? [];\n    this.alert.conditions.push( new AlertCondition() );\n\n    this.panel.error = !this.panel.error ? \"Mega error occured\" : undefined;\n  }\n\n  onRemoveCondition( c: AlertCondition ){\n    const index = this.alert.conditions.indexOf( c );\n\n    if( -1 !== index ){\n      this.alert.conditions.splice( index, 1 );\n    }\n  }\n\n  onTestRule(){\n    this.testing = true;\n\n    of( this.alert )\n      .pipe(\n        delay(2000),\n        finalize( () => this.testing = false ))\n        .subscribe( \n          x => {\n            this.explorer.content = x;\n            \n            // if( x.error ){\n            //   Notes.error( x.error );\n            // }\n          },\n          e => Notes.error( \n            e.error?.message ?? ErrorMessages.BAD_ALERT_EVAL ))\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-notifications',\n  templateUrl: './alert-nots.html'\n})\nexport class AlertNotificationsEditorComponent extends BaseChartEditorComponent  {\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    \n\n  }\n}\n","alert notifications will be here","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { BaseChartEditorComponent } from '../../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert-history',\n  templateUrl: './alert-history.html'\n})\nexport class AlertHistoryEditorComponent extends BaseChartEditorComponent  {\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    \n\n  }\n}\n","<ed-side-tabstrip [(ngModel)]=\"index\" *ngIf=\"alert; else invitation\">\r\n\t<ed-tab header=\"Alert Config\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert-config></editor-alert-config>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab>\r\n\t\t<ng-template edTabTitle>\r\n\t\t\tNotifications\r\n\t\t</ng-template>\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert-notifications></editor-alert-notifications>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"State History\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert-history></editor-alert-history>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Delete\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<ed-dialog \r\n\t\t\t\theader=\"Delete Alert\"\r\n\t\t\t\theaderIcon=\"fa fa-trash\"\r\n\t\t\t\tvisible=\"true\"\r\n\t\t\t\t(close)=\"onClose()\" >\r\n\r\n\t\t\t\t<div class=\"text-center\">\r\n\t\t\t\t\t<div class=\"confirm-modal-text\">\r\n\t\t\t\t\t\tAre you sure you want to delete this alert rule?\r\n\t\t\t\t\t\t<div class=\"confirm-modal-text2\">\r\n\t\t\t\t\t\t\tYou need to save dashboard for the delete to take effect\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\r\n\t\t\t\t<ed-dialog-actions>\r\n\t\t\t\t\t<button (click)=\"onDelete()\" class=\"btn btn-danger\">Delete</button>\r\n\t\t\t\t\t<button (click)=\"onClose()\" class=\"ml-2 btn btn-inverse\">Cancel</button>\r\n\t\t\t\t</ed-dialog-actions>\r\n\t\t\t</ed-dialog>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-side-tabstrip>\r\n\r\n<ng-template #invitation>\r\n\t<div class=\"gf-form-group\" >\r\n\t\t<div class=\"gf-form-button-row\">\r\n\t\t\t<button class=\"btn btn-inverse\" (click)=\"onAddAlert()\">\r\n\t\t\t\t<i class=\"icon-gf icon-gf-alert\"></i>\r\n\t\t\t\tCreate Alert\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t</div>\r\n</ng-template >\r\n\r\n\r\n","alert history will be here","import { Component, Inject } from '@angular/core';\nimport { Panel, PANEL_TOKEN, AlertRule } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-alert',\n  templateUrl: './alert.html'\n})\nexport class AlertEditorComponent extends BaseChartEditorComponent  {\n \n  index: number = 0;\n\n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n\n    console.log( this.widget );\n  }\n\n  ngOnInit(){\n    //this.onAddAlert(); // just for tests  \n  }\n\n  onAddAlert(){\n    \n    this.widget.alert = new AlertRule();\n  }\n\n  onClose(){\n    this.index = 0;\n  }\n\n  onDelete(){\n    // delete alert\n    this.widget.alert = undefined;\n\n    this.onClose();\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Panel, PANEL_TOKEN, TimeRangeParser } from 'common';\nimport { BaseChartEditorComponent } from '../../base/chart-base-editor';\n\n@Component({\n  selector: 'editor-time',\n  templateUrl: './time.html'\n})\nexport class TimeEditorComponent extends BaseChartEditorComponent  {\n\n  form: FormGroup;\n \n  constructor(@Inject( PANEL_TOKEN ) panel: Panel){\n    super( panel );\n  }\n\n  ngOnInit(){\n\n\t\tthis.form = new FormGroup({\n\t\t\t'from': new FormControl( this.time.from ?? '', this.validateTime.bind( this )),\n      'shift': new FormControl(this.time.shift ?? '',  this.validateTime.bind( this )),\n      'hide': new FormControl(this.time.hide)\n    });\n\n    this\n      .form\n      .valueChanges\n      .subscribe( v => {\n        if( this.form.valid ){\n          let pull = false;\n\n          if(this.time.from !== v.from ){\n            this.time.from = v.from;\n            pull = true;\n          }\n\n          if( this.time.shift !== v.shift ) {\n            this.time.shift = v.shift;\n            pull = true;\n          }\n\n          if( this.time.hide !== v.hide ) {\n            this.time.hide = v.hide;\n          }\n\n          if( pull ){\n            this.pull();\n          }\n        }\n      });\n  }\n\n  validateTime(c: FormControl) {\n    if( !c.value ){\n      return null;\n    }\n\n    const v = `now - ${c.value}`\n\n    return ( TimeRangeParser.isValid( v ) ) ?  null : { invalidTime: true }\n  }\n}\n","<ed-tabstrip header=\"Graph\"\r\n\t[(ngModel)]=\"index\"\r\n\t(selected)=\"onTabSelected($event)\">\r\n\r\n\t<ed-tab header=\"General\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-general></editor-general>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Metrics\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-metrics></editor-metrics>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Axes\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-axes></editor-axes>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Legend\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-legend></editor-legend>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Display\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-display></editor-display>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Alert\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-alert></editor-alert>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n\t<ed-tab header=\"Time range\">\r\n\t\t<ng-template edTabContent>\r\n\t\t\t<editor-time></editor-time>\r\n\t\t</ng-template>\r\n\t</ed-tab>\r\n\r\n</ed-tabstrip>\r\n","<form [formGroup]=\"form\" #f>\r\n\t<div class=\"section gf-form-group\">\r\n\r\n\t\t<div class=\"ed-form-inline\">\r\n\t\t\t<div class=\"gf-form\">\r\n\t\t\t\t<span class=\"gf-form-label\">\r\n\t\t\t\t\t<i class=\"fa fa-clock-o\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span class=\"gf-form-label width-12\">Override relative time</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\tlabel=\"Last\"\r\n\t\t\t\tlabelWidth=\"6\"\r\n\t\t\t\twidth=\"8\"\r\n\t\t\t\tplaceholder=\"1h\"\r\n\t\t\t\tformControlName=\"from\"\t>\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"ed-form-inline\">\r\n\t\t\t<div class=\"gf-form\">\r\n\t\t\t\t<span class=\"gf-form-label\">\r\n\t\t\t\t\t<i class=\"fa fa-clock-o\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t\t<span class=\"gf-form-label width-12\">Add time shift</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ed-textbox \r\n\t\t\t\tlabel=\"Amount\"\r\n\t\t\t\tlabelWidth=\"6\"\r\n\t\t\t\twidth=\"8\"\r\n\t\t\t\tplaceholder=\"1h\"\r\n\t\t\t\tformControlName=\"shift\"\t>\r\n\t\t\t</ed-textbox>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"gf-form-inline\">\r\n\t\t\t<div class=\"gf-form\">\r\n\t\t\t\t<span class=\"gf-form-label\">\r\n\t\t\t\t\t<i class=\"fa fa-clock-o\"></i>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\t\t\t<ed-checkbox \r\n\t\t\t\tlabelWidth=\"12\"\r\n\t\t\t\twidth=\"6\"\r\n\t\t\t\tlabel=\"Hide time override info\"\r\n\t\t\t\tformControlName=\"hide\"\t\t>\r\n\t\t\t</ed-checkbox>\r\n\t\t</div>\r\n\r\n\t</div>\r\n</form>\r\n","import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'widget-editor',\n  templateUrl: './editor.html'\n})\nexport class ChartEditorComponent {\n  index: number = 0;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private location: Location){\n      this\n        .activatedRoute\n        .queryParamMap\n        .subscribe((params) => {\n          const p = params.get( 'tab' );\n\n          if( Number.isInteger( +p )){\n            this.index = +p;\n          } \n        });\n  }\n\n  onTabSelected( index: number ){\n    const url = this\n      .router\n      .createUrlTree([], {\n        relativeTo: this.activatedRoute,\n        queryParams: {tab: index},\n        queryParamsHandling: 'merge',\n      })\n      .toString()\n\n    this.location.go(url);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Panel, PANEL_TOKEN } from 'common';\r\nimport { AXIS_Y_LEFT, AXIS_Y_RIGHT, DataPointNullValueOption, DataSet } from '../chart.m';\r\nimport { ColorHelper } from 'uilib';\r\nimport { OptionsProvider } from './options-provider';\r\n\r\n@Injectable()\r\nexport class DisplayManager {\r\n\r\n\tprivate get display() {\r\n\t\treturn this\r\n\t\t\t.panel\r\n\t\t\t.widget\r\n\t\t\t.display;\r\n\t}\r\n\r\n\tprivate get options(){\r\n\t\treturn this\r\n\t\t\t.panel\r\n\t\t\t.widget\r\n\t\t\t.component\r\n\t\t\t.control\r\n\t\t\t.chart\r\n\t\t\t.options;\r\n\t}\r\n\r\n\tconstructor ( @Inject( PANEL_TOKEN ) private panel: Panel ) {\r\n\r\n\t}\r\n\r\n\tsetup(ds: DataSet) {\r\n\t\tthis.setupLines( ds );\r\n\t\tthis.setupPoints( ds );\r\n\t\tthis.setupNullValue( ds );\r\n\t}\r\n\r\n\tprivate setupLines( ds: DataSet ) {\r\n\t\tconst showLines = this.getShowLines( ds );\r\n\t\tconst lineWidth = this.getLineWidth( ds );\r\n\t\tconst fill = this.getFill( ds );\r\n\r\n\t\tlet opacity = ( fill / 10);\r\n\t\tds.fill = (/*showLines &&*/ fill > 0);\r\n\t\tds.backgroundColor = this.getLineColor( ds, opacity );\r\n\r\n\t\topacity = (showLines && lineWidth) ? 1 : 0;\r\n\t\tds.borderColor = this.getLineColor( ds, opacity );\r\n\t\tds.borderWidth = lineWidth;\r\n\r\n\t\t ds.steppedLine = this.getStaircase( ds );\r\n\r\n\t\tif( this.getDashes( ds ) ){\r\n\t\t\tconst len = this.getDashLength( ds );\r\n\t\t\tconst space = this.getDashSpace( ds );\r\n\t\t\tds.borderDash = [ len, space ]\r\n\t\t}\r\n\t\telse{\r\n\t\t\tds.borderDash = undefined;\r\n\t\t}\r\n\r\n\t\tds.order = this.getZIndex( ds );\r\n\t\tds.legend = this.getLegend( ds );\r\n\r\n\t\tds.yAxisID = ( 1 == this.getYAxis( ds ) ) ?\tAXIS_Y_LEFT: AXIS_Y_RIGHT;\r\n\t}\r\n\r\n\tprivate setupPoints( ds: DataSet ) {\r\n\t\tconst showPoints = this.getShowPoints( ds );\r\n\r\n\t\tconst opacity = showPoints ? 1 : 0\r\n\t\tconst color = this.getLineColor( ds, opacity );\r\n\r\n\t\tds.pointBorderColor = `${color}`;\r\n\t\tds.pointBackgroundColor = `${color}`;\r\n\r\n\t\tds.pointRadius = showPoints ? this.getPointRadius( ds ) : 0;\r\n\t}\r\n\r\n\tprivate setupNullValue( ds: DataSet ) {\r\n\t\tswitch ( this.display.nullValue) {\r\n\t\t\tcase DataPointNullValueOption.Connected:\r\n\t\t\t\tthis.options.spanGaps = true;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? null : p.y );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DataPointNullValueOption.Null:\r\n\t\t\t\tthis.options.spanGaps = false;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? null : p.y );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase DataPointNullValueOption.NullAsZero:\r\n\t\t\t\tthis.options.spanGaps = false;\r\n\t\t\t\tds.data.forEach( p => p.y = p.isNull ? 0 : p.y );\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tgetShowLines(ds: DataSet): boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lines ) ? o.lines : this.display.showLines;\r\n\t}\r\n\t\r\n\tgetLineWidth(ds: DataSet): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lineWidth ) ? o.lineWidth : this.display.lineWidth;\r\n\t}\r\n\r\n\tgetLineColor(ds: DataSet, opacity: number) : string{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\tconst color = ColorHelper.colors[ds.index % ColorHelper.colors.length];\r\n\t\tconst defaultColor = ColorHelper.hexToRgbString( color, opacity );\r\n\r\n\t\tconst useOverride = ( o && undefined != o.color )\r\n\t\tlet overrideColor: string;\r\n\r\n\t\tif( useOverride ){\r\n\t\t\toverrideColor = ColorHelper.hexToRgbString( o.color, opacity );\r\n\t\t}\r\n\r\n\t\treturn ( useOverride ) ? overrideColor : defaultColor;\r\n\t}\r\n\r\n\tgetFill( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.lineFill ) ? o.lineFill : this.display.fill;\r\n\t}\r\n\r\n\tgetStaircase( ds: DataSet ): boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.staircase ) ? o.staircase : this.display.staircase;\r\n\t}\r\n\r\n\tgetDashes( ds: DataSet ){\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashes ) ? o.dashes : false;\r\n\t}\r\n\r\n\tgetDashLength( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashLength ) ? o.dashLength : 1;\r\n\t}\r\n\r\n\tgetDashSpace( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.dashSpace ) ? o.dashSpace : 1;\r\n\t}\r\n\r\n\tgetShowPoints( ds: DataSet ) : boolean {\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.points ) ? o.points : this.display.showPoints;\r\n\t}\r\n\r\n\tgetPointRadius( ds: DataSet ) : number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.pointRadius ) ? o.pointRadius : this.display.pointRadius;\r\n\t}\r\n\r\n\tgetLegend( ds: DataSet ) : boolean{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.legend ) ? o.legend : true;\r\n\t}\r\n\r\n\tgetZIndex( ds: DataSet ): number{\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.zIndex ) ? o.zIndex : 0;\r\n\t}\r\n\r\n\tgetYAxis( ds: DataSet ){\r\n\t\tconst o = this.getOverride( ds );\r\n\r\n\t\treturn ( o && undefined != o.yAxis ) ? o.yAxis : 1;\r\n\t}\r\n\r\n\tgetOverride( ds: DataSet ){\r\n\t\treturn this.getOverrideByLabel( ds.label );\r\n\t}\r\n\r\n\tgetOverrideByLabel( label: string ){\r\n\t\treturn this\r\n\t\t\t.display\r\n\t\t\t.overrides\r\n\t\t\t.find( x => x.alias && new RegExp( x.alias ).test( label )  )\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Moment, Series } from 'common';\r\nimport { DataSet } from '../../chart.m';\r\nimport { DisplayManager } from '../display-manager';\r\n\r\n@Injectable()\r\nexport class DataConverter {\r\n\r\n\tconstructor( private dispay: DisplayManager ){\r\n\t\t\r\n\t}\r\n\t\r\n\ttoDataSets(data: Series[]) : DataSet[] {\r\n\t\tif (!data || 0 === data.length) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet dataSets = [];\r\n\t\tlet totalIndex = 0;\r\n\r\n\t\tdata.forEach(serie => {\r\n\t\t\tconst columns = serie.columns.slice(1);\r\n\r\n\t\t\tconst arr = [...columns.map((el, index) =>\r\n\t\t\t\tthis.toDataSet(serie, index + 1, totalIndex++))]\r\n\t\t\t\t.filter(x => x);\r\n\r\n\t\t\tdataSets = [...dataSets, ...arr];\r\n\r\n\t\t\tdataSets.forEach( x => this.dispay.setup( x ) )\r\n\t\t});\r\n\r\n\t\t\r\n\t\t//this.chart.widget.error = undefined;\r\n\t\treturn dataSets;\r\n\t}\r\n\r\n\tprivate toDataSet(serie: Series, index: number, totalIndex:number) : DataSet {\r\n\t\tconst values = serie\r\n\t\t\t.values\r\n\t\t\t.map(x => {\r\n\t\t\t\tconst isNull = (null == x[index]);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: Moment.valueOf( x[0] ),\r\n\t\t\t\t\ty: (isNull) ? x[index] : x[index],\r\n\t\t\t\t\tisNull: isNull\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tconst filteredValues = values\r\n\t\t\t.map(p => p.y)\r\n\t\t\t.filter(p => null != p)\r\n\t\t\t.map(p => parseFloat(p));\r\n\r\n\t\tif (0 == filteredValues.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst avg = (filteredValues.reduce((a, b) => a + b) / filteredValues.length)\r\n\r\n\t\tconst allNulls = filteredValues.every(x => x == null);\r\n\t\tconst allZeros = filteredValues.every(x => x == 0);\r\n\r\n\t\tconst ds = {\r\n\t\t\tlabel: this.generateDataSetName(serie, index),\r\n\t\t\tdata: values,\r\n\t\t\tlineTension: 0,\r\n\t\t\tmin: Math.min(...filteredValues),\r\n\t\t\tmax: Math.max(...filteredValues),\r\n\t\t\tavg: avg,\r\n\t\t\tcurrent: filteredValues.slice(-1)[0],\r\n\t\t\tallNulls: allNulls,\r\n\t\t\tallZeros: allZeros,\r\n\t\t\tindex: totalIndex,\r\n\t\t\tpointRadius:0,\r\n\t\t\tborderColor: \"#ff0000\"\r\n\t\t\t//widget: this.chart.widget,\r\n\t\t}\r\n\r\n\t\t//ds.borderColor = new ColorHelper().getColorAsArgbFunc( ds, 1 );\r\n\t\t//console.log( ds.borderColor );\r\n\r\n\t\t//this.display.setup(ds);\r\n\r\n\t\treturn ds;\r\n\t}\r\n\r\n\tprivate generateDataSetName( serie: Series, index: number ): string{\r\n\t\tlet root = `${serie.name}.${serie.columns[ index ]}`;\r\n\r\n\t\tlet tags = '';\r\n\t\tvar keys = Object.keys(serie.tags);\r\n\t\tvar keyIndex = 0;\r\n\r\n\t\tfor(var key in serie.tags){\r\n\t\t\ttags += `${keyIndex > 0 ? ', ': ''}${key}: ${serie.tags[ key ]}` ;\r\n\t\t\tkeyIndex++\r\n\t\t}\r\n\r\n\t\t// serie.tags.forEach( ( t, index ) => tags = `${tags}${index > 0 ? ',': ''} tag` )\r\n\r\n\t\tif( tags ){\r\n\t\t\troot = `${root} {${tags}}`;\r\n\t\t}\r\n\r\n\t\treturn root;\r\n\t}\r\n}","import { EventEmitter, Inject, Injectable } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { finalize, mergeMap, tap } from 'rxjs/operators';\r\nimport { Panel, TimeRangeStore, DataSourceService, PluginActivator,\r\n\tPANEL_TOKEN, TimeRangeConverter, TimeRangeMod, TimeRange } from 'common';\r\nimport { DataConverter } from './data-converter';\r\nimport { ChartData } from '../../chart.m';\r\n\r\n@Injectable()\r\nexport class DataProvider {\r\n\trequest: string;\r\n\ttimeSubs: Subscription;\r\n\r\n\tdata$ = new EventEmitter<ChartData>();\r\n\r\n\tget metrics(){\r\n\t\treturn this.panel?.widget?.metrics;\r\n\t}\r\n\r\n\tget range(): TimeRange{\r\n\t\tconst range = <TimeRange>this.time.range.raw;\r\n\t\tconst mod = this.panel?.widget?.time;\r\n\r\n\t\treturn this\r\n\t\t\t.time\r\n\t\t\t.converter\r\n\t\t\t.modify( range, mod )\r\n\t}\r\n\r\n\tconstructor (\r\n\t\tprivate pluginActivator: PluginActivator,\r\n\t\tprivate dsService: DataSourceService,\r\n\t\tprivate converter: DataConverter,\r\n\t\tprivate time: TimeRangeStore,\r\n\t\t@Inject( PANEL_TOKEN ) private panel: Panel ) {\r\n\r\n\t\t\tthis.timeSubs = this\r\n\t\t\t\t.time\r\n\t\t\t\t.range$\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\ttap( _ => this.request = '' ),\r\n\t\t\t\t\tmergeMap( _ => this.pluginActivator.createDataSourceMetricsBuilder( panel ) ),\r\n\t\t\t\t\tmergeMap( mb => mb.build( this.metrics, this.range )))\r\n\t\t\t\t.subscribe( x => this.pull( <string>x ));\r\n\t}\r\n\r\n\tdestroy(){\r\n\t\tthis.timeSubs?.unsubscribe();\r\n\t}\r\n\r\n\tupdate(){\r\n\t\tthis.time.tick();\r\n\t}\r\n\r\n\tprivate pull( request: string){\r\n\t\tif (this.request === request) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.request = request;\r\n\r\n\t\tconsole.log( `pull: ${request}` );\r\n\t\t\r\n\t\tif (!request) {\r\n\t\t\tthis.onData([])\r\n\t\t} else {\r\n\t\t\tthis.panel.loading = true;\r\n\r\n\t\t\tthis\r\n\t\t\t\t.dsService\r\n\t\t\t\t.proxy( 6, request)\r\n\t\t\t\t.pipe(\r\n\t\t\t\t\tfinalize(() => this.panel.loading = false ))\r\n\t\t\t\t.subscribe(\r\n\t\t\t\t\tx => this.onData( x ),\r\n\t\t\t\t\te => this.onError( e.error ));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onData( x ){\r\n\t\tthis.panel.error = undefined;\r\n\r\n\t\tthis.data$.emit( {\r\n\t\t\tdatasets: this.converter.toDataSets( x )\r\n\t\t} );\r\n\t}\r\n\r\n\tprivate onError(err) {\r\n\t\tthis.panel.error = err.details;\r\n\r\n\t\tthis.data$.emit( {\r\n\t\t\tdatasets: []\r\n\t\t} );\r\n\t}\r\n}","import { Moment } from 'common';\r\nimport { ChartComponent } from '../../chart.c';\r\nimport { AXIS_Y_LEFT, TooltipSortOrder } from '../../chart.m';\r\nimport { ColorHelper } from 'uilib';\r\nimport { AxisUnitHelper } from '../helpers/unit-helper';\r\n\r\ndeclare var Chart: any;\r\n\r\nexport class TooltipBuilder {\r\n\r\n\treadonly ID = \"chartjs-tooltip\";\r\n\treadonly TOOLTIP_SELECTOR = \"ed-tooltip\";\r\n\r\n\tstatic build( comp: ChartComponent ){\r\n\t\tChart.Tooltip.positioners.custom = (_, event) => {\r\n\t\t\treturn {\r\n\t\t\t\tx: event.x,\r\n\t\t\t\ty: event.y\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\treturn {\r\n\t\t\tmode: 'index',\r\n\t\t\tposition: \"custom\",\r\n\t\t\taxis: 'x',\r\n\t\t\tintersect: false,\r\n\t\t\tcaretSize: 0,\r\n\t\t\txPadding: 10,\r\n\t\t\tbodySpacing: 5,\r\n\t\t\ttitleAlign: 'right',\r\n\t\t\tenabled: false,\r\n\t\t\tcustom: ( model ) => new TooltipBuilder( model, comp ).create()\r\n\t\t}\r\n\t}\r\n\r\n\tget root(){\r\n\t\tvar tooltipEl = document.getElementById(this.ID);\r\n\r\n\t\t// Create element on first render\r\n\t\tif(!tooltipEl) {\r\n\t\t\ttooltipEl = document.createElement('div');\r\n\t\t\ttooltipEl.id = this.ID;\r\n\r\n\t\t\ttooltipEl.innerHTML = `<div class='graph-tooltip grafana-tooltip ${this.TOOLTIP_SELECTOR}'></div>`;\r\n\r\n\t\t\tdocument.body.appendChild(tooltipEl);\r\n\t\t}\r\n\r\n\t\treturn tooltipEl;\r\n\t}\r\n\r\n\tconstructor( private model, private component: ChartComponent ){\r\n\r\n\t}\r\n\r\n\tcreate(){\r\n\t\tvar tooltipElement = this.root;\r\n\r\n\t\t// Hide if no tooltip\r\n\t\tif( this.model.opacity === 0 /*|| chart.showAnnotView*/ ) {\r\n\t\t\ttooltipElement.style.opacity = '0';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttooltipElement.classList.remove('above', 'below', 'no-transform');\r\n\t\t\r\n\t\tif (this.model.yAlign) {\r\n\t\t\ttooltipElement.classList.add(this.model.yAlign);\r\n\t\t} else {\r\n\t\t\ttooltipElement.classList.add('no-transform');\r\n\t\t}\r\n\r\n\t\tif (this.model.body) {\r\n\t\t\tthis.createBody();\r\n\t\t}\r\n\r\n\t\tthis.setPosition();\r\n\t}\r\n\r\n\tprivate setPosition(){\r\n\t\tvar tooltipElement = this.root;\r\n\t\t\r\n\t\tconst chart = this.component.control.chart;\r\n\r\n\t\tvar position = chart\r\n\t\t\t.canvas\r\n\t\t\t.getBoundingClientRect();\r\n\r\n\t\tconst elWidth = document\r\n\t\t\t.getElementsByClassName(this.TOOLTIP_SELECTOR)[ 0 ]\r\n\t\t\t.getBoundingClientRect()\r\n\t\t\t.width;\r\n\r\n\t\tconst negMargin = ( this.model.caretX + elWidth > position.width ) ?\r\n\t\t\telWidth +  2 * this.model.xPadding : 0;\r\n\t\t\r\n\t\ttooltipElement.style.opacity = '1';\r\n\t\ttooltipElement.style.position = 'absolute';\r\n\t\ttooltipElement.style.left = position.left + window.pageXOffset + this.model.caretX - negMargin + 'px';\r\n\t\ttooltipElement.style.top = position.top + window.pageYOffset + this.model.caretY + 'px';\r\n\t\ttooltipElement.style.fontFamily = this.model._bodyFontFamily;\r\n\t\ttooltipElement.style.padding = this.model.yPadding + 'px ' + this.model.xPadding + 'px';\r\n\t\ttooltipElement.style.pointerEvents = 'none';\r\n\t}\r\n\r\n\tprivate createBody(){\r\n\t\tvar tooltipElement = this.root;\r\n\t\tvar chart = this.component;\r\n\t\tvar w = this.component.store.panel.widget;\r\n\r\n\t\tvar titleLines = this.model.title || [];\r\n\t\tvar innerHtml = '';\r\n\r\n\t\ttitleLines.forEach(function(title) {\r\n\t\t\tconst date = Date.parse( title );\r\n\t\t\tconst time = Moment.format ( date );\r\n\t\t\tinnerHtml += `<div class=\"graph-tooltip-time\">${time}</div>`\r\n\t\t});\r\n\r\n\t\tconst parsedBodyLines = this.sort();\r\n\r\n\t\tparsedBodyLines.forEach( (body, i) => {\r\n\t\t\tconst { seriesName, value, color } = body;\r\n\r\n\t\t\tlet seriesNameEl = `\r\n\t\t\t\t<div class=\"graph-tooltip-series-name\">\r\n\t\t\t\t\t<i class=\"fa fa-minus\" style=\"color:${color};\"></i> ${seriesName}:\r\n\t\t\t\t</div>`\r\n\r\n\t\t\tconst ds = chart\r\n\t\t\t\t.data\r\n\t\t\t\t.datasets\r\n\t\t\t\t.find( x => x.label == seriesName );\r\n\r\n\t\t\tconst axis =   ( ds.yAxisID == AXIS_Y_LEFT ) ?\tw.axes.leftY : w.axes.rightY;\r\n\r\n\t\t\tconst decimals = w.legend.decimals ? w.legend.decimals : 1;\r\n\r\n\t\t\tconst resValue = AxisUnitHelper.getFormattedValue( value, axis.unit, decimals )\r\n\r\n\t\t\tlet valueEl = `<div class=\"graph-tooltip-value \">${resValue}</div>`;\r\n\r\n\t\t\tlet item = `\r\n\t\t\t\t<div class=\"graph-tooltip-list-item\">\r\n\t\t\t\t\t${seriesNameEl}\r\n\t\t\t\t\t${valueEl}\r\n\t\t\t\t</div>`\r\n\r\n\t\t\tinnerHtml += item;\r\n\t\t});\r\n\r\n\t\tvar tableRoot = tooltipElement.querySelector(`.${this.TOOLTIP_SELECTOR}`);\r\n\t\ttableRoot.innerHTML = innerHtml;\r\n\t}\r\n\r\n\tprivate sort() : Array<any>{\r\n\t\tfunction getBody(bodyItem) {\r\n\t\t\treturn bodyItem.lines;\r\n\t\t}\r\n\r\n\t\tvar bodyLines = this.model.body.map(getBody);\r\n\r\n\t\tconst sortOrder = this\r\n\t\t\t.component\r\n\t\t\t.widget\r\n\t\t\t.display\r\n\t\t\t.tooltipSortOrder;\r\n\r\n\t\tconst parsedBodyLines = [];\r\n\t\t\r\n\t\tbodyLines.forEach((body, i) => {\r\n\t\t\tvar colors = this.model.labelColors[ i ];\r\n\t\t\tvar color = ColorHelper.hexToRgbString( colors.backgroundColor);\r\n\r\n\t\t\tlet index = body[ 0 ].lastIndexOf( ':' );\r\n\t\t\tconst seriesName = body[ 0 ].substring( 0, index );\r\n\t\t\tconst value = parseFloat(this.model.dataPoints[ i ].value);\r\n\t\t\tparsedBodyLines.push( {seriesName, value, color} );\r\n\t\t});\r\n\r\n\t\tswitch( sortOrder ){\r\n\t\t\tcase TooltipSortOrder.Increasing:\r\n\t\t\t\tparsedBodyLines.sort( (a, b) => a.value - b.value);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase TooltipSortOrder.Decreasing:\r\n\t\t\t\tparsedBodyLines.sort( (a, b) => b.value - a.value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\r\n\t\tconst res = parsedBodyLines.filter( x => {\r\n\t\t\treturn !this\r\n\t\t\t\t.component\r\n\t\t\t\t.display\r\n\t\t\t\t.getOverrideByLabel( x.seriesName )\r\n\t\t\t\t?.hideInTooltip;\r\n\t\t} )\r\n\r\n\t\treturn res;\r\n\t}\r\n}\r\n\r\n\r\n","import { ChartComponent } from '../chart.c';\r\nimport { AXIS_X, AXIS_Y_LEFT, AXIS_Y_RIGHT, Chart, ScaleType } from '../chart.m';\r\nimport { TooltipBuilder } from './drawers/tooltip';\r\nimport { AxisUnitHelper } from './helpers/unit-helper';\r\n\r\ndeclare var Chart: any;\r\n\r\nexport class OptionsProvider{\r\n\r\n\tstatic getOptions( comp: ChartComponent ){\r\n\t\tChart.defaults.global.defaultFontColor = '#e3e3e3';\r\n\t\tChart.defaults.global.defaultFontFamily = 'Roboto';\r\n\t\tChart.defaults.global.defaultFontSize = 11;\r\n\r\n\t\tconst w = comp.widget;\r\n\r\n\t\treturn {\r\n\t\t\tmaintainAspectRatio: false,\r\n\t\t\tanimation: false,\r\n\r\n\t\t\ttooltips: TooltipBuilder.build( comp ),\r\n\r\n\t\t\tlegend: {\r\n\t\t\t\tdisplay: false\r\n\t\t\t},\r\n\t\r\n\t\t\tspanGaps: true,\r\n\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [this.getAxisX( w )],\r\n\t\t\t\tyAxes: [ this.getAxisY( w, true ), this.getAxisY( w, false )] \r\n\t\t\t\t/*!AxesManager.needSecondaryYAxis(widget) true ? [axisYa] : [axisYa, axisYb]\t\t\t\t*/\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n\r\n\tprivate static getAxisX( w: Chart ){\r\n\t\treturn {\r\n\t\t\tid: AXIS_X,\r\n\t\t\ttype: 'time',\r\n\t\t\tgridLines: {\r\n\t\t\t\tcolor: 'rgba( 255,255,255, 0.1)',\r\n\t\t\t},\r\n\t\t\tticks: {\r\n\t\t\t\tautoSkip: true,\r\n\t\t\t\tautoSkipPadding: 50,\r\n\t\t\t\tmaxRotation: 0,\r\n\t\t\t\tminRotation: 0,\r\n\t\t\t},\r\n\t\t\ttime: {\r\n\t\t\t\tdisplayFormats: {\r\n\t\t\t\t\tsecond: 'HH:mm:ss',\r\n\t\t\t\t\tminute: 'HH:mm',\r\n\t\t\t\t\thour: 'HH:mm',\r\n\t\t\t\t\tday: 'M/D HH:mm',\r\n\t\t\t\t\tweek: 'M/D',\r\n\t\t\t\t\tmonth: 'M/D',\r\n\t\t\t\t\tyear: 'YYYY-M',\r\n\t\t\t\t },\r\n\t\t\t},\r\n\t\t\tdisplay: w.axes.x.show\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static getAxisY(w: Chart, left: boolean){\r\n\t\tconst wAxis = left ? w.axes.leftY : w.axes.rightY;\r\n\t\tconst id = left ? AXIS_Y_LEFT : AXIS_Y_RIGHT;\r\n\r\n\t\tconst axis = {\r\n\t\t\tid: id,\r\n\t\t\tdisplay: wAxis.show,\r\n\t\t\ttype: ( !wAxis.scale || wAxis.scale == ScaleType.Linear ) ? \"linear\" : \"logarithmic\",\r\n\t\t\tgridLines: {\r\n\t\t\t\tcolor: 'rgba( 255,255,255, 0.1)',\r\n\t\t\t\tzeroLineWidth: 3,\r\n\t\t\t},\r\n\t\t\tposition: left ? \"left\" : \"right\",\r\n\t\t\tscaleLabel:{\r\n\t\t\t\tdisplay: wAxis.label,\r\n\t\t\t\tlabelString: wAxis.label,\r\n\t\t\t},\r\n\t\t\tticks:{\r\n\t\t\t\tmin: wAxis.min,\r\n\t\t\t\tmax: wAxis.max,\r\n\t\t\t\tuserCallback: (label, index, labels) => {\r\n\t\t\t\t\tif( labels.length > 8 && !( index % 2 ) ){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn AxisUnitHelper.getFormattedValue( label, wAxis.unit, wAxis.decimals );\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstacked: w.display.stack,\r\n\t\t}\r\n\r\n\t\treturn axis;\r\n\t}\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\nimport { Panel, PANEL_TOKEN } from 'common';\nimport { UIChart } from 'primeng';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ChartComponent } from '../chart.c';\nimport { Chart, DataSet } from '../chart.m';\nimport { DataProvider } from '../view/data/data-provider';\nimport { DisplayManager } from '../view/display-manager';\n\n@Injectable()\nexport class ChartStore {\n\n\tprivate widget: BehaviorSubject<Chart> = new BehaviorSubject(null);\n\treadonly widget$: Observable<Chart> = this.widget.asObservable();\n\t\n\tprivate data: BehaviorSubject<DataSet[]> = new BehaviorSubject(null);\n\treadonly data$: Observable<DataSet[]> = this.data.asObservable();\n\n\tconstructor( \n\t\tpublic dataProvider: DataProvider,\n\t\tpublic display: DisplayManager,\n\t\t@Inject( PANEL_TOKEN ) public panel: Panel ){\n\n\t\t\tdataProvider\n\t\t\t\t.data$\n\t\t\t\t.subscribe( x => this.data.next( x?.datasets ?? [] ) );\n\n\t\t\tthis.widget.next( panel.widget );\n\t}\n\n\tdestroy(){\n\t\tthis.dataProvider.destroy();\n\t\tthis.widget.value.component = undefined;\n\t}\n}\n","import { Directive } from '@angular/core';\nimport { UIChart } from 'primeng';\nimport { Subscription } from 'rxjs';\nimport { ChartComponent } from '../chart.c';\nimport { Chart, ChartData, DataSet } from '../chart.m';\nimport { ChartStore } from './chart.store';\n\n@Directive() \nexport class BaseChartComponent {\n  data: ChartData;\n  widget: Chart;\n\n  get datasets():DataSet[]{\n    return this.data?.datasets;\n  }\n\n  dataSubs: Subscription;\n  widgetSubs: Subscription;\n\n  get component(): ChartComponent{\n    return this.widget.component;\n  }\n\n  get display(){\n    return this.store.display;\n  }\n\n\tconstructor( public store: ChartStore ){\n\n    this.dataSubs = store\n      .data$\n      .subscribe( x => this.data = { \n        datasets: x\n      } );\n\n    this.widgetSubs = store\n      .widget$\n      .subscribe( x => {\n        this.widget = x;\n\n        if( x ){\n          this.onWidgetReady();\n        }\n       } );\n  }\n\n  onWidgetReady(){\n\n  }\n  \n  ngOnDestroy(){\n    this.dataSubs?.unsubscribe();\n    this.widgetSubs?.unsubscribe();\n  }\n}\n","import { Directive } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Chart, Threshold} from '../chart.m';\nimport { ChartStore } from './chart.store';\n\n@Directive() \nexport class BaseChartExtension {\n\n  widgetSubs: Subscription;\n  widget: Chart;\n\n  constructor( public store: ChartStore ){\n    this.widgetSubs = store\n      .widget$\n      .subscribe( x => this.widget = x );\n  }\n\n  destroy(){\n    //console.log( \"destroy BaseChartExtension\" )\n    this.widgetSubs?.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { BaseChartExtension } from '../../base/chart-base-extension';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { AXIS_X, AXIS_Y_LEFT, AXIS_Y_RIGHT, Threshold,\r\n\tThresholdAxis, ThresholdColor, ThresholdOperator } from '../../chart.m';\r\n\r\n@Injectable()\r\nexport class ThresholdDrawerPlugin extends BaseChartExtension {\r\n\t\r\n\tconstructor( store: ChartStore ){\r\n\t\tsuper( store );\r\n\t}\r\n\r\n\tafterDatasetsDraw(chart, _) {\r\n\t\tthis\r\n\t\t\t.widget\r\n\t\t\t?.display\r\n\t\t\t?.thresholds\r\n\t\t\t.forEach( t => new ThresholdDrawer( chart, t ).draw() );\r\n\t}\r\n}\r\n\r\nclass ThresholdDrawer{\r\n\tget context(){\r\n\t\treturn this.chart.chart.ctx;\r\n\t}\r\n\r\n\tconstructor( private chart: any, private threshold: Threshold ){\r\n\t\t\r\n\t}\r\n\r\n\tdraw(){\r\n\t\tif( this.threshold.value == undefined ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst scaleYA = this.chart.scales[ AXIS_Y_LEFT ];\r\n\t\tconst scaleYB = this.chart.scales[ AXIS_Y_RIGHT ];\r\n\t\tconst scaleX = this.chart.scales[ AXIS_X ];\r\n\r\n\t\tconst scaleY = ( this.threshold.axis == ThresholdAxis.Right && scaleYB ) ?\r\n\t\t\tscaleYB : scaleYA;\r\n\r\n\t\tconst offset = scaleY.getPixelForValue(this.threshold.value);\r\n\r\n\t\tconst gt = ( this.threshold.operator == ThresholdOperator.Gt );\r\n\r\n\t\tconst shouldIgnore = \r\n\t\t\t( !gt && this.threshold.value < scaleY.min ) ||\r\n\t\t\t( gt && this.threshold.value > scaleY.max ) ||\r\n\t\t\t( !this.chart.data.datasets.length );\r\n\r\n\t\tif( shouldIgnore ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// if( offset < 0 || offset > scaleY.bottom ){\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\t//console.log( `${offset} | ${scaleY.bottom}` )  \r\n\r\n\t\tif( this.threshold.line ){\r\n\t\t\tconst lineColor = this.getColor( false );\r\n\t\t\tthis.renderLine( scaleX, lineColor, offset );\r\n\t\t}\r\n\r\n\t\tif( this.threshold.fill ){\r\n\t\t\tthis.renderRectangle( scaleX, scaleY, offset );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderLine(scaleX, color, offset ){\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.strokeStyle = color + \"99\";\r\n\t\tthis.context.lineWidth = 2;\r\n\t\tthis.context.moveTo( scaleX.left, offset);\r\n\t\tthis.context.lineTo( scaleX.right, offset);\r\n\t\tthis.context.stroke();\r\n\t}\r\n\r\n\tprivate renderRectangle( scaleX, scaleY, offset ){\r\n\t\tconst color = this.getColor( true );\r\n\r\n\t\tconst gt = ( this.threshold.operator == ThresholdOperator.Gt );\r\n\t\tthis.context.fillStyle = color + \"22\"\r\n\r\n\t\tconst x = scaleX.left;\r\n\t\tconst w = scaleX.width;\r\n\r\n\t\tconst topY = scaleY.getPixelForValue(scaleY.max);\r\n\t\tconst bottomY = scaleY.getPixelForValue(scaleY.min);\r\n\r\n\t\tconst y = gt ? topY : Math.max( topY, offset );\r\n\t\tlet h = gt ? offset - scaleY.top : scaleY.bottom - offset;\r\n\r\n\t\th = Math.min( bottomY - topY, h )\r\n\r\n\t\tthis.context.fillRect( x, y,\tw, h );\t\r\n\t}\r\n\r\n\tprivate getColor(fill){\r\n\t\tswitch( this.threshold.colorType ){\r\n\t\t\tcase ThresholdColor.Critical:\r\n\t\t\t\treturn '#ED2E18';\r\n\r\n\t\t\tcase ThresholdColor.Ok:\r\n\t\t\t\treturn '#10a345';\r\n\r\n\t\t\tcase ThresholdColor.Warning:\r\n\t\t\t\treturn '#f79520';\r\n\t\t}\r\n\r\n\t\tconst defaultColor = '#ffffff';\r\n\r\n\t\tif( fill ){\r\n\t\t\treturn this.threshold.fillColor ? this.threshold.fillColor : defaultColor;\r\n\t\t}\r\n\r\n\t\treturn this.threshold.lineColor ? this.threshold.lineColor : defaultColor;\r\n\t}\r\n}","import { Inject, Injectable } from '@angular/core';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { PixelHelper } from '../helpers/pixel-helper';\r\n\r\n\r\n@Injectable()\r\nexport class TrackballDrawerPlugin {\r\n\r\n\tconstructor( private store: ChartStore ){\r\n\r\n\t}\r\n\r\n\tafterDatasetsDraw(chart, easing) {\r\n\t\t//console.log( \"trackball plugin\" )\r\n\t\treturn;\r\n\t\t\r\n\t\tconst context = chart.chart.ctx;\r\n\r\n\t\tconst scaleX = chart.scales['x-axis-0'];\r\n\t\t\r\n\t\t//const scaleYA = chart.scales[ \"A\" ];\r\n\t\tconst scaleYA = chart.scales[ \"y-axis-0\" ];\r\n\r\n\t\tvar pos = this.getMousePos( chart.canvas, chart.trackball );\r\n\r\n\t\tconsole.log( pos );\r\n\r\n\t\tconst shouldIgnore = \r\n\t\t\t( !chart.trackball ) ||\r\n\t\t\t( 0 == chart.data.datasets.length ) ||\r\n\t\t\t( pos.x < scaleX.left || pos.x > scaleX.right );\r\n\r\n\t\tif( shouldIgnore ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst lw = 0.8;\r\n\t\tconst x = PixelHelper.alignPixel( chart, pos.x, lw )\r\n\t\tconst y1 = PixelHelper.alignPixel( chart, scaleYA.top, lw )\r\n\t\tconst y2 = PixelHelper.alignPixel( chart, scaleYA.bottom, lw )\r\n\r\n\t\tcontext.beginPath();\r\n\t\tcontext.strokeStyle = \"#880015\";\r\n\t\tcontext.lineWidth = lw;\r\n\t\tcontext.moveTo( x, y1 );\r\n\t\tcontext.lineTo( x, y2);\r\n\t\tcontext.stroke();\r\n\t}\r\n\r\n\tgetMousePos(canvas, evt) {\r\n\t\tif( !evt ){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n    var rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top\r\n    };\r\n\t}\r\n\r\n}","\r\nexport class PixelHelper {\r\n\tpublic static alignPixel( chart, pixel, width) {\r\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\r\n\t\tvar halfWidth = width / 2;\r\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n\t};\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Moment } from 'common';\r\nimport { BaseChartExtension } from '../../base/chart-base-extension';\r\nimport { ChartStore } from '../../base/chart.store';\r\nimport { AXIS_X, AXIS_Y_LEFT, TimeRegion, TimeRegionColor, TimeRegionDay } from '../../chart.m';\r\nimport { OptionsProvider } from '../options-provider';\r\n\r\n@Injectable()\r\nexport class TimeRegionsDrawerPlugin extends BaseChartExtension {\r\n\r\n\tafterDatasetsDraw(chart, _) {\r\n\t\tthis\r\n\t\t\t.widget\r\n\t\t\t?.display\r\n\t\t\t?.timeRegions\r\n\t\t\t.forEach( t => new TimeRegionDrawer( chart, t ).draw() );\r\n\t}\r\n\r\n\tconstructor( store: ChartStore ){\r\n\t\tsuper( store );\r\n\t}\r\n}\r\n\r\nclass TimeRegionDrawer{\r\n\r\n\tget context(){\r\n\t\treturn this.chart.chart.ctx;\r\n\t}\r\n\r\n\tconstructor( private chart: any, private timeRegion: TimeRegion ){\r\n\t\t\r\n\t}\r\n\t\r\n\tdraw(){\r\n\t\tconst scaleX = this.chart.scales[ AXIS_X ];\r\n\r\n\t\tconst minX = Moment.create( scaleX.min );\r\n\t\tconst maxX = Moment.create ( scaleX.max );\r\n\r\n\t\tthis\r\n\t\t\t.getSpans( minX, maxX )\r\n\t\t\t.forEach( x => {\r\n\t\t\t\tlet os = scaleX.getPixelForValue(x.start.toDate());\r\n\t\t\t\tlet oe = scaleX.getPixelForValue(x.end.toDate());\r\n\r\n\t\t\t\tif(! ( oe <  scaleX.left || os > scaleX.right ) ){\r\n\t\t\t\t\tos = Math.max( os, scaleX.left );\r\n\t\t\t\t\toe = Math.min( oe, scaleX.right );\r\n\r\n\t\t\t\t\tthis.renderRegion( os, oe );\r\n\t\t\t\t}\r\n\t\t\t} )\r\n\t}\r\n\r\n\tprivate getSpans( min, max ){\r\n\t\tconst borders = this.getSpanBorders( min, max );\r\n\t\tconst time = this.getTime();\r\n\r\n\t\treturn this.isSpecificDayOfWeek() ? \r\n\t\t\tthis.getSpansDayOfWeek( borders, time ) : \r\n\t\t\tthis.getSpansAny( borders, time )\r\n\t}\r\n\r\n\tprivate getTime(){\r\n\t\tconst isSpecificDayOfWeek = this.isSpecificDayOfWeek();\r\n\r\n\t\tlet inputFromTime = this.timeRegion.fromTime;\r\n\t\tlet inputToTime = this.timeRegion.toTime;\r\n\r\n\t\tconst timeFormat = \"HH:mm\";\r\n\r\n\t\tlet tf = Moment.create(inputFromTime, timeFormat);\r\n\t\tlet tt = Moment.create(inputToTime, timeFormat);\r\n\r\n\t\tif( !tf.isValid() && !tt.isValid() ){\r\n\t\t\tif( isSpecificDayOfWeek ){\r\n\t\t\t\tconst midnight = Moment.create( \"00:00\", timeFormat );\r\n\t\t\t\ttf = midnight.clone();\r\n\t\t\t\ttt = midnight.clone();\r\n\t\t\t}\r\n\t\t} else if( tf.isValid() && !tt.isValid() ){\r\n\t\t\ttt = tf.clone();\r\n\t\t} else if( !tf.isValid() && tt.isValid() ){\r\n\t\t\ttf = tt.clone();\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tfrom: ( tf.isValid() ) ? tf.toDate() : undefined,\r\n\t\t\tto: ( tt.isValid() ) ? tt.toDate() : undefined\r\n\t\t}\r\n\t}\r\n\tprivate getSpansDayOfWeek( borders, time ){\r\n\t\tconst max = borders.to;\r\n\t\tconst min = borders.from;\r\n\r\n\t\tvar current = min.clone();\r\n\t\tvar res = [];\r\n\r\n\t\tvar fromDayName = this.timeRegion.fromDay;//TimeRegionDay[  ]\r\n\t\tvar toDayName = this.timeRegion.toDay;//TimeRegionDay[  ];\r\n\t\t\r\n\t\twhile( current < max ){\r\n\t\t\tvar start = current.clone().day( fromDayName );\r\n\t\t\tvar end = start.clone().day( toDayName );\r\n\t\r\n\t\t\tif( end.isBefore( start ) ){\r\n\t\t\t\tend.add( 1, 'weeks' )\r\n\t\t\t}\r\n\r\n\t\t\tstart.set({\r\n\t\t\t\t'hour' : time.from.getHours(),\r\n\t\t\t\t'minute'  : time.from.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tend.set({\r\n\t\t\t\t'hour' : time.to.getHours(),\r\n\t\t\t\t'minute'  : time.to.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tres.push( { start, end } )\r\n\t\r\n\t\t\tcurrent.add( 1, 'weeks' );\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprivate getSpansAny( borders, time ){\r\n\t\tconst max = borders.to;\r\n\t\tconst min = borders.from;\r\n\r\n\t\tvar current = min.clone();\r\n\t\tvar res = [];\r\n\r\n\t\tif( !time.from && !time.to ){\r\n\t\t\treturn res;\r\n\t\t}\r\n\r\n\t\twhile( current < max ){\r\n\t\t\tvar start = current.clone().set({\r\n\t\t\t\t'hour' : time.from.getHours(),\r\n\t\t\t\t'minute'  : time.from.getMinutes()\r\n\t\t\t });\r\n\t\r\n\t\t\tvar end = current.clone().set({\r\n\t\t\t\t'hour' : time.to.getHours(),\r\n\t\t\t\t'minute'  : time.to.getMinutes()\r\n\t\t\t });\r\n\r\n\t\t\tif( end.isBefore( start ) ){\r\n\t\t\t\tend.add( 1, 'days' );\r\n\t\t\t}\r\n\r\n\t\t\tres.push( { start, end } )\r\n\t\r\n\t\t\tcurrent.add( 1, 'days' );\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprivate getSpanBorders( min, max ){\r\n\t\tconst margin = this.isSpecificDayOfWeek() ? 8 : 1;\r\n\r\n\t\tconst from = min\r\n\t\t\t.clone()\r\n\t\t\t.subtract( margin, 'days' )\r\n\t\t\t.startOf( 'day' );\r\n\r\n\t\tconst to = max\r\n\t\t\t.clone()\r\n\t\t\t.add( margin, 'days' )\r\n\t\t\t.endOf( 'day' );\r\n\r\n\t\treturn { from, to }\r\n\t}\r\n\r\n\tprivate isSpecificDayOfWeek(){\r\n\t\treturn ( this.timeRegion.fromDay != TimeRegionDay.Any ) ||\r\n\t\t\t( this.timeRegion.toDay != TimeRegionDay.Any );\r\n\t}\r\n\r\n\tprivate renderRegion( offsetStart, offsetEnd){\r\n\r\n\t\tconst scaleYA = this.chart.scales[ AXIS_Y_LEFT ];\r\n\t\tconst scaleX = this.chart.scales[ AXIS_X ];\r\n\r\n\t\tconst minY = scaleYA.top;\r\n\t\tconst maxY = scaleYA.bottom;\r\n\r\n\t\tif( this.timeRegion.line ){\r\n\t\t\tif( scaleX.left != offsetStart ){\r\n\t\t\t\tthis.renderLine( minY, maxY, offsetStart );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( scaleX.right != offsetEnd && offsetEnd != offsetStart){\r\n\t\t\t\tthis.renderLine( minY, maxY, offsetEnd );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.timeRegion.fill && offsetEnd != offsetStart  ){\r\n\t\t\tthis.renderRectangle( minY, maxY, offsetStart, offsetEnd );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderLine( minY, maxY, offset ){\r\n\t\tconst color = this.getColor( false );\r\n\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.strokeStyle = color + \"99\";\r\n\t\tthis.context.lineWidth = 2;\r\n\t\tthis.context.moveTo( offset, minY );\r\n\t\tthis.context.lineTo( offset, maxY );\r\n\t\tthis.context.stroke();\r\n\t}\r\n\r\n\tprivate renderRectangle( minY, maxY, offsetStart, offsetEnd  ){\r\n\t\tconst color = this.getColor( true );\r\n\t\t\r\n\t\tthis.context.fillStyle = color + \"22\"\r\n\r\n\t\tconst x = offsetStart;\r\n\t\tconst w = offsetEnd - offsetStart;\r\n\r\n\t\tconst y = minY;\r\n\t\tconst h = maxY - minY;\r\n\r\n\t\tthis.context.fillRect( x, y,\tw, h );\t\r\n\t}\r\n\r\n\tprivate getColor( fill){\r\n\t\tswitch( this.timeRegion.colorType ){\r\n\t\t\tcase TimeRegionColor.Red:\r\n\t\t\t\treturn '#ED2E18';\r\n\r\n\t\t\tcase TimeRegionColor.Green:\r\n\t\t\t\treturn '#10a345';\r\n\r\n\t\t\tcase TimeRegionColor.Blue:\r\n\t\t\t\treturn '#1f78c1';\r\n\r\n\t\t\tcase TimeRegionColor.Yellow:\r\n\t\t\t\treturn '#f79520';\r\n\r\n\t\t\tcase TimeRegionColor.Gray:\r\n\t\t\t\treturn '#fce2de';\r\n\t\t}\r\n\r\n\t\tconst defaultColor = '#ffffff';\r\n\r\n\t\tif( fill ){\r\n\t\t\treturn this.timeRegion.fillColor ? this.timeRegion.fillColor : defaultColor;\r\n\t\t}\r\n\r\n\t\treturn this.timeRegion.lineColor ? this.timeRegion.lineColor : defaultColor;\r\n\t}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ThresholdDrawerPlugin } from './thresholds';\r\nimport { TimeRegionsDrawerPlugin } from './time-regions';\r\nimport { TrackballDrawerPlugin } from './trackball';\r\n\r\n@Injectable()\r\nexport class ExtensionsManager {\r\n\t\r\n\tget list() : ChartJsExtension[] {\r\n\t\treturn [\r\n\t\t\tthis.thresholds,\r\n\t\t\tthis.timeRegions\r\n\t\t]\r\n\t}\r\n\r\n\tconstructor( \r\n\t\tprivate thresholds: ThresholdDrawerPlugin,\r\n\t\tprivate trackball: TrackballDrawerPlugin,\r\n\t\tprivate timeRegions: TimeRegionsDrawerPlugin ){\r\n\r\n\t}\r\n\r\n\tdestroy(){\r\n\t\tthis.list.forEach( x => x.destroy() );\r\n\t}\r\n}\r\n\r\nexport interface ChartJsExtension{\r\n\tafterDatasetsDraw(chart, easing);\r\n\tdestroy();\r\n}","<div class=\"chart__wrapper\">\n\n  <div class=\"chart__right-legend-cont\">\n\n    <div class=\"chart__canvas-cont\">\n      <p-chart \n        type=\"line\"\n        [data]=\"data\"\n        [options]=\"options\"\n        [plugins]=\"plugins\"\n        height=\"100%\" #chart>\n      </p-chart>\n    </div>\n\n    <chart-legend *ngIf=\"legend.show && legend?.right\" class=\"chart__legend-right\"></chart-legend>\n    \n  </div>\n\n  <chart-legend *ngIf=\"legend.show && !legend?.right\" class=\"chart__legend-bottom\"></chart-legend>\n\n</div>\n\n","import { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { DataProvider } from './view/data/data-provider';\nimport { OptionsProvider } from './view/options-provider';\nimport { DataConverter } from './view/data/data-converter';\nimport { DisplayManager } from './view/display-manager';\nimport { ChartStore } from './base/chart.store';\nimport { UIChart } from 'primeng';\nimport { BaseChartComponent } from './base/chart-base';\nimport { ChartJsExtension, ExtensionsManager } from './view/drawers/extensions-manager';\nimport { TrackballDrawerPlugin } from './view/drawers/trackball';\nimport { ThresholdDrawerPlugin } from './view/drawers/thresholds';\nimport { TimeRegionsDrawerPlugin } from './view/drawers/time-regions';\n\n@Component({\n  selector: 'widget',\n  templateUrl:'./chart.html',\n  styleUrls: ['./chart.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers:[\n    DataProvider,\n    DataConverter,\n    DisplayManager,\n    ChartStore,\n    \n    ExtensionsManager,\n    TrackballDrawerPlugin,\n    ThresholdDrawerPlugin,\n    TimeRegionsDrawerPlugin\n  ]\n})\nexport class ChartComponent extends BaseChartComponent {\n  \n  options: any;\n  plugins: ChartJsExtension[];\n  @ViewChild( UIChart ) control;\n\n  get legend(){\n    return this.widget?.legend;\n  }\n\n  constructor( store: ChartStore, private extensions: ExtensionsManager ) {\n    super( store )\n\n    this.options = OptionsProvider.getOptions( this );\n\n    this.plugins = extensions.list;\n  }\n\n  ngAfterViewInit(){\n    this.widget.component = this;\n  }\n\n  ngOnDestroy(){\n    this.store.destroy();\n    this.extensions.destroy();\n  }\n}\n","<div class=\"legend__top-wrapper\">\n\n\t<div *ngIf=\"!legend.table; else legendAsTable\" class=\"legend__bottom\"    >\n\t\t<perfect-scrollbar>\n\t\t\t\t\n\t\t\t<div class=\"legend__scroller-cont\"  >\n\n\t\t\t\t<div class=\"legend__series-wrapper\" [@fadeInOut] *ngIf=\"datasets?.length\"  >\n\t\t\t\t\t<div *ngFor=\"let ds of filteredDatasets\" class=\"legend__series\"\n\t\t\t\t\t (click)=\"onSeriesClicked(ds, $event)\" [ngClass]=\"{'hidden': ds.hidden }\">\n\n            <div class=\"legend__icon\" [style.color]=\"color( ds )\">\n              <i class=\"fa fa-minus pointer\" ></i>\n            </div>\n              \n            <a class=\"legend__alias pointer\" [title]=\"ds.label\">{{ds.label}}</a>\n\n            <div class=\"legend__value min\" *ngIf=\"legend.min\">{{min(ds)}}</div>\n\n            <div class=\"legend__value max\" *ngIf=\"legend.max\">{{max(ds)}}</div>\n\n            <div class=\"legend__value avg\" *ngIf=\"legend.avg\">{{avg(ds)}}</div>\n\n\t\t\t\t\t\t<div class=\"legend__value current\" *ngIf=\"legend.current\">{{current(ds)}}</div>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"legend__scroller-padding\"></div>\n\t\t\t</div>\n\n\t\t</perfect-scrollbar>\n  </div>\n  \n  <ng-template #legendAsTable>\n\t\t\n    <div class=\"legend__bottom-table\" > \n\t\t\t<perfect-scrollbar>\n\n\t\t\t\t<div class=\"legend__scroller-cont\" [@fadeInOut] *ngIf=\"datasets?.length\">\n\n\t\t\t\t\t<div class=\"legend__series-wrapper legend__full-width\">\n\t\t\t\t\t\t<table class=\"legend__full-width\">\n\t\t\t\t\t\t\t<colgroup>\n\t\t\t\t\t\t\t\t<col class=\"legend__full-width\">\n\t\t\t\t\t\t\t</colgroup>\n\n\t\t\t\t\t\t\t<thead *ngIf=\"datasets && datasets.length > 0\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th style=\"text-align: left;\"></th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.min\">min</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.max\">max</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.avg\">avg</th>\n\t\t\t\t\t\t\t\t\t<th class=\"pointer\" *ngIf=\"legend.current\">current</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr *ngFor=\"let ds of filteredDatasets\" class=\"legend__series\" [ngClass]=\"{'hidden': ds.hidden }\">\n\n\t\t\t\t\t\t\t\t\t<td (click)=\"onSeriesClicked(ds, $event)\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"legend__icon\" [style.color]=\"color(ds)\">\n\t\t\t\t\t\t\t\t\t\t\t<i class=\"fa fa-minus pointer\" ></i>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<div class=\"legend__alias pointer\" [title]=\"ds.label\">{{ds.label}}</div>\n\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.min\">{{min(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.max\">{{max(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.avg\">{{avg(ds)}}</td>\n\n\t\t\t\t\t\t\t\t\t<td class=\"legend__value\" *ngIf=\"legend.current\">{{current(ds)}}</td>\n\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"legend__scroller-padding\"></div>\n\n\t\t\t\t</div>\n\t\t\t</perfect-scrollbar>\n\t\t</div>\n  </ng-template>\n\n</div>","import { Component, ViewEncapsulation } from '@angular/core';\nimport { FadeInOutAnimation } from 'uilib';\nimport { BaseChartComponent } from '../../base/chart-base';\nimport { ChartStore } from '../../base/chart.store';\nimport { AXIS_Y_LEFT, DataSet } from '../../chart.m';\nimport { AxisUnitHelper } from '../helpers/unit-helper';\n\n@Component({\n  selector: 'chart-legend',\n  templateUrl: './legend.html',\n  styleUrls:[ './legend.scss' ],\n\tanimations: [FadeInOutAnimation],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class ChartLegendComponent extends BaseChartComponent {\n\n  get legend(){\n    return this.widget.legend;\n\t}\n\t\n\tget filteredDatasets(){\n\t\tlet datasets = this.datasets.filter( ds => ds.legend );\n\n\t\tif( this.legend.hideOnlyZeroes ){\n\t\t\tdatasets = datasets.filter( x => !x.allZeros );\n\t\t}\n\n\t\tif( this.legend.hideOnlyNulls ){\n\t\t\tdatasets = datasets.filter( x => !x.allNulls );\n\t\t}\n\n\t\treturn datasets;\n\t}\n\n  constructor( store: ChartStore ) {\n    super( store );\n  }\n\n  axis( ds: DataSet ){\n\t\tconst axes = this.widget.axes;\n    return ( ds.yAxisID == AXIS_Y_LEFT ) ? axes.leftY :axes.rightY;\n  }\n  \n  decimals( ds: DataSet ){\n\t\treturn this.legend.decimals ? this.legend.decimals : 0;\n\t}\n\n  unit( ds: DataSet ){\n\t\treturn this.axis( ds ).unit;\n  }\n  \n  color( ds: DataSet ){\n    return this\n\t\t  .display\n\t\t\t.getLineColor( ds, 1 );\n\t}\n\n  min( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.min, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tmax( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.max,\tthis.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tavg( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.avg, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\tcurrent( ds: DataSet ){\n\t\treturn AxisUnitHelper.getFormattedValue( ds.current, this.unit( ds ), this.decimals( ds ) )\n\t}\n\n\n  onSeriesClicked( ds: DataSet, e: any ){\n    if( e.ctrlKey ){\n\t\t\tconst selected = ( false == ds.selected );\n\n\t\t\tthis.toggleSeries( ds, selected );\n\t\t} else{\n\t\t\tconst selected = ( ( undefined === ds.selected ) || false == ds.selected ) ?\n\t\t\t\ttrue : undefined;\n\n\t\t\tthis.toggleSeries( ds, selected );\n\t\n\t\t\tthis\n\t\t\t\t.datasets\n\t\t\t\t.filter( x => x != ds )\n\t\t\t\t.forEach( x => this.toggleSeries( x,  true == selected ? false : undefined ) );\n\t\t}\n\t\n\t\tthis.component.control.refresh();\n  }\n\n  toggleSeries( ds: DataSet, selected: boolean ){\n\t\tds.selected = selected;\n\n\t\tif( undefined === selected ){\n\t\t\tdelete ds.hidden;\n\t\t\tdelete ds.selected;\n\t\t} else {\n\t\t\tds.hidden = !selected;\n\t\t}\n\t}\n  \n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EdCommonModule } from 'common';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ChartModule } from 'primeng';\nimport { EdUilibModule } from 'uilib';\nimport { ChartComponent } from './chart.c';\nimport { AlertEditorComponent } from './edit/alert/alert';\nimport { AlertConfigEditorComponent } from './edit/alert/config/alert-config';\nimport { AlertConditionEditorComponent } from './edit/alert/config/conditions/cond';\nimport { AlertHistoryEditorComponent } from './edit/alert/history/alert-history';\nimport { AlertNotificationsEditorComponent } from './edit/alert/notifications/alert-nots';\nimport { AxesEditorComponent } from './edit/axes/axes';\nimport { AxisXEditorComponent } from './edit/axes/x-axis/x-axis';\nimport { AxisYEditorComponent } from './edit/axes/y-axis/y-axis';\nimport { DisplayEditorComponent } from './edit/display/display';\nimport { DrawOptionsEditorComponent } from './edit/display/draw-options/options';\nimport { SeriesOverrideEditorComponent } from './edit/display/series-overrides/override';\nimport { SeriesOverridesEditorComponent } from './edit/display/series-overrides/overrides';\nimport { ThresholdEditorComponent } from './edit/display/thresholds/threshold';\nimport { ThresholdsEditorComponent } from './edit/display/thresholds/thresholds';\nimport { TimeRegionEditorComponent } from './edit/display/time-regions/time-region';\nimport { TimeRegionsEditorComponent } from './edit/display/time-regions/time-regions';\nimport { ChartEditorComponent } from './edit/editor';\nimport { GeneralEditorComponent } from './edit/general/general';\nimport { LegendEditorComponent } from './edit/legend/legend';\nimport { MetricsEditorComponent } from './edit/metrics/metrics';\nimport { TimeEditorComponent } from './edit/time/time';\nimport { ChartLegendComponent } from './view/legend/legend';\n\n@NgModule({\n  declarations: [\n    ChartComponent,\n    ChartEditorComponent,\n\n    ChartLegendComponent,\n\n    AxesEditorComponent,\n    AxisXEditorComponent,\n    AxisYEditorComponent,\n\n    GeneralEditorComponent,\n    MetricsEditorComponent,\n    \n    LegendEditorComponent,\n\n    DisplayEditorComponent,\n    DrawOptionsEditorComponent,\n\n    ThresholdsEditorComponent,\n    ThresholdEditorComponent,\n\n    SeriesOverridesEditorComponent,\n    SeriesOverrideEditorComponent,\n    \n    TimeRegionsEditorComponent,\n    TimeRegionEditorComponent,\n\n    TimeEditorComponent,\n\n    AlertEditorComponent,\n    AlertConfigEditorComponent,\n    AlertConditionEditorComponent,\n    AlertHistoryEditorComponent,\n    AlertNotificationsEditorComponent,\n\n\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ChartModule,\n\n    EdCommonModule,\n    EdUilibModule,\n    PerfectScrollbarModule\n  ],\n  exports: [\n    ChartComponent,\n    ChartEditorComponent\n  ],\n \n \n})\nexport class ChartWidgetModule { }\n"]}